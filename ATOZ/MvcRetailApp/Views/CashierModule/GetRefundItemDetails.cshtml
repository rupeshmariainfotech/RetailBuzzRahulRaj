@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "GetRefundItemDetails";
}

<!--custom Alerts-->
<link href="~/Content/customAlerts.css" rel="stylesheet" />
<script src="~/Scripts/bootbox.js"></script>

<script type="text/javascript">
    function infoBox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('infoClass');
        bootbox.alert('<i class="fa fa-2x fa-info-circle"></i><br>' + message + '<hr>');
    }
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }

    function confirmbox(message, row) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone2.ogg';
        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('confirmClass');
        bootbox.confirm('<i class="fa fa-2x fa-question-circle"></i><br>' + message + '<hr>',
		 function (result) {
		     if (result) {
		         $("#" + row).remove();
		         var rowid = document.getElementById("hdnRowCount").value;
		         CalculateItemWiseAmount(rowid, '');
		         var rowid = document.getElementById("hdnRowCount").value;
		         var totalamount = 0;
		         for (var i = 1; i <= rowid; i++) {
		             var amount = "amount" + i;
		             if (document.getElementById(amount) != null) {
		                 totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
		             }
		         }

		         document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
		     }
		 });
    }
</script>

<script type="text/javascript">
    $(function () {
        var ttladvancepayment = +document.getElementById("TotalAdvancePayment").innerHTML;
        document.getElementById("TotalAdvancePayment").innerHTML = "<i class='fa fa-inr'></i>" + " " + addCommas(ttladvancepayment.toFixed(2));
        var grandtotal = +document.getElementById("GrandTotal").innerHTML;
        document.getElementById("GrandTotal").innerHTML = "<i class='fa fa-inr'></i>" + " " + addCommas(grandtotal.toFixed(2));
        var remainadv = +document.getElementById("RemainingAdvance").innerHTML;
        document.getElementById("RemainingAdvance").innerHTML = "<i class='fa fa-inr'></i>" + " " + addCommas(remainadv.toFixed(2));
        var advbal = +document.getElementById("AdvanceBalance").innerHTML;
        document.getElementById("AdvanceBalance").innerHTML = "<i class='fa fa-inr'></i>" + " " + addCommas(advbal.toFixed(2));
    });
</script>

<script type="text/javascript">
    function CalcBalAfterRefund() {
        var remainingadv = +(document.getElementById("ActualRemainingAdvance").value);
        var refundamt = +(document.getElementById("Refund").value);
        if (refundamt == 0) {
            alertbox("Refund Can Not Be Zero..");
            document.getElementById("Refund").value = "";
        }
        else {
            if (refundamt <= remainingadv) {
                var balamt = remainingadv - refundamt;
                document.getElementById("AdvanceBalance").innerHTML = balamt.toFixed(2);
                document.getElementById("AdvanceBalanceVal").value = balamt.toFixed(2);

                document.getElementById("InwordsLable").style.display = 'inline';
                document.getElementById("Inwords").innerHTML = NumberToWords();
                document.getElementById("TypeOfPaymentLabel").style.display = 'inline';
                document.getElementById("TypeOfPaymentDiv").style.display = 'inline';
                document.getElementById("verticalline2").style.display = 'inline';
            }
            else {
                alertbox("Can Not Exceed Remaining Advance For Refund..");
                document.getElementById("Refund").value = "";
            }
        }
    }
</script>

<audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
         <source src="" type="audio/ogg" />
    </audio>

<table style="border: 1px double; width: 100%">
    <tr>
        <td>
            <div class="col-md-12 col-lg-12">
                <table class="table">
                    <thead>
                        <tr>
                            <th>S.N.</th>
                            <th>Item Code</th>
                            <th>Item Name</th>
                            <th>Color</th>
                            <th>Unit</th>
                            <th style="text-align: right">Qty</th>
                            <th style="text-align: right">Rate</th>
                            <th style="text-align: right">Disc<br />
                                (%)</th>
                            <th style="text-align: right">Disc<br />
                                (<i class="fa fa-inr"></i>)</th>
                            <th style="text-align: right">Tax<br />
                                (%)</th>
                            <th style="text-align: right">Amt<br />
                                (<i class="fa fa-inr"></i>)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (Model.SalesOrderItemList != null && Model.SalesOrderItemList.Any())
                            {
                                string row1 = string.Empty;
                                int rowid = 1;

                                foreach (var item in Model.SalesOrderItemList)
                                {
                                    row1 = "row" + rowid;
                            <tr id="@row1">
                                @{
                                    double Qty = Convert.ToDouble(@item.Quantity);
                                    var quantity = Qty.ToString("#,###.00##");
                                    double Rate = Convert.ToDouble(@item.SellingPrice);
                                    var rate = Rate.ToString("#,###.00##");
                                    double disrs = Convert.ToDouble(@item.DisInRs);
                                    var DisRs = disrs.ToString("#,###.00##");
                                    double disper = Convert.ToDouble(@item.DisInPercent);
                                    var DisPer = disper.ToString("#,###.00##");
                                    double tax = Convert.ToDouble(@item.ItemTax);
                                    var Tax = tax.ToString("#,###.00##");
                                    double Amt = Convert.ToDouble(@item.Amount);
                                    var amount = Amt.ToString("#,###.00##");
                                    double proptax = Convert.ToDouble(@item.PropTax);
                                    var PropTax = proptax.ToString("#,###.00##");
                                }
                                <td>@rowid</td>
                                <td>@item.ItemCode</td>
                                <td>@item.ItemName</td>
                                <td>@item.Color</td>
                                <td>@item.Unit</td>
                                <td style="text-align: right">@quantity</td>
                                <td style="text-align: right">@rate</td>
                                <td style="text-align: right">@DisPer</td>
                                <td style="text-align: right">@DisRs</td>
                                <td style="text-align: right">@Tax</td>
                                <td style="text-align: right">@amount</td>
                            </tr>
                                    rowid = rowid + 1;
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </td>
    </tr>
</table>
<br />

@{
    if (Model.SalesOrderDetails != null)
    {
    <div class="col-lg-7 col-md-7"></div>
    <div class="col-lg-5 col-md-5">
        <div class="row">
            <div class="col-lg-7 col-md-7" style="text-align: right">
                <label style="font-size: 14px;">Grand Total:</label>
            </div>
            <div class="col-lg-5 col-md-5" style="text-align: right">
                <label id="GrandTotal" style="font-size: 14px;">@Html.DisplayFor(model => model.SalesOrderDetails.GrandTotal)</label>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-7 col-md-7" style="text-align: right">
                <label style="font-size: 14px;">Total Advance Payment:</label>
            </div>
            <div class="col-lg-5 col-md-5" style="text-align: right">
                <label id="TotalAdvancePayment" style="font-size: 14px;">@Html.DisplayFor(model => model.SalesOrderDetails.TotalAdvancePayment)</label>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-7 col-md-7" style="text-align: right">
                <label style="font-size: 14px;">Remaining Advance:</label>
            </div>
            <div class="col-lg-5 col-md-5" style="text-align: right">
                <label id="RemainingAdvance" style="font-size: 14px; color: red">@Html.DisplayFor(model => model.SalesOrderDetails.RemainingAdvance)</label>
                <input type="hidden" id="ActualRemainingAdvance" name="ActualRemainingAdvance" value="@Model.SalesOrderDetails.RemainingAdvance"/>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-7 col-md-7" style="text-align: right">
                <label style="font-size: 14px;">Refund Amount:<i style="color: red">*</i></label>
            </div>
            <div class="col-lg-5 col-md-5" style="text-align: right">
                @Html.TextBoxFor(model => model.CashierPayableDetails.RefundAmount, new { id = "Refund", @class = "form-control", @placeholder = "Refund", @style = "text-align:right", @onkeypress = "return AllowNumbers(event)", @onchange = "CalcBalAfterRefund()" })
            </div>
        </div>
    </div>
    }
         
    <div class="col-lg-12 col-md-12" id="InwordsLable" style="display: none">
        <label style="font-size: 14px">In Words:</label>
        <label id="Inwords"></label>
    </div>
                              
    <div class="col-lg-7 col-md-7"></div>
    <div class="col-lg-5 col-md-5">
        <div class="row">
            <div class="col-lg-7 col-md-7" style="text-align: right">
                <label style="font-size: 14px;" id="BalLabel">Advance Balance:</label>
            </div>
            <div class="col-lg-5 col-md-5" style="text-align: right">
                <label id="AdvanceBalance" style="font-size: 14px;">@Html.DisplayFor(model => model.SalesOrderDetails.RemainingAdvance)</label>
                <input type="hidden" id="AdvanceBalanceVal" name="AdvanceBalanceVal" />
            </div>
        </div>
    </div>
}

