@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "Create";
}
<meta charset="utf-8" />
<title>Retail Managment Software</title>
<meta name="keywords" content="Retail Software" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<!-- Font CSS  -->
<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700" />
<link href="~/Content/style.default.css" rel="stylesheet" />
<link href="~/Content/style.default.blue.css" rel="stylesheet" />
<!-- Core CSS  -->
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.min.css" />
<link rel="stylesheet" type="text/css" href="~/Content/sb-admin-2.css" />
<link rel="stylesheet" type="text/css" href="~/Content/metisMenu.min.css" />
<link rel="stylesheet" type="text/css" href="~/Content/font-awesome.css" />
<link rel="stylesheet" type="text/css" href="~/fonts/glyphicons.min.css" />

<!-- Plugin CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/fullcalendar.css" />
<link rel="stylesheet" type="text/css" href="~/Content/datatables.min.css" />
@*<link rel="stylesheet" type="text/css" href="~/Content/animate.css" />*@

<!-- Theme CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/theme.css" />
<link rel="stylesheet" type="text/css" href="~/Content/pages.css" />
<link rel="stylesheet" type="text/css" href="~/Content/plugins.css" />
<link rel="stylesheet" type="text/css" href="~/Content/responsive.css" />

<!-- Demonstration CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/demo.css" />

<!-- Your Custom CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/custom.css" />

<!-- Favicon -->
<link rel="shortcut icon" href="~/Images/favicon.ico" />

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

<!-- Plugins - Via CDN -->
<script type="text/javascript" src="~/Scripts/jquery.flot.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.sparkline.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="~/Scripts/fullcalendar.min.js"></script>
<script type="text/javascript" src="~/Scripts/bootstrap.js"></script>


<script type="text/javascript" src="~/Scripts/jquery.scrollTo-1.4.3.1-min.js"></script>

<!-- Theme Javascript -->
<script type="text/javascript" src="~/Scripts/uniform.min.js"></script>
<script type="text/javascript" src="~/Scripts/main.js"></script>
<script type="text/javascript" src="~/Scripts/custom.js"></script>
<script type="text/javascript" src="~/Scripts/sb-admin-2.js"></script>
<script type="text/javascript" src="~/vendor/plugins/metisMenu/metisMenu.min.js"></script>

<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.css")" />
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.min.css")" />
<script type="text/javascript" src="@Url.Content("~/Scripts/jsDatePick.min.1.3.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jsDatePick.jquery.min.1.3.js")"></script>

<link href="~/Content/customAlerts.css" rel="stylesheet" />
<script src="~/Scripts/bootbox.js"></script>

<script type="text/javascript">
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }
</script>

<script type="text/javascript">
    jQuery(document).ready(function () {

        // Init Theme Core 	  
        Core.init();

        $.ajax({
            url: '/Company/CreateBankDetails',
            type: "GET",
            success: function (data) {
                if (data != null) {
                    document.getElementById("list").style.display = "inline";
                    $("#list").html(data);
                }
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("select").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("textarea").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
    });
</script>
<script type="text/javascript">
    $(function () {
        $("#companydetails_companyName").autocomplete({
            source: "/Company/GetCompanyNamesWithCodes",
            minLength: 1,
            select: function (event, ui) {
                if (ui.item) {
                    $("#companydetails_companyName").val(ui.item.value);
                    var selectedcompany = $("#companydetails_companyName").val();
                    companycode = selectedcompany.substr(0, 9);
                    $.getJSON("/Company/GetCompanyDetails", { code: companycode },
                    function (data) {
                        $("#companydetails_companyName").val(selectedcompany.substr(10));
                        $("#companydetails_address").val(data.address);
                        $("#companydetails_CompanyRegisterationDate").val(data.registrationdate);
                        $("#companydetails_MailingAddress").val(data.MailingAddress);
                        $("#companydetails_pincode").val(data.pincode);
                        $("#companydetails_ContactNo1").val(data.ContactNo1);
                        $("#companydetails_ContactNo2").val(data.ContactNo2);
                        $("#companydetails_ContactNo3").val(data.ContactNo3);
                        $("#companydetails_eMail").val(data.eMail);
                        $("#ddlState").val(data.stateid).attr("selected", true);

                        var dat = new Date(data.registrationdate);
                        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
                        var date = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
                        $("#companydetails_CompanyRegisterationDate").val(date);

                        $.getJSON("/Company/LoadCityByState", { id: data.stateid },
            function (stateData) {
                var select = $("#ddlCity");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Select a City"
                }));
                $.each(stateData, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
                $("#ddlCity").val(data.cityid).attr("selected", "selected");
            });
                        $("#companydetails_panCard").val(data.panCard);
                        $("#companydetails_salesTaxNo").val(data.salesTaxNo);
                        $("#companydetails_website").val(data.website);
                        $("#companydetails_vatNo").val(data.vatNo);
                        $("#companydetails_regNo").val(data.regNo);
                    });
                }
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#companydetails_eMail").change(function () {
            var idmodel = $(this).val();
            $.getJSON("/Company/ValidateEmail", { mail: idmodel },
            function (Data) {
                if (Data == "success") {
                    document.getElementById("errormsg").innerHTML = "Email Id Is Already Registered!!!";
                    $("#companydetails_eMail").val('');
                }
                else {
                    document.getElementById('errormsg').innerHTML = "";
                }
            });
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#Submit").click(function () {
            setTimeout(function () {
                var error = 0;
                if (document.getElementById("name").innerHTML != "" || document.getElementById("state").innerHTML != "" || document.getElementById("city").innerHTML != "" ||
                    document.getElementById("address").innerHTML != "" || document.getElementById("contact1").innerHTML != "" || document.getElementById("email").innerHTML != "" ||
                    document.getElementById("companydetails_FinancialYearFrom").value == "" || document.getElementById("companydetails_FinancialYearTo").value == "" || document.getElementById("salestax").innerHTML != "" ||
                    document.getElementById("pincode").innerHTML != "" || document.getElementById("website").innerHTML != "" || document.getElementById("vat").innerHTML != "" ||
                    document.getElementById("regno").value == "" || document.getElementById("regdate").innerHTML != "") {
                    error++;
                }
                else {
                    if (document.getElementById("contact2").innerHTML != "") {
                        error++;
                    }
                    else if (document.getElementById("contact3").innerHTML != "") {
                        error++;
                    }
                    if (document.getElementById("accounttype").innerHTML != "") {
                        error++;
                    }
                    else if (document.getElementById("accountno").innerHTML != "") {
                        error++;
                    }
                    else if (document.getElementById("micr").innerHTML != "") {
                        error++;
                    }
                    else if (document.getElementById("branch").innerHTML != "") {
                        error++;
                    }
                }
                if (error == 0) {
                    $("#Submit").attr("disabled", true);
                }
                else {
                    return false;
                }
            }, 500);

        });
    });
</script>


<script type="text/javascript">
    $(document).ready(function () {
        $("#companydetails_address").change(function () {
            var txt = document.getElementById("companydetails_address").value;
            txt = txt.replace(/\w\S*/g, function (txt) {
                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
            });
            document.getElementById("companydetails_address").value = txt;
        });
    });
</script>

<script type="text/javascript">
    function bank() {
        $.ajax({
            url: '/Company/CreateBankDetails',
            type: "POST",
            data: {
                bankname: document.getElementById("ddlBankNames").value,
                branch: document.getElementById("ddlBranchname").value,
                companycode: document.getElementById("companydetails_CompanyCode").value,
                bankifscno: document.getElementById("compbankdetails_BankIfsc").value,
                bankaddress: document.getElementById("compbankdetails_BankLocation").value,
                accountno: document.getElementById("compbankdetails_AccountNo").value,
                accounttype: document.getElementById("compbankdetails_AccountType").value,
                micr: document.getElementById("compbankdetails_MICRCode").value,
            },
            success: function (data) {
                if (data != null) {
                    $("#list").html(data);
                }
            }
        });
    }
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlState").change(function () {
            var idModel = $(this).val();
            $.getJSON("/Company/LoadCityByState", { id: idModel },
            function (stateData) {
                var select = $("#ddlCity");
                select.empty();
                select.append($('<option/>', {
                    value: "",
                    text: "Select a City"
                }));
                $.each(stateData, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });

        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#contactNo').keyup(function () {
            if (this.value.match(/[^0-9]/g)) {
                this.value = this.value.replace(/[^0-9]/g, '');
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#pincode').keyup(function () {
            if (this.value.match(/[^0-9]/g)) {
                this.value = this.value.replace(/[^0-9]/g, '');
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("select").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("textarea").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
    });
</script>
<script type="text/javascript">
    window.onload = function () {
        new JsDatePick({
            useMode: 2,
            target: "companydetails_CompanyRegisterationDate",
            dateFormat: "%d/%M/%Y"
        });

        new JsDatePick({
            useMode: 2,
            target: "companydetails_FinancialYearFrom",
            dateFormat: "%d/%M/%Y"
        });

        new JsDatePick({
            useMode: 2,
            target: "companydetails_FinancialYearTo",
            dateFormat: "%d/%M/%Y"
        });
    };
</script>

<!-- Start: Header -->
@Html.Partial("../Shared/Header")
<!-- End: Header -->
<!-- Start: Main -->
<section>
    <div class="mainwrapper">
        <!-- Start: Sidebar -->
        @Html.Partial("../Shared/LeftMenu")
        <!-- Start: Content -->
        @using (Html.BeginForm("Create", "Company", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmCreate" }))
        {
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.companydetails.CompanyCode)
            <div class="mainpanel">
                <div class="col-md-12 col-lg-12">
                    <audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
                        <source src="" type="audio/ogg" />
                    </audio>
                    <br />
                    <h2><strong>Company</strong> Details</h2>
                    <div class="col-md-12 col-lg-12">
                        <div class="row">
                            <div class=" col-lg-3">
                                <div class=" col-lg-12">
                                    <div class="form-group row">
                                        <label for="exampleInputname">Company Name<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.companyName, new { @placeholder = "Company Name", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.companyName, null, new { @style = "color:red", @id = "name" })
                                    </div>

                                    <div class="form-group row">
                                        <label for="exampleInputname">Company Registration Date</label>
                                        @Html.TextBoxFor(model => model.companydetails.CompanyRegisterationDate, new { @placeholder = "Company Registration Date", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.CompanyRegisterationDate, null, new { @style = "color:red", @id = "regdate" })
                                    </div>

                                    <div class="form-group row">
                                        <label for="exampleInputname">Address<i style="color: red">*</i></label>
                                        @Html.TextAreaFor(model => model.companydetails.address, new { @placeholder = "Address", @class = "form-control", @rows = 1, @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.companydetails.address, null, new { @style = "color:red", @id = "address" })
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">Mailing Address</label>
                                        @Html.TextAreaFor(model => model.companydetails.MailingAddress, new { @placeholder = "Mailing Address", @class = "form-control", @rows = 1, @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.companydetails.MailingAddress, null, new { @style = "color:red" })
                                    </div>

                                    <div class="form-group row">
                                        <label for="exampleInputname">Pin Code<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.pincode, new { @placeholder = "Pin Code", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.companydetails.pincode, null, new { @style = "color:red", @id = "pincode" })
                                    </div>
                                </div>
                            </div>

                            <div class=" col-lg-3">
                                <div class=" col-lg-12">
                                    <div class="form-group row">
                                        <label for="exampleInputname">Contact No. 1<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.ContactNo1, new { @placeholder = "Contact No. 1", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.companydetails.ContactNo1, null, new { @style = "color:red", @id = "contact1" })
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">Contact No. 2</label>
                                        @Html.TextBoxFor(model => model.companydetails.ContactNo2, new { @placeholder = "Contact No. 2", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.companydetails.ContactNo2, null, new { @style = "color:red", @id = "contact2" })
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">Contact No. 3</label>
                                        @Html.TextBoxFor(model => model.companydetails.ContactNo3, new { @placeholder = "Contact No. 3", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.companydetails.ContactNo3, null, new { @style = "color:red", @id = "contact3" })
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">Email<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.eMail, new { @placeholder = "Email", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.companydetails.eMail, null, new { @style = "color:red", @id = "email" })
                                        <font color="red">  <div id="errormsg">
                                </div></font>
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">State<i style="color: red">*</i></label>
                                        @Html.DropDownListFor(model => model.companydetails.State, new SelectList(Model.companydetails.StateList, "Stateid", "StateName"), "Select State", new { id = "ddlState", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.State, null, new { @style = "color:red", @id = "state" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="col-lg-12">
                                    <div class="form-group row">
                                        <label for="exampleInputname">City<i style="color: red">*</i></label>
                                        @Html.DropDownListFor(model => model.companydetails.City, Enumerable.Empty<SelectListItem>(), "Select a City", new { id = "ddlCity", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.City, null, new { @style = "color:red", @id = "city" })
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">Pan No</label>
                                        @Html.TextBoxFor(model => model.companydetails.panCard, new { @placeholder = "Pan No", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.companydetails.panCard, null, new { @style = "color:red" })
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">Sales Tax No<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.salesTaxNo, new { @placeholder = "Sales Tax No", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.salesTaxNo, null, new { @style = "color:red", @id = "salestax" })
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">Website<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.website, new { @placeholder = "Website", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.website, null, new { @style = "color:red", @id = "website" })
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">VAT No<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.vatNo, new { @placeholder = "VAT No", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.vatNo, null, new { @style = "color:red", @id = "vat" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="col-lg-12">
                                    <div class="form-group row">
                                        <label for="exampleInputname">REG No<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.regNo, new { @placeholder = "REG No", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.regNo, null, new { @style = "color:red", @id = "regno" })
                                    </div>
                                    <div class="form-group row">
                                        <label for="exampleInputname">Financial Year From Date<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.FinancialYearFrom, new { @placeholder = "FromDate", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.FinancialYearFrom, null, new { @style = "color:red", @id = "fyfromdate" })
                                    </div>

                                    <div class="form-group row">
                                        <label for="exampleInputname">To Date<i style="color: red">*</i></label>
                                        @Html.TextBoxFor(model => model.companydetails.FinancialYearTo, new { @placeholder = "ToDate", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companydetails.FinancialYearTo, null, new { @style = "color:red", @id = "fytodate" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div id="list"></div>
                    </div>
                    <br />
                    <div class="row">
                        <input type="button" value="Add Another Bank" class="btn btn-link col-lg-offset-4" style="color: dodgerblue; font-weight: bolder" onclick="bank()" />
                        <div class="col-sm-offset-5">
                            <button type="submit" id="Submit" class="btn btn-success">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</section>
<!-- End: Main -->
@{
    if (TempData["CompanyExceed"] != null)
    { 
        <script type="text/javascript">
            alertbox("Companies Exceed. Please Contact Maria Infotech Pvt. Ltd.");
        </script>
    }
    }

