@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "EditDetails";
}

<script type="text/javascript">
    $(document).ready(function () {
        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("select").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("textarea").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlBank").change(function () {
            var idvalue = document.getElementById("ddlBank").value;
            document.getElementById('BankInfo').style.display = "inline";
            $.ajax({
                url: '/Company/UpdateBankDetail',
                type: "GET",
                data: { id: idvalue },
                success: function (data) {
                    $("#BankInfo").html(data);
                }
            });
        });
    });
</script>
<script type="text/javascript">
    function UpdateBank() {

        var micrcode = $("#compbankdetails_MICRCode").val();
        if (micrcode != "") {
            if (micrcode.length != 9) {
                return false;
            }
        }

        var accno = $("#compbankdetails_AccountNo").val();
        if (accno == "") {
            return false;
        }

        if (accno.length < 10 || accno.length > 25) {
            return false;
        }

        var acctype = $("#compbankdetails_AccountType").val();
        if (acctype == "") {
            return false;
        }

        $.ajax({
            url: '/Company/UpdateBankDetail',
            type: "POST",
            data: {
                BankId: document.getElementById('compbankdetails_BankId').value,
                BankCode: document.getElementById('compbankdetails_CompanyCode').value,
                BankName: document.getElementById('ddlBankNames').value,
                branch: document.getElementById('ddlBankbranches').value,
                BankLocation: document.getElementById('compbankdetails_BankLocation').value,
                Accounttype: document.getElementById('compbankdetails_AccountType').value,
                Accountno: document.getElementById('compbankdetails_AccountNo').value,
                ifsc: document.getElementById("compbankdetails_BankIfsc").value,
                micr: document.getElementById('compbankdetails_MICRCode').value,
            },
            success: function (data) {
                $("BankInfo").html(data);
            }
        });
        $(function () {
            $.getJSON("/Company/UpdatedBankDetails", { code: document.getElementById('compbankdetails_CompanyCode').value },
                   function (data) {
                       var select = $("#ddlBank");
                       select.empty();
                       select.append($('<option/>', {
                           value: "",
                           text: "Select Bank"
                       }));
                       $.each(data, function (index, itemData) {
                           select.append($('<option/>', {
                               value: itemData.Value,
                               text: itemData.Text
                           }));
                       });
                   });
            document.getElementById('BankInfo').style.display = "none";
        });
    }
</script>
<script type="text/javascript">
    function AddBank() {
        window.open("/Company/BankPopUp?companycode=" + document.getElementById('companydetails_CompanyCode').value, "_blank", "width=600,height=250,top=280px,left=400px");
    }
</script>
<script type="text/javascript">
    $(function () {
        var fromdate = $("#companydetails_FinancialYearFrom").val();
        var todate = $("#companydetails_FinancialYearTo").val();
        var cmpregdate = $("#companydetails_CompanyRegisterationDate").val();
        var dat = new Date(fromdate);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        $("#companydetails_FinancialYearFrom").val(data);

        var dat = new Date(todate);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        $("#companydetails_FinancialYearTo").val(data);

        var dat = new Date(cmpregdate);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        $("#cmpregdate").wrapInner(data);

        new JsDatePick({
            useMode: 2,
            target: "companydetails_FinancialYearFrom",
            dateFormat: "%d/%M/%Y",
        });
        new JsDatePick({
            useMode: 2,
            target: "companydetails_FinancialYearTo",
            dateFormat: "%d/%M/%Y",
        });
    });
</script>

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.companydetails.companyId)
    @Html.HiddenFor(model => model.companydetails.CompanyCode)
    @Html.HiddenFor(model => model.companydetails.CompanyRegisterationDate)
    @Html.HiddenFor(model => model.companydetails.Replicated)
    <div class="row">
        <h2>
            <label for="exampleInputname">Company Details</label>
        </h2>
    </div>
    <div class="row">
        <div class="col-md-4 col-lg-4">
            <label>Company Code : </label>
            @Html.DisplayFor(model => model.companydetails.CompanyCode)
        </div>
    </div>

    <div style="height: 15px"></div>

    <div class="row">
        <div class="col-md-3 col-lg-3">
            <div class="col-md-12 col-lg-12">
                <div class="form-group row">
                    <label for="exampleInputname">Company Name<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.companyName, new { @placeholder = "Company Name", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.companydetails.companyName, null, new { style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Company Reg. Date</label>
                    @{DateTime? cmpregdate = Model.companydetails.CompanyRegisterationDate;}
                    <div style="height: 7px"></div>
                    <label id="cmpregdate" style="font-weight: normal"></label>
                    <div style="height: 3px"></div>
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Address<i style="color: red">*</i></label>
                    @Html.TextAreaFor(model => model.companydetails.address, new { @placeholder = "Address", @class = "form-control", @rows = 1 })
                    @Html.ValidationMessageFor(model => model.companydetails.address, null, new { style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Mailing Address</label>
                    @Html.TextAreaFor(model => model.companydetails.MailingAddress, new { @placeholder = "Mailing Address", @class = "form-control", @rows = 1 })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Pin Code<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.pincode, new { @placeholder = "Pin Code", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.pincode, null, new { style = "color:red" })
                </div>
            </div>
        </div>

        <div class="col-md-3 col-lg-3">
            <div class="col-md-12 col-lg-12">
                <div class="form-group row">
                    <label for="exampleInputname">Contact No. 1<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.ContactNo1, new { @placeholder = "Contact No. 1", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.ContactNo1, null, new { style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Contact No. 2</label>
                    @Html.TextBoxFor(model => model.companydetails.ContactNo2, new { @placeholder = "Contact No. 2", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.ContactNo2, null, new { @style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Contact No. 3</label>
                    @Html.TextBoxFor(model => model.companydetails.ContactNo3, new { @placeholder = "Contact No. 3", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.ContactNo3, null, new { @style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Email<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.eMail, new { @placeholder = "Email", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.eMail, null, new { style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">State<i style="color: red">*</i></label>
                    @Html.DropDownListFor(model => model.companydetails.State, new SelectList(Model.companydetails.StateList, "StateName", "StateName", Model.companydetails.State), "Select State", new { id = "ddlState", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.State, null, new { style = "color:red" })
                </div>
            </div>
        </div>
        <div class="col-md-3 col-lg-3">
            <div class="col-md-12 col-lg-12">
                <div class="form-group row">
                    <label for="exampleInputname">City<i style="color: red">*</i></label>
                    @Html.DropDownListFor(model => model.companydetails.City, new SelectList(Model.companydetails.CityList, "cityName", "cityName", Model.companydetails.City), "Select City", new { id = "ddlCity", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.City, null, new { style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Pan No</label>
                    @Html.TextBoxFor(model => model.companydetails.panCard, new { @placeholder = "Pan No", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.panCard, null, new { @style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Sales Tax No<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.salesTaxNo, new { @placeholder = "Sales Tax No", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.salesTaxNo, null, new { style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">Website<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.website, new { @placeholder = "Website", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.website, null, new { style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">VAT No<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.vatNo, new { @placeholder = "VAT No", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.vatNo, null, new { style = "color:red" })
                </div>
            </div>
        </div>
        <div class="col-md-3 col-lg-3">
            <div class="col-md-12 col-lg-12">
                <div class="form-group row">
                    <label for="exampleInputname">REG No<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.regNo, new { @placeholder = "REG No", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.companydetails.regNo, null, new { style = "color:red" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">FY From Date<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.FinancialYearFrom, new { @placeholder = "FromDate", @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="form-group row">
                    <label for="exampleInputname">To Date<i style="color: red">*</i></label>
                    @Html.TextBoxFor(model => model.companydetails.FinancialYearTo, new { @placeholder = "ToDate", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>

    <hr />
    <div class="form-group row">
        <div class="row">
            <div class="col-md-8 col-lg-8">
                <label style="font-size: medium">Banks Associated With</label>
                @*<div style="width:1px"></div>*@
                @{
                      string companyname = Model.companydetails.companyName;
                    <label style="font-size: medium; color: royalblue;">@companyname.ToUpper()</label>
                }
            </div>
            <div class="col-md-4 col-lg-4">
                <div class="col-lg-12 col-md-12">
                    @Html.DropDownListFor(model => model.compbankdetails.BankName, new SelectList(Model.compbankdetails.BnkList, "BankId", "BankName"), "Select Bank", new { id = "ddlBank", @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div id="BankInfo"></div>
    <div style="text-align: center">
        <input type="button" id="Add Bank" value="Add New Bank" class="btn btn-link" style="color: dodgerblue; font-weight: bolder;" onclick="AddBank()" />
    </div>
    <div class="row" style="text-align: center">
        <div>
            <button type="button" class="btn btn-success" id="Update" onclick="UpdateCompanyData();">Update</button>
        </div>
    </div>
}
