@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "EditDetails";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js"></script>
<script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.8/jquery.validate.min.js"></script>
<style type="text/css">
    label.error {
        color: red;
        font-size: 12px;
    }
</style>

<!--code for on hover image-->
<style>
    #picture {
        width: 100px;
        height: 100px;
        background-color: none;
    }

        #picture a.small {
            display: block;
            width: 100px;
            height: 100px;
            text-decoration: none;
            background: none;
            top: 0;
            left: 0;
            border: 0;
        }

        #picture a img {
            border: 0;
        }

        #picture a.small:hover {
            text-decoration: none;
            background-color: #000000;
            color: #000000;
        }

        #picture a .large {
            display: block;
            position: absolute;
            width: 0;
            height: 0;
            border: 0;
            top: 0;
            left: 0;
        }

        #picture a.small:hover .large {
            display: block;
            position: absolute;
            margin-right: 0px;
            top: 182px;
            left: 800px;
            width: 210px;
            height: 210px;
        }
</style>

<!--code for on hover image-->
<script type="text/javascript">
    $(document).ready(function () {
        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("select").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("textarea").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        document.getElementById("bankname").value = document.getElementById("ddlBankNames").value;
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {

        if (document.getElementById("EmployeeDetails_CommissionType").value == "Direct") {
            $("#direct").attr("checked", true);
        }
        else if (document.getElementById("EmployeeDetails_CommissionType").value == "Target") {
            $("#target").attr("checked", true);
        }
        else {
            document.getElementById("Commission").style.display = "none";
        }

        var state = document.getElementById("state").value;
        $.getJSON('/Employee/GetStateById', { State: state }, function (data) {
            $("#ddlState").val(data).attr("selected", "selected");
        });

        var dob = document.getElementById("EmployeeDetails_DateOfBirth").value;
        var dat = new Date(dob);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('EmployeeDetails_DateOfBirth').value = data;

        var doj = document.getElementById("EmployeeDetails_DateOfJoining").value;
        var dat = new Date(doj);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('EmployeeDetails_DateOfJoining').value = data;
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlBankNames").change(function () {
            var modeldata = $(this).val();
            if (modeldata != "") {
                document.getElementById("bankname").value = modeldata;
                $.getJSON("/Employee/GetBranch", { BankName: modeldata },
                function (Data) {
                    var select = $("#ddlBranchname");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "Select Branch Name"
                    }));
                    $.each(Data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                    document.getElementById("bankifscno").innerHTML = "";
                    document.getElementById("EmployeeDetails.BankIFSCNO").innerHTML = "";
                    document.getElementById("EmployeeDetails.BankAddress").innerHTML = "";
                    document.getElementById("EmployeeDetails_MICRCode").value = "";
                    document.getElementById("DisplayValues").style.display = "inline";
                    document.getElementById("DisplayAllValues").style.display = "none";
                    document.getElementById("Display").style.display = "none";
                    document.getElementById("DisplayMICR").style.display = "none";
                    $("#EmployeeDetails_AccountType").val("Account Type").attr("selected", true);
                    $("#EmployeeDetails_Account_No").val("");
                });
            }
            else {
                document.getElementById("DisplayValues").style.display = "none";
                document.getElementById("DisplayAllValues").style.display = "none";
                document.getElementById("Display").style.display = "none";
                document.getElementById("DisplayMICR").style.display = "none";
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {

        $("#EmployeeDetails_MICRCode").change(function () {
            var micr = $(this).val();
            micr = micr.replace(/ /g, '');
            $("#EmployeeDetails_MICRCode").val(micr);
        });

        $("#ddlBranchname").change(function () {
            var idmodel = $(this).val();
            if (idmodel != 0) {
                $.ajax({
                    url: '/Employee/GetIFSCNoAndAddress',
                    type: "GET",
                    data: { branch: idmodel },
                    success: function (data) {
                        document.getElementById("DisplayAllValues").style.display = "inline";
                        document.getElementById("Display").style.display = "inline";
                        document.getElementById("DisplayMICR").style.display = "inline";
                        document.getElementById("bankAddr").style.display = "none";
                        document.getElementById("bankifscno").style.display = "none";
                        $("#EmployeeDetails_BankIFSCNo").val(data.IFSCNo);
                        document.getElementById("EmployeeDetails.BankIFSCNO").innerHTML = data.IFSCNo;
                        $("#EmployeeDetails_BankAddress").val(data.BankAddress);
                        document.getElementById("EmployeeDetails.BankAddress").innerHTML = data.BankAddress;
                        $("#EmployeeDetails_MICRCode").val(data.Micr);
                    }
                });
            }
            else {
                document.getElementById("DisplayAllValues").style.display = "none";
                document.getElementById("Display").style.display = "none";
                document.getElementById("DisplayMICR").style.display = "none";
            }
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        var data = new JsDatePick({
            useMode: 2,
            target: "EmployeeDetails_DateOfBirth",
            dateFormat: "%d/%M/%Y"
        });

        var data2 = new JsDatePick({
            useMode: 2,
            target: "EmployeeDetails_DateOfJoining",
            dateFormat: "%d/%M/%Y"
        });

        data.addOnSelectedDelegate(function () {

            var today = new Date();
            var birth = document.getElementById("EmployeeDetails_DateOfBirth").value;
            var birthDate = new Date(birth);
            var age = today.getFullYear() - birthDate.getFullYear();
            var m = today.getMonth() - birthDate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }
            document.getElementById("EmployeeDetails_Age").value = age;
        });

        data2.addOnSelectedDelegate(function () {
            var today = new Date();
            var join = document.getElementById("EmployeeDetails_DateOfJoining").value;
            var joindate = new Date(join);
            var dates = today.getFullYear() - joindate.getFullYear();
            var m = today.getMonth() - joindate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < joindate.getDate())) {
                dates--;
                m = 12 + m;
                if (m == 12) {
                    dates++;
                    m = 0;
                }
            }
            $("#ddlExpYr").val(dates).attr("selected", true);
            $("#ddlExpMonths").val(m).attr("selected", true);

        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {

        if ("@Model.EmployeeDetails.BankName" != "")
        {
            document.getElementById("bnk").style.display = "inline";
            document.getElementById("addbnk").style.display = "none";
        }
        else
        {
            document.getElementById("bnk").style.display = "none";
            document.getElementById("addbnk").style.display = "inline";
        }

        $("#addbnk").click(function () {
            document.getElementById("bnk").style.display = "inline";
            document.getElementById("addbnk").style.display = "none";
        });

        $("#ddlState").change(function () {
            var idModel = $(this).val();

            $.getJSON('/Employee/LoadCityByState', { id: idModel }, function (stateData) {

                var select = $("#ddlCity");
                select.empty();
                select.append($('<option/>', {
                    value: "",
                    text: "Select a City"
                }));
                $.each(stateData, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });
        });

        $("#ddldepartment").change(function () {
            var value = $(this).val();
            if (value == "Sales") {
                document.getElementById("Commission").style.display = "inline";
                document.getElementById("EmployeeDetails_CommissionType").value = null;
            }
            else {
                document.getElementById("Commission").style.display = "none";
                document.getElementById("EmployeeDetails_CommissionType").value = null;
            }
        });

        $("#Update").click(function () {

            if ($("#EmployeeDetails_MICRCode").val() != "") {
                if ($("#EmployeeDetails_MICRCode").val().length != 9) {
                    alertbox("MICR Code Length Must Be 9");
                    return false;
                }
            }

            if (document.getElementById("ddldepartment").value == "Sales")
                if (document.getElementById("EmployeeDetails_CommissionType").value == "") {
                    alertbox("Select Type Of Commission");
                    return false;
                }

            if ($("#EmployeeDetails_Email").val() != "") {

                $.getJSON("/User/EmailValidate", { email: $("#EmployeeDetails_Email").val() }, function (data) {
                    if (data != "true") {
                        alertbox("Invalid Email Address");
                        return false;
                    }
                    else {
                        UpdateEmployeeData();
                    }
                });
            }
            else {
                UpdateEmployeeData();
            }
        });
    });

    function EnterComm(type) {
        if (type == "D")
            document.getElementById("EmployeeDetails_CommissionType").value = "Direct";
        else
            document.getElementById("EmployeeDetails_CommissionType").value = "Target";
    }

</script>

<div class="col-lg-12 col-md-12">
    <div class="col-lg-12 col-md-12">
        @using (Html.BeginForm())
        {
            <input type="hidden" id="bankname" />
            @Html.HiddenFor(model => model.EmployeeDetails.EmpId)
            @Html.HiddenFor(model => model.EmployeeDetails.EmployeeCode)
            @Html.HiddenFor(model => model.EmployeeDetails.BankAddress)
            @Html.HiddenFor(model => model.EmployeeDetails.BankIFSCNo)
            @Html.HiddenFor(model => model.EmployeeDetails.Photo)
            @Html.HiddenFor(model => model.EmployeeDetails.CommissionType)
            <input type="hidden" name="state" id="state" value="@Model.EmployeeDetails.State" />
    
            <div class="row">
                <div class="row">
                    <div class="row">
                        <h2>
                            <label for="exampleInputname">Employee Details</label></h2>
                    </div>
                    <div class="row">
                        <div class="col-md-4 col-lg-4">
                            <label for="exampleInputname">Employee Code : </label>
                            @Html.DisplayFor(model => model.EmployeeDetails.EmployeeCode)
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group row">
                                    <label for="exampleInputname">Name<i style="color: red">*</i></label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.Name, new { @placeholder = "Name", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.Name, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Address<i style="color: red">*</i></label>
                                    @Html.TextAreaFor(model => model.EmployeeDetails.Address, new { @placeholder = "Address", @class = "form-control", @rows = 1 })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.Address, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Contact No. 1<i style="color: red">*</i></label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.MobileNo, new { @class = "form-control", @placeholder = "Contact No 1" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.MobileNo, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Contact No. 2</label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.ResidenceNo, new { @class = "form-control", @placeholder = "Contact No 2" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.ResidenceNo, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Email</label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.Email, new { @class = "form-control", @placeholder = "Email" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.Email, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Date Of Birth<i style="color: red">*</i></label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.DateOfBirth, new { @class = "form-control", @placeholder = "Date Of Birth", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.DateOfBirth, null, new { style = "color:red" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group row">
                                    <label for="exampleInputname">Designation<i style="color: red">*</i></label>
                                    @Html.DropDownListFor(model => model.EmployeeDetails.Designation, new SelectList(Model.EmployeeDetails.DesignationList, "DesignationName", "DesignationName", Model.EmployeeDetails.Designation), "Select Designation", new { id = "Designation", @class = "form-control" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Department<i style="color: red">*</i></label>
                                    @Html.DropDownListFor(model => model.EmployeeDetails.department, new SelectList(Model.EmployeeDetails.deptlist, "Name", "Name"), "Select Department", new { id = "ddldepartment", @class = "form-control" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Exp In Years<i style="color: red"></i></label>
                                    @Html.DropDownListFor(model => model.EmployeeDetails.totalExpYear, new SelectList(Model.totalExpYears, "noOfYear", "noOfYear", Model.EmployeeDetails.totalExpYear), "Select Total No Of Years", new { id = "ddlExpYr", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.totalExpYear, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Exp In Months<i style="color: red"></i></label>
                                    @Html.DropDownListFor(model => model.EmployeeDetails.totalExpmonth, new SelectList(Model.totalExpmonths, "noOfMonths", "noOfMonths", Model.EmployeeDetails.totalExpmonth), "Select Total No Of Months", new { id = "ddlExpMonths", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.totalExpmonth, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Salary<i style="color: red">*</i></label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.Salary, new { @class = "form-control", @placeholder = "Salary" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.Salary, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Age<i style="color: red"></i></label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.Age, new { @class = "form-control", @readonly = "true" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.totalExpmonth, null, new { style = "color:red" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group row">
                                    <label for="exampleInputname">Date Of Joining<i style="color: red">*</i></label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.DateOfJoining, new { @class = "form-control", @placeholder = "Date Of Joining", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.DateOfJoining, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Blood Group</label>
                                    @Html.DropDownListFor(model => model.EmployeeDetails.BloodGroup, new SelectList(Model.BloodGroups, "bloodGroupType", "bloodGroupType", Model.EmployeeDetails.BloodGroup), " Select Blood Group", new { id = "ddlBGroup", @class = "form-control" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Pan No</label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.PancardNo, new { @class = "form-control", @placeholder = "PanNo" })
                                </div>
                                <div class="form-group row">
                                    <label for="disabledtextinput">ESIC NO</label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.ESIC, new { @class = "form-control", @placeholder = "ESIC", @disabled = "disabled", id = "esic" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">PFNO<i style="color: red">*</i></label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.PFNO, new { @class = "form-control", @placeholder = "PFNO" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.PFNO, null, new { @style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">Aadhar No</label>
                                    @Html.TextBoxFor(model => model.EmployeeDetails.AadharNo, new { @class = "form-control", @placeholder = "Aadhar No" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.AadharNo, null, new { @style = "color:red" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group row">
                                    <label for="exampleInputname">State<i style="color: red">*</i></label>
                                    @Html.DropDownListFor(model => model.EmployeeDetails.State, new SelectList(Model.StateList, "stateId", "stateName", Model.EmployeeDetails.State), "Select State", new { id = "ddlState", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.State, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputname">City<i style="color: red">*</i></label>
                                    @Html.DropDownListFor(model => model.EmployeeDetails.City, new SelectList(Model.CityList, "cityName", "cityName", Model.EmployeeDetails.City), "Select City", new { id = "ddlCity", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmployeeDetails.City, null, new { style = "color:red" })
                                </div>

                                <div class="form-group row">
                                    <label for="exampleInputname">Industry</label>
                                    @Html.DropDownListFor(model => model.EmployeeDetails.Industry, new SelectList(Model.TypeOfSupplierList, "type_supplier", "type_supplier", Model.EmployeeDetails.Industry), "Select Industry", new { id = "ddlIndustry", @class = "form-control" })
                                </div>

                                <div class="form-group" id="Commission">
                                    <div class="row">
                                        <label for="exampleInputname">Commission: &nbsp </label>
                                        <br />
                                        <input type="radio" name="rupee" id="target" onclick="EnterComm('T')" />Target
                                <input type="radio" name="rupee" id="direct" onclick="EnterComm('D')" />Direct &nbsp
                                    </div>
                                </div>

                                <!--code for on hover image-->
                                <div id="picture">
                                    <div class="form-group row">
                                        @{
            string photo = string.Empty;
            photo = Model.EmployeeDetails.Photo;
                                        }
                                        <label for="exampleInputAccountNo">Employee Photo</label>
                                        <img src="@photo" title="" width="100" height="100"/>
                                    </div>
                                    <div style="height: 4px"></div>
                                    <input type="file" name="file" id="file" style="margin-left: -15px; width: 180px;" data-val="true" data-val-required="Please select a file" class="singleTextBox" />
                                </div>
                                <!--code for on hover image-->
                            </div>
                        </div>
                    </div>
                    <hr />

                    <div style="text-align:center">
                        <button class="btn btn-success" style="display:none" id="addbnk">Add Bank</button>
                        <div style="height:30px"></div>
                    </div>

                    <div id="bnk">
                        <div class="row">
                            
                            <div id="title1" style="position: absolute; font-family: Arial; font-size: 16px; text-decoration: underline; text-align: left;">
                                <h2>
                                    <label for="exampleInputname">Bank Details</label></h2>
                            </div>
                            <br />
                            <br />
                            <div class="col-md-3 col-lg-3">
                                <div class="col-md-12 col-lg-12">
                                    <div class="form-group row">
                                        <label for="exampleInputBankName">Bank Name</label>
                                        @Html.DropDownListFor(model => model.EmployeeDetails.BankName, new SelectList(Model.EmployeeDetails.BankNameList, "bankName", "bankName", Model.EmployeeDetails.BankName), "Select Bank", new { id = "ddlBankNames", @placeholder = "BankName", @class = "form-control" })
                                    </div>
                                    <div class="form-group row">
                                        <div style="display: none" id="DisplayValues">
                                            <label for="exampleInputIFSC Code">Branch Name<i style="color: red">*</i></label>
                                            @Html.DropDownListFor(model => model.EmployeeDetails.branch, new SelectList(Model.EmployeeDetails.BranchList, "branch", "branch", Model.EmployeeDetails.branch), "Select Branch", new { id = "ddlBranchname", @placeholder = "BankName", @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 col-lg-3">
                                <div class="col-md-12 col-lg-12">
                                    <div id="DisplayAllValues" style="display: none">
                                        <div class="form-group row">
                                            <div class="form-group">
                                                <label for="exampleInputBankLocation">Bank Ifsc</label><br />
                                                <label id="EmployeeDetails.BankIFSCNO" style="font-weight: normal"></label>
                                                @{
            string ifscno = Model.EmployeeDetails.BankIFSCNo;
                                                    <label id="bankifscno" style="font-weight: normal">@ifscno</label>
                                                }
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="exampleInputBankLocation">Bank Location</label><br />
                                            <label id="EmployeeDetails.BankAddress" style="font-weight: normal"></label>
                                            @{
            string address = Model.EmployeeDetails.BankAddress;
                                                <label id="bankAddr" style="font-weight: normal">@address</label>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 col-lg-3">
                                <div class="col-md-12 col-lg-12">
                                    <div id="Display" style="display: none">
                                        <div class="form-group row">
                                            <label for="exampleInputAccountType">Account Type<i style="color: red">*</i></label>
                                            @Html.DropDownListFor(model => model.EmployeeDetails.AccountType, new List<SelectListItem> { new SelectListItem { Text = "Current" }, new SelectListItem { Text = "Savings" } }, "Account Type", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EmployeeDetails.AccountType, null, new { @style = "color:red" })
                                        </div>
                                        <div class="form-group row">
                                            <label for="exampleInputAccountNo">Account No<i style="color: red">*</i></label>
                                            @Html.TextBoxFor(model => model.EmployeeDetails.Account_No, new { @placeholder = "Account No", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EmployeeDetails.Account_No, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3 col-lg-3">
                                <div class="col-md-12 col-lg-12">
                                    <div id="DisplayMICR" style="display: none">
                                        <div class="form-group row">
                                            <label for="exampleInputAccountNo">MICR Code</label>
                                            @Html.TextBoxFor(model => model.EmployeeDetails.MICRCode, new { @placeholder = "MICR Code", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EmployeeDetails.MICRCode, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-offset-5">
                        <button type="button" class="btn btn-success" id="Update">Update</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
