@model CodeFirstEntities.MainApplication

@{
    ViewBag.Title = "PopUpPage";
}

<link href="~/Content/bootstrap.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.min.css" />
<script type="text/javascript" src="~/Scripts/bootstrap.js"></script>
<link href="~/Content/customAlerts.css" rel="stylesheet" />
<script src="~/Scripts/bootbox.js"></script>
<!-- Theme CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/theme.css" />
<!-- Plugins - Via CDN -->
<script type ="text/javascript" src="@Url.Content("~/Scripts/jquery-1.9.1.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>

<script type="text/javascript">
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("select").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("textarea").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
    });
</script>

<script>
    function StoreAddress(type) {
        var loc = document.getElementById("GodownAddressDetails_Location").value;
        var area = document.getElementById("GodownAddressDetails_AreaName").value;
        var add = document.getElementById("GodownAddressDetails_Address").value;
        var code = window.opener.parent.document.getElementById("GodownDetails_GdCode").value;

        if (area == "" || add == "") {
            alertbox("Enter Area & Address fields");
            return false;
        }
        else {

            $.getJSON("/Godown/CreateAddress/", { Location: loc, Address: add, AreaName: area, GdCode: code }, function (data) {
                if (type == 'New') {
                    window.location.reload();
                }
                else {
                    $.getJSON("/Godown/GetAllAddresses", { GdCode: code }, function (data) {
                        var select = window.parent.opener.document.getElementById("ddlareas");
                        select.options.length = 0;
                        var option = document.createElement("option");
                        option.value = 0;
                        option.text = "Select";
                        select.appendChild(option);
                        $.each(data, function (index, itemData) {
                            var option1 = document.createElement("option");
                            option1.value = itemData.Value;
                            option1.text = itemData.Text;
                            select.appendChild(option1);
                        });
                        window.close();
                    });
                }
            });
        }
    }
</script>
<audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
    <source src="" type="audio/ogg" />
</audio>
<div class="row">
    <div class="col-sm-12">
        <div class="row">
            <div class="form-group"></div>
            <div class="col-xs-4">
                <div class="col-xs-12">
                    <div class="col-xs-12">
                        <div class="form-group row">
                            <label>Location : </label>
                            @Html.DropDownListFor(model => model.GodownAddressDetails.Location, new SelectList(Model.CityList, "cityName", "cityName"), "Select location", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GodownAddressDetails.Location, null, new { style = "color:red" })
                        </div>
                        <div class="form-group row">
                            <label>Area Name : <i style="color: red">*</i></label>
                            @Html.TextBoxFor(model => model.GodownAddressDetails.AreaName, null, new { @class = "form-control", @placeholder = "Area Name" })
                            @Html.ValidationMessageFor(model => model.GodownAddressDetails.AreaName, null, new { style = "color:red" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xs-4">
                <div class="col-xs-12">
                    <div class="form-group row">
                        <label>Address : <i style="color: red">*</i></label>
                        @Html.TextBoxFor(model => model.GodownAddressDetails.Address, null, new { @class = "form-control", @placeholder = "Address" })
                        @Html.ValidationMessageFor(model => model.GodownAddressDetails.Address, null, new { style = "color:red" })
                    </div>

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-3"></div>
            <div class="col-xs-1">
                <button type="button" value="Add New Address" class="btn btn-info" onclick="StoreAddress('New')">Add New Address</button>
            </div>
            <div class="col-xs-2"></div>
            <div class="col-xs-1">
                <button type="button" value="Final Address" class="btn btn-info" onclick="StoreAddress('Final')">Add Final Address</button>
            </div>
        </div>
    </div>
</div>
