@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "InwardFromSupplier";
}

<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

<link href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jsDatePick.jquery.min.1.3.js")"></script>
<script src="@Url.Content("~/Scripts/jsDatePick.min.1.3.js")"></script>

<script type="text/javascript" src="~/Scripts/bootstrap.js"></script>
<link href="~/Content/customAlerts.css" rel="stylesheet" />
<script src="~/Scripts/bootbox.js"></script>

<script type="text/javascript">
    jQuery(document).ready(function () {

        // Init Theme Core 	  
        Core.init();

        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields = $(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
    });
</script>

<script type="text/javascript">
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }
    function confirmbox(message, row) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone2.ogg';
        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('confirmClass');
        bootbox.confirm('<i class="fa fa-2x fa-question-circle"></i><br>' + message + '<hr>',
		 function (result) {
		     if (result) {
		         $("#" + row).remove();
		     }
		     CalculateTotalQuantityAndAmount();
		 });
    }
</script>

@*<script type="text/javascript">
    function OpenLoginPageForVerification() {
        var url = "/Inward/LoginVerification";
        $.fancybox.open({
            href: url,
            type: 'iframe',
            padding: 5,
            height: '500',
            width: '200',
            autosize: false,
        });
    }
</script>*@
<script type="text/javascript">
    function addCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function removeCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, '');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");

    }
    function DeleteRow(id) {
        var row = "row" + id;
        confirmbox("Are you sure you wish to delete this row?", row);
    }

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#InwardFromSupplierDetails_SupplierName").focus();

        new JsDatePick({
            useMode: 2,
            target: "InwardFromSupplierDetails_ChallanDate",
            dateFormat: "%d/%M/%Y",
        });
        new JsDatePick({
            useMode: 2,
            target: "InwardFromSupplierDetails_BillDate",
            dateFormat: "%d/%M/%Y",
        });

        var temp = $("#InwardFromSupplierDetails_BillDate").val();
        var dat = new Date(temp);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('InwardFromSupplierDetails_BillDate').value = data;

        var temp1 = $("#InwardFromSupplierDetails_ChallanDate").val();
        var dat = new Date(temp1);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('InwardFromSupplierDetails_ChallanDate').value = data;

        /*Get Supplier Details*/
        $("#InwardFromSupplierDetails_SupplierName").autocomplete({
            source: "/Supplier/GetSupplierNames",
            minLength: 1,
            select: function (event, ui) {
                if (ui.item) {
                    $("#InwardFromSupplierDetails_SupplierName").val(ui.item.value);
                    var idmodel = document.getElementById("InwardFromSupplierDetails_SupplierName").value;
                    $("#InwardFromSupplierDetails_SupplierName").change(function () {
                        document.getElementById("PO_Details").style.display = "none";
                        document.getElementById("SupplierDetails").style.display = "none";
                        document.getElementById("Delivery_Details").style.display = "none";
                        document.getElementById("Transport_Details").style.display = "none";
                        document.getElementById("ReceivedAt").style.display = "none";
                        document.getElementById("LoadList").innerHTML = "";
                        $("#ddltypeofmode").val("Select Mode").attr("selected", "selected");
                        var select = $("#ddltransportnames");
                        select.empty();
                        select.append($('<option/>', {
                            text: "Select Name",
                            value: "",
                        }));
                        document.getElementById("Submit").disabled = true;
                    });
                    $.getJSON("/Inward/GetSupplierDetails", { name: idmodel },
                    function (data) {
                        document.getElementById("SupplierDetails").style.display = "inline";
                        document.getElementById("SupplierContactNo").innerHTML = data.ContactNo1;
                        document.getElementById("SupplierEmail").innerHTML = data.Email;
                        document.getElementById("SupplierState").innerHTML = data.State;
                        document.getElementById("SupplierType").innerHTML = data.Registered;
                        $("#InwardFromSupplierDetails_SupplierAddress").val(data.Address);
                        $("#InwardFromSupplierDetails_SupplierContactNo").val(data.ContactNo1);
                        $("#InwardFromSupplierDetails_SupplierEmail").val(data.Email);
                        $("#InwardFromSupplierDetails_SupplierState").val(data.State);
                        $("#InwardFromSupplierDetails_Registered").val(data.Registered);
                        document.getElementById("PO_Details").style.display = "inline";
                        var select = $("#ddlponos");
                        select.empty();
                        select.append($('<option/>', {
                            text: "PO Nos",
                            value: "",
                        }));
                        $.each(data.ponos, function (index, itemdata) {
                            select.append($('<option/>', {
                                text: itemdata.Text,
                                value: itemdata.Value,
                            }));
                        });

                        $("#ddlponos").focus();//After getting supplier details highlight PO dropdown.

                    });
                }
            }
        });


        $("#InwardFromSupplierDetails_ChallanNo").change(function () {
            var value = $(this).val();
            if (value != 0 && value != "") {
                document.getElementById("InwardFromSupplierDetails_ChallanDate").disabled = false;
            }
            else {
                document.getElementById("InwardFromSupplierDetails_ChallanDate").disabled = true;
            }
        });

        $("#InwardFromSupplierDetails_BillNo").change(function () {
            var value = $(this).val();
            if (value != 0 && value != "") {
                document.getElementById("InwardFromSupplierDetails_BillDate").disabled = false;
            }
            else {
                document.getElementById("InwardFromSupplierDetails_BillDate").disabled = true;
            }
        });

        $("#ddlponos").change(function () {
            document.getElementById("Submit").disabled = false;
            var pono = $(this).val();
            if (pono != "") {
                /*Get PoNo's*/
                $.getJSON("/Inward/GetPODetails", { pono: pono },
                    function (data) {
                        document.getElementById("Delivery_Details").style.display = "inline";
                        document.getElementById("Transport_Details").style.display = "inline";
                        document.getElementById("ReceivedAt").style.display = "inline";
                        document.getElementById("TransportName").innerHTML = data.TransportName;
                        document.getElementById("TransportMode").innerHTML = data.ModeOfTransport;
                        if (data.FormType != null && data.FormType != "") {
                            document.getElementById("formtypeid").style.display = "inline";
                            document.getElementById("formtype").innerHTML = data.FormType;
                        }
                        else {
                            document.getElementById("formtypeid").style.display = "none";
                            document.getElementById("formtype").innerHTML = "";
                        }
                        document.getElementById("InwardNoLabel").style.display = "inline";
                        document.getElementById("InwardCode").style.display = "inline";
                        document.getElementById("InwardCode").innerHTML = data.InwardCode;
                        document.getElementById("InwardFromSupplierDetails_TransportName").value = data.TransportName;
                        document.getElementById("InwardFromSupplierDetails_ModeOfTransport").value = data.ModeOfTransport;
                        document.getElementById("InwardFromSupplierDetails_TransportContactNo").value = data.TransportContactNo;
                        document.getElementById("InwardFromSupplierDetails_FormType").value = data.FormType;

                        document.getElementById("InwardFromSupplierDetails_GodownCode").value = data.GodownCode;
                        document.getElementById("InwardFromSupplierDetails_GodownName").value = data.GodownName;
                        document.getElementById("InwardFromSupplierDetails_GodownArea").value = data.GodownArea;
                        document.getElementById("InwardFromSupplierDetails_GodownEmail").value = data.GodownEmail;
                        document.getElementById("InwardFromSupplierDetails_GodownContactNo").value = data.GodownContactNo;
                        document.getElementById("InwardFromSupplierDetails_GodownContactPerson").value = data.GodownContactPerson;
                        document.getElementById("InwardFromSupplierDetails_ShopCode").value = data.ShopCode;
                        document.getElementById("InwardFromSupplierDetails_ShopName").value = data.ShopName;
                        document.getElementById("InwardFromSupplierDetails_ShopEmail").value = data.ShopEmail;
                        document.getElementById("InwardFromSupplierDetails_ShopContactNo").value = data.ShopContactNo;
                        document.getElementById("InwardFromSupplierDetails_ShopContactPerson").value = data.ShopContactPerson;

                        document.getElementById("InwardFromSupplierDetails_ReceivedAt").value = data.DelAt;
                        var msg = data.msg;
                        document.getElementById("GetItemListFrom").value = data.msg;
                        var remarkscolor = data.remarks;
                        var search = remarkscolor.search("earlier");
                        if (data.remarks != "") {
                            document.getElementById("RemarksDetails").style.display = "inline";
                            if (search != -1) {
                                document.getElementById("RemarksEarlier").style.display = "inline";
                                document.getElementById("RemarksDelay").style.display = "none";
                                document.getElementById("RemarksEarlier").innerHTML = data.remarks;
                            }
                            else {
                                document.getElementById("RemarksEarlier").style.display = "none";
                                document.getElementById("RemarksDelay").style.display = "inline";
                                document.getElementById("RemarksDelay").innerHTML = data.remarks;
                            }
                        }
                        else { document.getElementById("RemarksDetails").style.display = "none"; }
                        $("#InwardFromSupplierDetails_PoDate").val(data.PODate);
                        $("#InwardFromSupplierDetails_DelDate").val(data.DelDate);

                        var DelDate = data.DelDate
                        var PODate = data.PODate;
                        var receivingdate = document.getElementById("receivingdate").value;

                        var dat = new Date(DelDate);
                        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
                        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
                        document.getElementById('Delivery_Date').innerHTML = data;

                        var dat = new Date(PODate);
                        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
                        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
                        document.getElementById('PO_Date').innerHTML = data;

                        var dat = new Date(receivingdate);
                        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
                        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
                        document.getElementById('Receiving_Date').innerHTML = data;

                        /*Get Transport Name & Details*/
                        $("#ddltypeofmode").change(function () {
                            var mode = document.getElementById("ddltypeofmode").value;
                            if (mode != "") {
                                $.getJSON("/Inward/GetTransportNames", { mode: mode },
                                function (data) {
                                    var select = $("#ddltransportnames");
                                    select.empty();
                                    select.append($('<option/>', {
                                        text: "Select Name",
                                        value: "",
                                    }));
                                    $.each(data, function (index, itemdata) {
                                        select.append($('<option/>', {
                                            text: itemdata.Text,
                                            value: itemdata.Value,
                                        }));
                                    });
                                });
                            }
                            else {
                                var select = $("#ddltransportnames");
                                select.empty();
                                select.append($('<option/>', {
                                    text: "Select Name",
                                    value: "",
                                }));
                                document.getElementById("TransportName&No").style.display = "none";
                            }
                        });


                        if (msg == "From PO") {
                            document.getElementById("InwardFromSupplierDetails_ChallanNo").value = "";
                            document.getElementById("InwardFromSupplierDetails_BillNo").value = "";

                            $.ajax({
                                url: "/Inward/GetItemsListFromPo",
                                data: { pono: pono },
                                type: "GET",
                                success: function (data) {
                                    $("#LoadList").html(data);
                                    document.getElementById("AddingRows").style.display = "inline";
                                    document.getElementById("ItemsFromPO").style.display = "inline";
                                    document.getElementById("TotalQuantityDetails").style.display = "inline";
                                    CalculateTotalQuantityAndAmount();

                                }
                            });
                        }
                        else {
                            $.ajax({
                                url: "/Inward/GetItemsListFromInward",
                                data: { pono: pono },
                                type: "GET",
                                success: function (data) {
                                    $("#LoadList").html(data);
                                    document.getElementById("ItemsFromPerforma").style.display = "inline";
                                    document.getElementById("AddingRows").style.display = "inline";
                                    document.getElementById("Submit").disabled = true;
                                }
                            });
                        }
                    });
            }
            else {
                document.getElementById("formtypeid").style.display = "none";
                document.getElementById("Delivery_Details").style.display = "none";
                document.getElementById("Transport_Details").style.display = "none";
                document.getElementById("ReceivedAt").style.display = "none";
                document.getElementById("AddingRows").style.display = "none";
                document.getElementById("TotalQuantityDetails").style.display = "none";
                document.getElementById("InwardNoLabel").style.display = "none";
                document.getElementById("InwardCode").style.display = "none";
                document.getElementById("Submit").disabled = true;
            }
        });
    });

    function CalculateBalance(count, msg, type) {
        var packandforwd = (+document.getElementById("InwardFromSupplierDetails_PackAndForwd").value);
        if (packandforwd != 0 && packandforwd != "" && packandforwd != null) {
            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var row = "row" + i;
                var orderedquantity = "orderedquantity" + i;
                var receivedquantity = "receivedquantity" + i;
                var balanceqty = "balanceqty" + i;
                var balanceqtyvalue = "balanceqtyvalue" + i;
                var prevbal = "prevbal" + i;
                var extraqty = "ExtraQty" + i;
                if (document.getElementById(receivedquantity) != null) {
                    if (msg == 'PO') {
                        var calculatebalance = (+document.getElementById(orderedquantity).innerHTML) - (+document.getElementById(receivedquantity).value);
                        if (+document.getElementById(orderedquantity).innerHTML != 0) {
                            if (calculatebalance < 0) {
                                if (type == 'quantity') {
                                    alertbox("Extra " + (0 - calculatebalance) + " Quantity Received");
                                    document.getElementById(extraqty).value = 0 - calculatebalance;
                                    document.getElementById(balanceqty).style.color = "gray";
                                    document.getElementById(balanceqty).innerHTML = "0";
                                    calculatebalance = 0;
                                }
                            }
                            else {
                                if (calculatebalance > 0) {
                                    document.getElementById(balanceqty).style.color = "red";
                                }
                                else { document.getElementById(balanceqty).style.color = "gray"; }
                                document.getElementById(extraqty).value = "0";
                                document.getElementById(balanceqty).innerHTML = calculatebalance;
                                document.getElementById(balanceqtyvalue).value = calculatebalance;
                            }
                        }
                        else {
                            calculatebalance = 0;
                        }
                    }
                    if (msg != "PO") {
                        document.getElementById("Submit").disabled = false;
                        var calculatebalance = (+document.getElementById(prevbal).innerHTML) - (+document.getElementById(receivedquantity).value);
                        if ((+document.getElementById(prevbal).innerHTML) != 0) {
                            if (calculatebalance < 0) {
                                if (type == 'quantity') {
                                    alertbox("Extra " + (0 - calculatebalance) + " Quantity Received");
                                    document.getElementById(extraqty).value = 0 - calculatebalance;
                                    document.getElementById(balanceqty).style.color = "gray";
                                    document.getElementById(balanceqty).innerHTML = "0";
                                    calculatebalance = 0;
                                }
                            }
                            else {
                                if (calculatebalance > 0) {
                                    document.getElementById(balanceqty).style.color = "red";
                                }
                                else { document.getElementById(balanceqty).style.color = "gray"; }
                                document.getElementById(extraqty).value = "0";
                                document.getElementById(balanceqty).innerHTML = calculatebalance;
                                document.getElementById(balanceqtyvalue).value = calculatebalance;
                            }
                        }
                        else {
                            calculatebalance = 0;
                        }
                    }

                    /*calculate amount*/
                    var rate = "rate" + i;
                    var amount = "amount" + i;
                    var amountvalue = "amountvalue" + i;
                    var discount = "discount" + i;
                    var unit = "unit" + i;
                    var percent = (+document.getElementById(discount).innerHTML) / 100;
                    var calculateamount = 0;
                    if (calculatebalance < 0) {
                        calculateamount = (+document.getElementById(orderedquantity).innerHTML) * (+document.getElementById(rate).value);
                    }
                    else {
                        calculateamount = (+document.getElementById(receivedquantity).value) * (+document.getElementById(rate).value);
                    }
                    if ($("#" + unit).text() == "Dozens") {
                        calculateamount = calculateamount * 12;
                    }

                    if (percent != 0) {
                        var discountforamount = calculateamount * percent;
                        calculateamount -= discountforamount;

                    }
                    document.getElementById(amount).innerHTML = addCommas(calculateamount.toFixed(2));
                    document.getElementById(amountvalue).value = calculateamount.toFixed(2);
                }
            }
            var totalamount = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }

            document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);

            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                var amountvalue = "amountvalue" + i;
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proportionateamount = "proportionatetaxamount" + i;
                if (document.getElementById(amount) != null) {
                    var propotaxpercent = (+removeCommas(document.getElementById(amount).innerHTML)) / (+document.getElementById("Total_Amount_Value").value);
                    document.getElementById(proportionate).innerHTML = (propotaxpercent * 100).toFixed(2);
                    document.getElementById(proportionatetaxvalue).value = (propotaxpercent * 100).toFixed(2);
                    var packandforwdpropoamount = propotaxpercent * packandforwd;
                    document.getElementById(proportionateamount).value = packandforwdpropoamount.toFixed(2);
                    if (document.getElementById(proportionate).innerHTML.toString() == "NaN") {
                        document.getElementById(proportionate).innerHTML = "0";
                    }
                    CalculateTaxSummary(i);
                }
            }

            totalamount += packandforwd;
            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }
            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            CalculateTotalQuantityAndAmount();
        }
        else {
            var proportionatecount = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= proportionatecount; i++) {
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proporamount = "proportionatetaxamount" + i;
                if (document.getElementById(proportionate) != null) {
                    document.getElementById(proportionate).innerHTML = "0";
                    document.getElementById(proportionatetaxvalue).value = 0;
                    document.getElementById(proporamount).value = 0;
                }
            }

            var row = "row" + count;
            var orderedquantity = "orderedquantity" + count;
            var receivedquantity = "receivedquantity" + count;
            var balanceqty = "balanceqty" + count;
            var balanceqtyvalue = "balanceqtyvalue" + count;
            var prevbal = "prevbal" + count;
            var extraqty = "ExtraQty" + count;
            if (msg == 'PO') {
                var calculatebalance = (+document.getElementById(orderedquantity).innerHTML) - (+document.getElementById(receivedquantity).value);
                if (+document.getElementById(orderedquantity).innerHTML != 0) {
                    if (calculatebalance < 0) {
                        if (type == 'quantity') {
                            alertbox("Extra " + (0 - calculatebalance) + " Quantity Received");
                            document.getElementById(extraqty).value = 0 - calculatebalance;
                            document.getElementById(balanceqty).style.color = "gray";
                            document.getElementById(balanceqty).innerHTML = "0";
                            calculatebalance = 0;
                        }
                    }
                    else {
                        if (calculatebalance > 0) {
                            document.getElementById(balanceqty).style.color = "red";
                        }
                        else { document.getElementById(balanceqty).style.color = "gray"; }
                        document.getElementById(extraqty).value = "0";
                        document.getElementById(balanceqty).innerHTML = calculatebalance;
                        document.getElementById(balanceqtyvalue).value = calculatebalance;
                    }
                }
                else {
                    calculatebalance = 0;
                }
            }
            if (msg != "PO") {
                document.getElementById("Submit").disabled = false;
                var calculatebalance = (+document.getElementById(prevbal).innerHTML) - (+document.getElementById(receivedquantity).value);
                if ((+document.getElementById(prevbal).innerHTML) != 0) {
                    if (calculatebalance < 0) {
                        if (type == 'quantity') {
                            alertbox("Extra " + (0 - calculatebalance) + " Quantity Received");
                            document.getElementById(extraqty).value = 0 - calculatebalance;
                            document.getElementById(balanceqty).style.color = "gray";
                            document.getElementById(balanceqty).innerHTML = "0";
                            calculatebalance = 0;
                        }
                    }
                    else {
                        if (calculatebalance > 0) {
                            document.getElementById(balanceqty).style.color = "red";
                        }
                        else { document.getElementById(balanceqty).style.color = "gray"; }
                        document.getElementById(extraqty).value = "0";
                        document.getElementById(balanceqty).innerHTML = calculatebalance;
                        document.getElementById(balanceqtyvalue).value = calculatebalance;
                    }
                }
                else {
                    calculatebalance = 0;
                }
            }

            /*calculate amount and remaining amount*/
            var rate = "rate" + count;
            var amount = "amount" + count;
            var amountvalue = "amountvalue" + count;
            var discount = "discount" + count;
            var unit = "unit" + count;
            var percent = (+document.getElementById(discount).innerHTML) / 100;
            var calculateamount = 0;
            if (calculatebalance < 0) {
                calculateamount = (+document.getElementById(orderedquantity).innerHTML) * (+document.getElementById(rate).value);
            }
            else {
                calculateamount = (+document.getElementById(receivedquantity).value) * (+document.getElementById(rate).value);
            }
            if ($("#" + unit).text() == "Dozens") {
                calculateamount = calculateamount * 12;
            }

            if (percent != 0) {
                var discountforamount = calculateamount * percent;
                calculateamount -= discountforamount;
            }
            document.getElementById(amount).innerHTML = addCommas(calculateamount.toFixed(2));
            document.getElementById(amountvalue).value = calculateamount.toFixed(2);

            CalculateTotalQuantityAndAmount();

            var rowid = document.getElementById("hdnRowCount").value;
            var totalamount = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
            CalculateTaxSummary(rowid);

            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }

            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
        }
    };

    function CalculateTotalQuantityAndAmount() {
        var rowid = document.getElementById("hdnRowCount").value;
        var totalreceivedquantity = 0;
        var totalamount = 0;
        var totalremainingqty = 0;
        var extratotalquantity = 0;
        var extraltotalamount = 0;
        var rate = 0;
        for (var i = 1; i <= rowid; i++) {
            var row = "row" + i;
            var orderedquantity = "orderedquantity" + i;
            var receivedquantity = "receivedquantity" + i;
            var amount = "amount" + i;
            var balanceqty = "balanceqty" + i;
            var extraquantity = "ExtraQty" + i;
            var rate = "rate" + i;
            if (document.getElementById(row) != null) {
                totalreceivedquantity = (+totalreceivedquantity) + (+document.getElementById(receivedquantity).value);
                totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                totalremainingqty = totalremainingqty + (+document.getElementById(balanceqty).innerHTML);
                extratotalquantity = extratotalquantity + (+document.getElementById(extraquantity).value);
                extraltotalamount = extraltotalamount + ((+document.getElementById(extraquantity).value) * (+document.getElementById(rate).innerHTML));
            }
        }
        totalamount = Math.round(totalamount.toFixed(2));
        //document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + totalamount.toFixed(2);
        //document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
        document.getElementById("Total_Extra_Quantity").innerHTML = extratotalquantity;
        document.getElementById("Total_Extra_Quantity_Value").value = extratotalquantity;

        if (totalremainingqty < 0) {
            document.getElementById("Total_Remaining_Quantity").innerHTML = (0 - totalremainingqty);
            document.getElementById("Total_Remaining_Quantity_Value").value = (0 - totalremainingqty);
        }
        else {
            document.getElementById("Total_Remaining_Quantity").innerHTML = totalremainingqty;
            document.getElementById("Total_Remaining_Quantity_Value").value = totalremainingqty;
        }

        if (totalreceivedquantity != 0) {
            document.getElementById("TotalQuantityDetails").style.display = "inline";
            document.getElementById("Total_Quantity").innerHTML = totalreceivedquantity;
            document.getElementById("Total_Quantity_Value").value = totalreceivedquantity;
            document.getElementById("Submit").disabled = false;
        }
        else {
            document.getElementById("Total_Quantity").innerHTML = totalreceivedquantity;
            document.getElementById("Total_Quantity_Value").value = totalreceivedquantity;
            document.getElementById("Submit").disabled = true;
        }
    };
</script>

<style type="text/css">
    .CenterText {
        text-align: center;
        width: 100%;
    }
</style>

<script type="text/javascript">
    $(document).keypress(function (e) {
        if (e.which == 13) {
            var previousRowValidationCount = 0;
            var presentrows = +$("#AlreadyPresentItems").val();
            var rowid = document.getElementById("hdnRowCount").value;
            if (presentrows >= rowid) {
                for (var i = 1; i <= presentrows; i++) {
                    var prevquantity = "receivedquantity" + i;
                    var prevrate = "rate" + i;
                    var prevfreeqty = "FreeQty" + i;
                    var prevdiscount = "discount" + i;
                    if (document.getElementById(prevquantity).disabled == false) {
                        if ($("#" + prevquantity).val() == "") {
                            alertbox("Please Fill The Quantity");
                            previousRowValidationCount++;
                            break;
                        }
                        else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                            alertbox("Please Fill The Rate");
                            previousRowValidationCount++;
                            break;
                        }
                        else {
                            document.getElementById(prevquantity).disabled = true;
                            document.getElementById(prevfreeqty).disabled = true;
                            document.getElementById(prevrate).disabled = true;
                            document.getElementById(prevdiscount).disabled = true;
                        }
                    }
                }
            }
            if (previousRowValidationCount == 0) {
                var previtemCode = "itemCode" + rowid;
                var prevquantity = "receivedquantity" + rowid;
                var prevfreeqty = "FreeQty" + rowid;
                var prevrate = "rate" + rowid;
                var prevdiscountpercent = "discount" + rowid;
                if (document.getElementById(previtemCode) != null) {
                    if ($("#" + previtemCode).val() == "") {
                        alertbox("Please Select The Item");
                    }
                    else if ($("#" + prevquantity).val() == "") {
                        alertbox("Please Fill The Quantity");
                    }
                    else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                        alertbox("Please Fill The Rate");
                    }
                    else {
                        document.getElementById(previtemCode).disabled = true;
                        document.getElementById(prevquantity).disabled = true;
                        document.getElementById(prevfreeqty).disabled = true;
                        document.getElementById(prevdiscountpercent).disabled = true;
                        GenerateDynamicRow(rowid);
                    }
                }
                else {
                    GenerateDynamicRow(rowid);
                }
            }
        }
    });
</script>

<script type="text/javascript">
    function AllowNumbers(key) {
        var keycode = (key.which) ? key.which : key.keyCode;
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
    }
    function AllowDecimal(key, rowid) {
        var numbertype = $("#numberType" + rowid).val();
        var quantity = $("#receivedquantity" + rowid).val();
        var pointFoundCount = 0;
        for (var i = 0; i <= quantity.length; i++) {
            if (quantity[i] == '.') {
                pointFoundCount++;
            }
        }

        var pointposition = quantity.indexOf(".");
        var digitupto = 0;
        if (pointposition != -1) {
            digitupto = quantity.substr(pointposition, quantity.length).length;
        }

        var keycode = (key.which) ? key.which : key.keyCode;
        if (numbertype == 'Whole') {
            if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                return false;
            }
        }
        else if (quantity.length == 0) {
            if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                return false;
            }
        }
        else if (keycode == 46) {
            if (pointFoundCount > 0 && pointFoundCount < 2) {
                return false;
            }
        }
        else if (digitupto != 0) {
            if (numbertype == '2Digit') {
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 3) {
                    return false;
                }
            }
            else {
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 4) {
                    return false;
                }
            }
        }
        else {
            if (quantity.length == 0) {
                if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
            else {
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
        }
    }

    function GenerateDynamicRow(rowid) {
        rowid = +rowid + 1;
        var subcat = "SubCat" + rowid;
        var ItemType = "ItemType" + rowid;
        var row = "row" + rowid;
        var itemCode = "itemCode" + rowid;
        var itemName = "itemName" + rowid;
        var barcode = "barcode" + rowid;
        var description = "description" + rowid;
        var descriptionvalue = "descriptionvalue" + rowid;
        var materialvalue = "materialvalue" + rowid;
        var colorvalue = "colorvalue" + rowid;
        var brandvalue = "brandvalue" + rowid;
        var sizevalue = "sizevalue" + rowid;
        var orderedquantity = "orderedquantity" + rowid;
        var quantity = "receivedquantity" + rowid;
        var balanceqty = "balanceqty" + rowid;
        var extraqty = "ExtraQty" + rowid;
        var freeqty = "FreeQty" + rowid;
        var rate = "rate" + rowid;
        var mrp = "MRP" + rowid;
        var sellingprice = "sellingprice" + rowid;
        var discount = "discount" + rowid;
        var amount = "amount" + rowid;
        var amountvalue = "amountvalue" + rowid;
        var itemtax = "ItemTax" + rowid;
        var itemtaxvalue = "ItemTaxValue" + rowid;
        var unit = "unit" + rowid;
        var unitvalue = "unitvalue" + rowid;
        var numbertype = "numberType" + rowid;
        var design = "design" + rowid;
        var designName = "designName" + rowid;
        var designNameValue = "designNameValue" + rowid;
        var proportionatetax = "proportionatetax" + rowid;
        var proportionatetaxvalue = "proportionatetaxvalue" + rowid;
        var proportionateamount = "proportionatetaxamount" + rowid;
        var newlyadded = "NewAdded" + rowid;

        var ItemListFrom = document.getElementById("GetItemListFrom").value;
        var unorderedList;
        if (ItemListFrom == "From PO")
        { unorderedList = $("#ItemsFromPO"); }
        else
        { unorderedList = $("#ItemsFromPerforma"); }

        var data = "<tr id='" + row + "'><input type='hidden' id='" + subcat + "' name='" + subcat + "' />";
        data += "<td><select id='" + itemCode + "' name='" + itemCode + "' class='form-control col-md-2 col-lg-2'><option value=''>Select</option></select><input type='hidden' id='" + itemName + "' name='" + itemName + "' /><input type='hidden' id='" + barcode + "' name='" + barcode + "'/></td>";
        data += "<td style='text-align:left'><label id='" + description + "' style='width:100%;font-weight:normal'>---</label><input type='hidden' name='" + descriptionvalue + "' id='" + descriptionvalue + "'><input type='hidden' id='" + colorvalue + "' name='" + colorvalue + "'/><input type='hidden' id='" + materialvalue + "' name='" + materialvalue + "' /></td>";
        data += "<td style='text-align:left'><label id='" + designName + "' style='font-weight:normal'>---</label><input type='hidden' id='" + design + "' name='" + design + "'/><input type='hidden' id='" + designNameValue + "' name='" + designNameValue + "'/><input type='hidden' name='" + sizevalue + "' id='" + sizevalue + "'><input type='hidden' name='" + brandvalue + "' id='" + brandvalue + "'></td>";
        data += "<td style='text-align:center'><label id='" + orderedquantity + "' style='text-align:right;width:100%;font-weight:normal'>0</label></td>";
        if (ItemListFrom != "From PO") {
            data += "<td style='text-align:right'><label style='font-weight:normal'>0</label></td>";
            data += "<td style='text-align:right'><label style='font-weight:normal'>0</label></td>";
        }
        data += "<td><input type='text' id='" + quantity + "' name='" + quantity + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='Qty' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ")' onkeypress='return AllowDecimal(event," + rowid + ")' /><input type='hidden' id='" + extraqty + "' name='" + extraqty + "' value='0' /></td>";
        data += "<td><input type='text' id='" + freeqty + "' name='" + freeqty + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='Qty' style='text-align:center;width:100%' value='0' onkeypress='return AllowDecimal(event," + rowid + ")' /></td>";
        data += "<td style='text-align:right'><label style='font-weight:normal' id='" + balanceqty + "'>0</label></td>";
        data += "<td style='text-align:left'><label id='" + unit + "' style='font-weight:normal'>---</label><input type='hidden' name='" + unitvalue + "' id='" + unitvalue + "'><input type='hidden' name='" + numbertype + "' id='" + numbertype + "'></td>";
        data += "<td><input type='text' id='" + rate + "' name='" + rate + "' autocomplete='off' disabled='disabled' class='form-control col-md-1 col-lg-1' placeholder='Rate' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ")' onkeypress='return AllowNumbers(event," + rowid + ")' /><input type='hidden' id='" + mrp + "' name='" + mrp + "'/><input type='hidden' id='" + sellingprice + "' name='" + sellingprice + "'/></td>";
        data += "<td><input type='text' id='" + discount + "' name='" + discount + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='0' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ")' onkeypress='return AllowNumbers(event," + rowid + ")' /></td>";
        data += "<td style='text-align:right'><label id='" + itemtax + "'>0</label><input type='hidden' id='" + itemtaxvalue + "' name='" + itemtaxvalue + "' value='0'/></td>";
        data += "<td style='text-align:right'><label id='" + amount + "'>0</label><input type='hidden' id='" + amountvalue + "' name='" + amountvalue + "' value='0'/></td>";
        data += "<td style='text-align:right'><label id='" + proportionatetax + "'>0</label><input type='hidden' id='" + proportionatetaxvalue + "' name='" + proportionatetaxvalue + "' value='0' /><input type='hidden' id='" + proportionateamount + "' name='" + proportionateamount + "' value='0' /></td>";
        data += "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + rowid + ")' class='fa fa-trash fa-lg' style='color:red;' /><input type='hidden' id='" + ItemType + "' name='" + ItemType + "' value='Inventory'/><input type='hidden' id='" + newlyadded + "' name='" + newlyadded + "' value='NewAdded'/></td></tr>";
        unorderedList.append(data);

        $.getJSON("/Inward/GetInventoryItems",
        function (data) {
            var select = $("#" + itemCode);
            select.empty();
            select.append($('<option/>', {
                value: "",
                text: "Select"
            }));
            $.each(data, function (index, itemData) {
                select.append($('<option/>', {
                    value: itemData.Value,
                    text: itemData.Text + " " + itemData.Value
                }));
            });
        });

        $("#" + itemCode).change(function () {
            var name = document.getElementById(itemCode).value;
            if (name != "") {
                var currentrowid = 0;
                for (var i = rowid - 1; i >= 1; i--) {
                    var previousitemname = "itemCode" + i;
                    if (name == $("#" + previousitemname).val()) {
                        currentrowid = i;
                        break;
                    }
                }
                if (currentrowid == 0) {
                    var validationcount = 0;
                    for (var i = 1; i < rowid; i++) {
                        var prevquantity = "receivedquantity" + i;
                        var freeqty = "FreeQty" + i;
                        var prevrate = "rate" + i;
                        var prevdiscount = "discount" + i;
                        if (document.getElementById(prevquantity) != null) {
                            if ($("#" + prevquantity).val() == "") {
                                alertbox("Please Fill The Quantity");
                                validationcount++;
                            }
                            else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                                alertbox("Please Fill The Rate");
                                validationcount++;
                            }
                            else {
                                if (document.getElementById(prevquantity).disabled == false) {
                                    document.getElementById(prevquantity).disabled = true;
                                    document.getElementById(freeqty).disabled = true;
                                    document.getElementById(prevdiscount).disabled = true;
                                }
                            }
                        }
                    }
                    if (validationcount == 0) {
                        var Formtype = "";
                        if (document.getElementById("formtypeid").style.display == "inline") {
                            Formtype = $("#InwardFromSupplierDetails_FormType").val();
                        }
                        $.getJSON("/Inward/GetInventoryAndNonInvItemDetailsFromItems",
                            {
                                itemname: name,
                                State: $("#InwardFromSupplierDetails_SupplierState").val(),
                                Formtype: Formtype,
                                ItemType: $("#" + ItemType).val(),
                            },
                     function (data) {
                         document.getElementById("receivedquantity" + rowid).value = "";
                         document.getElementById("FreeQty" + rowid).value = "0";
                         document.getElementById("discount" + rowid).value = "0";
                         document.getElementById("amount" + rowid).innerHTML = 0.00;
                         document.getElementById("amountvalue" + rowid).innerHTML = 0.00;
                         $("#" + itemName).val(data.itemName);
                         $("#" + subcat).val(data.subcat);
                         $("#" + description).text(data.description);
                         $("#" + descriptionvalue).val(data.description);
                         $("#" + sellingprice).val(data.sellingprice);
                         $("#" + mrp).val(data.mrp);
                         $("#" + rate).val(data.costprice);
                         $("#" + design).val(data.designCode);
                         $("#" + designName).text(data.designName);
                         $("#" + designNameValue).val(data.designName);
                         $("#" + materialvalue).val(data.typematerial);
                         $("#" + colorvalue).val(data.colorname);
                         $("#" + brandvalue).val(data.brandName);
                         $("#" + sizevalue).val(data.size);
                         $("#" + unit).text(data.unit);
                         $("#" + unitvalue).val(data.unit);
                         $("#" + numbertype).val(data.NumberType);
                         $("#" + itemtax).text(data.taxPercent);
                         $("#" + itemtaxvalue).val(data.taxPercent);
                         $("#" + barcode).val(data.Barcode);

                         var tax = data.taxPercent;
                         if (tax != '0') {
                             var taxcount = document.getElementById("ItemTaxCount").value;
                             if ($("#ItemTaxNumber" + taxcount).val() == 0) {
                                 $("#ItemTaxNumber" + taxcount).val(tax);
                                 document.getElementById("AddTaxes").style.display = "inline";
                                 $("#AddedTax1").text(tax + "%");
                             }
                             else {
                                 var taxpresent = 0;
                                 for (var i = 1; i <= taxcount; i++) {
                                     var taxno = "ItemTaxNumber" + i;
                                     if (tax == $("#" + taxno).val()) {
                                         taxpresent++;
                                     }
                                 }
                                 if (taxpresent == 0) {
                                     taxcount++;
                                     var taxno = "ItemTaxNumber" + taxcount;
                                     var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                     $("#AllTaxesNumbersValue").append(data);
                                     var addedtaxno = "AddedTax" + taxcount;
                                     var addedtaxamount = "AddedTaxAmount" + taxcount;
                                     var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                     var addedamount = "AddedAmount" + taxcount;
                                     var addedamounthdn = "AddedAmounthdn" + taxcount;
                                     var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                     newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                     newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                     $("#AddTaxes").append(newlabel);
                                     $("#ItemTaxCount").val(taxcount);
                                 }
                             }
                         }
                         var CostPrice = +$("#" + rate).val();
                         var Tax = +$("#" + itemtaxvalue).val();
                         var MRP = +$("#" + mrp).val();
                         taxoncostprice = (CostPrice * Tax) / 100;
                         var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                         var Sellingprice = MRP - (MRP * +taxpercentoncostprice / 100);
                         $("#sellingprice" + rowid).val(Sellingprice.toFixed(2));
                     });
                    }
                    else {
                        $("#itemCode" + rowid).val("").attr("selected", true);
                    }
                }
                else {
                    alertbox("Item Name Already Selected Please change the quantity");
                    document.getElementById("receivedquantity" + currentrowid).disabled = false;
                    document.getElementById("FreeQty" + currentrowid).disabled = false;
                    document.getElementById("discount" + currentrowid).disabled = false;

                    $("#itemCode" + rowid).val("").attr("selected", true);
                    document.getElementById("receivedquantity" + rowid).value = 0;
                    document.getElementById("amount" + rowid).innerHTML = 0.00;
                    document.getElementById("proportionatetax" + rowid).innerHTML = 0;
                    $("#description" + rowid).text("---");
                    $("#designName" + rowid).text("---");
                    $("#discount" + rowid).val("0");
                    $("#rate" + rowid).val(0.00);
                    $("#unit" + rowid).text("---");
                    $("#ItemTax" + rowid).text("0");
                    CalculateItemWiseAmount(rowid);
                    CalculateTaxSummary(rowid);
                    CalculateTotalQuantityAndAmount();
                }
            }

            else {
                alertbox("Please Select Item First");
                document.getElementById("receivedquantity" + rowid).disabled = false;
                document.getElementById("FreeQty" + rowid).disabled = false;
                document.getElementById("discount" + rowid).disabled = false;

                $("#itemCode" + rowid).val("").attr("selected", true);
                document.getElementById("receivedquantity" + rowid).value = 0;
                document.getElementById("amount" + rowid).innerHTML = 0.00;
                document.getElementById("proportionatetax" + rowid).innerHTML = 0;
                $("#description" + rowid).text("---");
                $("#designName" + rowid).text("---");
                $("#discount" + rowid).val("0");
                $("#rate" + rowid).val(0.00);
                $("#unit" + rowid).text("---");
                $("#ItemTax" + rowid).text("0");
                CalculateItemWiseAmount(rowid);
                CalculateTaxSummary(rowid);
                CalculateTotalQuantityAndAmount();
            }
        });
        $("#hdnRowCount").val(rowid);
    }
</script>

<script type="text/javascript">
    function CalculateItemWiseAmount(count) {
        var packandforwd = (+document.getElementById("InwardFromSupplierDetails_PackAndForwd").value);
        if (packandforwd != 0 && packandforwd != "" && packandforwd != null) {
            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var quantity = "receivedquantity" + i;
                var rate = "rate" + i;
                var amount = "amount" + i;
                var discountpercent = "discount" + i;
                var amountvalue = "amountvalue" + i;
                var unit = "unit" + i;
                if (document.getElementById(quantity) != null) {
                    var percent;
                    if (document.getElementById(discountpercent).value != null) {
                        percent = (+document.getElementById(discountpercent).value) / 100;
                    }
                    else { percent = (+document.getElementById(discountpercent).innerHTML) / 100; }
                    var roundupqty = (+document.getElementById(quantity).value);
                    document.getElementById(quantity).value = roundupqty;
                    var calculatedvalue = 0;

                    if ($("#" + unit).text() == "Dozens") {
                        calculatedvalue = ((+document.getElementById(quantity).value) * 12) * (+document.getElementById(rate).value);
                    }
                    else {
                        calculatedvalue = (+document.getElementById(quantity).value) * (+document.getElementById(rate).value);
                    }
                    if (percent != 0) {
                        var valueafterdiscount = calculatedvalue * percent;
                        calculatedvalue -= valueafterdiscount;

                    }
                    document.getElementById(amountvalue).value = calculatedvalue.toFixed(2);
                    document.getElementById(amount).innerHTML = addCommas(calculatedvalue.toFixed(2));
                }
            }

            var totalamount = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                var amountvalue = "amountvalue" + i;
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proportionateamount = "proportionatetaxamount" + i;
                if (document.getElementById(amount) != null) {
                    var propotaxpercent = (+removeCommas(document.getElementById(amount).innerHTML)) / (+document.getElementById("Total_Amount_Value").value);
                    document.getElementById(proportionate).innerHTML = (propotaxpercent * 100).toFixed(2);
                    document.getElementById(proportionatetaxvalue).value = (propotaxpercent * 100).toFixed(2);
                    var packandforwdpropoamount = propotaxpercent * packandforwd;
                    document.getElementById(proportionateamount).value = packandforwdpropoamount.toFixed(2);
                    if (document.getElementById(proportionate).innerHTML.toString() == "NaN") {
                        document.getElementById(proportionate).innerHTML = "0";
                    }
                    CalculateTaxSummary(i);
                }
            }
            CalculateTotalQuantityAndAmount();
            totalamount += packandforwd;
            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }
            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
        }
        else {
            var proportionatecount = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= proportionatecount; i++) {
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proporamount = "proportionatetaxamount" + i;
                if (document.getElementById(proportionate) != null) {
                    document.getElementById(proportionate).innerHTML = "0";
                    document.getElementById(proportionatetaxvalue).value = 0;
                    document.getElementById(proporamount).value = 0;
                }
            }
            var quantity = "receivedquantity" + count;
            var rate = "rate" + count;
            var amount = "amount" + count;
            var discountpercent = "discount" + count;
            var amountvalue = "amountvalue" + count;
            var unit = "unit" + count;
            var totalamount = 0;
            if (document.getElementById(quantity) != null) {
                var percent;
                if (document.getElementById(discountpercent).value != null) {
                    percent = (+document.getElementById(discountpercent).value) / 100;
                }
                else { percent = (+document.getElementById(discountpercent).innerHTML) / 100; }
                var roundupqty = (+document.getElementById(quantity).value);
                document.getElementById(quantity).value = roundupqty;
                var calculatedvalue = 0;

                if ($("#" + unit).text() == "Dozens") {
                    calculatedvalue = ((+document.getElementById(quantity).value) * 12) * (+document.getElementById(rate).value);
                }
                else {
                    calculatedvalue = (+document.getElementById(quantity).value) * (+document.getElementById(rate).value);
                }
                if (percent != 0) {
                    var valueafterdiscount = calculatedvalue * percent;
                    calculatedvalue -= valueafterdiscount;

                }
                document.getElementById(amountvalue).value = calculatedvalue.toFixed(2);
                document.getElementById(amount).innerHTML = addCommas(calculatedvalue.toFixed(2));
            }
            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            totalamount = Math.round(totalamount.toFixed(2));
            document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
            CalculateTaxSummary(rowid);
            CalculateTotalQuantityAndAmount();
            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }
            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
        }

        var rowid = document.getElementById("hdnRowCount").value;
        var previtemCode = "itemCode" + rowid;
        var prevquantity = "receivedquantity" + rowid;
        var prevfreeqty = "FreeQty" + rowid;
        var prevrate = "rate" + rowid;
        var prevdiscountpercent = "discount" + rowid;
        if (document.getElementById(previtemCode) != null) {
            document.getElementById(previtemCode).disabled = false;
            document.getElementById(prevquantity).disabled = false;
            document.getElementById(prevdiscountpercent).disabled = false;
            document.getElementById(prevfreeqty).disabled = false;
        }
    }
</script>

<script type="text/javascript">
    function CalculateItemTaxNumber() {
        var rowcount = +document.getElementById("hdnRowCount").value;
        for (i = 1; i <= rowcount; i++) {
            var tax = +document.getElementById("ItemTaxValue" + i).value;
            if (tax != 0) {
                CalculateItemTax(tax);
                CalculateTaxSummary(i);
            }
        }
    }

    function CalculateItemTax(tax) {
        var taxcount = document.getElementById("ItemTaxCount").value;
        if ($("#ItemTaxNumber" + taxcount).val() == 0) {
            $("#ItemTaxNumber" + taxcount).val(tax);
            document.getElementById("AddTaxes").style.display = "inline";
            $("#AddedTax1").text(tax + "%");
        }
        else {
            var taxpresent = 0;
            for (var i = 1; i <= taxcount; i++) {
                var taxno = "ItemTaxNumber" + i;
                if (tax == $("#" + taxno).val()) {
                    taxpresent++;
                }
            }
            if (taxpresent == 0) {
                taxcount++;
                var taxno = "ItemTaxNumber" + taxcount;
                var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                $("#AllTaxesNumbersValue").append(data);
                var addedtaxno = "AddedTax" + taxcount;
                var addedtaxamount = "AddedTaxAmount" + taxcount;
                var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                var addedamount = "AddedAmount" + taxcount;
                var addedamounthdn = "AddedAmounthdn" + taxcount;
                var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                $("#AddTaxes").append(newlabel);
                $("#ItemTaxCount").val(taxcount);
            }
        }
    }
</script>

<script type="text/javascript">
    function CalculateProportionateTax() {
        var rowid = document.getElementById("hdnRowCount").value;
        var totalamount = 0;
        for (var i = 1; i <= rowid; i++) {
            var amount = "amount" + i;
            if (document.getElementById(amount) != null) {
                totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
            }
        }
        var packandforwd = (+document.getElementById("InwardFromSupplierDetails_PackAndForwd").value);
        document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
        for (var i = 1; i <= rowid; i++) {
            var amount = "amount" + i;
            var amountvalue = "amountvalue" + i;
            var proportionate = "proportionatetax" + i;
            var proportionatetaxvalue = "proportionatetaxvalue" + i;
            var proportionateamount = "proportionatetaxamount" + i;
            if (document.getElementById(amount) != null) {
                var propotaxpercent = (+removeCommas(document.getElementById(amount).innerHTML)) / (+document.getElementById("Total_Amount_Value").value);
                document.getElementById(proportionate).innerHTML = (propotaxpercent * 100).toFixed(2);
                document.getElementById(proportionatetaxvalue).value = (propotaxpercent * 100).toFixed(2);
                var packandforwdpropoamount = propotaxpercent * packandforwd;
                document.getElementById(proportionateamount).value = packandforwdpropoamount.toFixed(2);
                if (document.getElementById(proportionate).innerHTML.toString() == "NaN") {
                    document.getElementById(proportionate).innerHTML = "0";
                }
                CalculateTaxSummary(i);
            }
        }
        document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totalamount.toFixed(2));
        var GrandTotal = +totalamount + +document.getElementById("TotalTaxAmountValue").value + +document.getElementById("InwardFromSupplierDetails_PackAndForwd").value;
        document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(GrandTotal.toFixed(2));
        document.getElementById("Grand_Total_Value").innerHTML = GrandTotal.toFixed(2);
    }
</script>

<script type="text/javascript">
    function CalculateTaxSummary(rowid) {
        var TaxCount = document.getElementById("ItemTaxCount").value;
        for (var i = 1; i <= TaxCount; i++) {
            var TotalTaxAmount = 0;
            var itemtaxno = "ItemTaxNumber" + i;
            var addedtaxamount = "AddedTaxAmount" + i;
            var addedtaxamounthdn = "AddedTaxAmounthdn" + i;
            var addedamount = "AddedAmount" + i;
            var addedamounthdn = "AddedAmounthdn" + i;
            for (var j = 1; j <= rowid; j++) {
                var itemtaxvalue = "ItemTaxValue" + j;
                var amount = "amount" + j;
                var proporamount = "proportionatetaxamount" + j;
                if (document.getElementById(amount) != null) {
                    if ($("#" + itemtaxno).val() == $("#" + itemtaxvalue).val()) {
                        TotalTaxAmount = (+TotalTaxAmount) + (+removeCommas(document.getElementById(amount).innerHTML)) + (+document.getElementById(proporamount).value);
                    }
                }
            }
            document.getElementById(addedamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedamounthdn).value = TotalTaxAmount.toFixed(2);
            TotalTaxAmount = TotalTaxAmount * (+document.getElementById(itemtaxno).value / 100);
            document.getElementById(addedtaxamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedtaxamounthdn).value = TotalTaxAmount.toFixed(2);
        }
    }
</script>

<script type="text/javascript">
    $("#Edit").click(function () {
        window.location.assign("/Inward/InwardFromSupplierEdit");
    });

    $("#Print").click(function () {
        window.location.assign("/Inward/InwardFromSupplierPrint");
    });

    function OpenPopUp() {
        window.open("/Inward/NewItem", "_target", "width=1200,height=600,top=20px,left=100px");
    }

    $(function () {
        $("#Submit").click(function () {
            var validationcounter = 0;
            if ($("#InwardFromSupplierDetails_ChallanNo").val() == "" && $("#InwardFromSupplierDetails_BillNo").val() == "") {
                alertbox("Please Fill The Bill No Or Challan No");
                validationcounter++;
                return false;
            }

            if ($("#InwardFromSupplierDetails_SupplierName").val() == "" || $("#ddlponos").val() == "") {
                validationcounter++;
            }

            if ($("#InwardFromSupplierDetails_ChallanNo").val() != "") { //if challan no field is not empty then call alert
                if ($("#InwardFromSupplierDetails_ChallanDate").val() == "") {
                    alertbox("Please Fill The Challan Date");
                    return false;
                }
            }

            if ($("#InwardFromSupplierDetails_BillNo").val() != "") { //if bill no field is not empty then call alert
                if ($("#InwardFromSupplierDetails_BillDate").val() == "") {
                    alertbox("Please Fill The Bill Date");
                    return false;
                }
            }

            var rowid = document.getElementById("hdnRowCount").value;

            for (var i = 1; i <= rowid; i++) {
                var previtemCode = "itemCode" + i;
                var prevquantity = "receivedquantity" + i;
                var prevfreeqty = "FreeQty" + i;
                var prevrate = "rate" + i;
                var prevdiscount = "discount" + i;
                if (document.getElementById(prevquantity) != null) {
                    if ($("#" + previtemCode).val() == "") {
                        alertbox("Please Select The Item ");
                        validationcounter = i;
                        return false;
                        break;
                    }
                    else if ((+$("#" + prevrate).val()) == 0 || $("#" + prevrate).val() == "") {
                        alertbox("Please Fill The Rate");
                        validationcounter = i;
                        return false;
                        break;
                    }
                    else if ($("#" + prevquantity).val() == "") {
                        alertbox("Please Fill The Quantity");
                        validationcounter = i;
                        return false;
                        break;
                    }
                }
            }

            if (validationcounter == 0) {
                for (var i = 1; i <= rowid; i++) {
                    var previtemCode = "itemCode" + i;
                    var prevquantity = "receivedquantity" + i;
                    var prevfreeqty = "FreeQty" + i;
                    var prevrate = "rate" + i;
                    var prevdiscount = "discount" + i;
                    if (document.getElementById(prevquantity) != null) {
                        document.getElementById(previtemCode).disabled = false;
                        document.getElementById(prevquantity).disabled = false;
                        document.getElementById(prevfreeqty).disabled = false;
                        document.getElementById(prevrate).disabled = false;
                        document.getElementById(prevdiscount).disabled = false;
                    }
                }
            }

            if (validationcounter == 0) {
                setTimeout(function () {
                    document.getElementById("Submit").disabled = true;
                }, 100);
            }
        });
    });
</script>
@using (Html.BeginForm("InwardFromSupplier", "Inward", FormMethod.Post))
{
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierAddress)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierEmail)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierState)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.FormType)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.Registered)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.DelDate)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PoDate)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ReceivedAt)
    @Html.HiddenFor(model => model.PerformaCode)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ModeOfTransport)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.TransportName)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.TransportContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownCode)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownName)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownArea)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownEmail)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownContactPerson)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopCode)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopName)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopEmail)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopContactPerson)

    <audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
        <source src="" type="audio/ogg" />
    </audio>
    <input type="hidden" id="GetItemListFrom" name="GetItemListFrom" />
    <input type="hidden" id="AlreadyPresentItems" name="AlreadyPresentItems" />
    <table style="border: 1px double; width: 100%">
        <tr>
            <td>
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="row form-group">
                            <div class="form-group"></div>
                            <div class="col-md-4 col-lg-4">
                                <div class="col-md-12 col-lg-12">
                                    <label style="font-size: medium">Supplier Details:</label>
                                    <div style="height: 10px"></div>
                                    <div class="col-md-12 col-lg-12">
                                        <div class="row">
                                            <div class="col-md-3 col-lg-3">
                                                <label>Name<i style="color: red">*</i></label>
                                            </div>
                                            <div class="col-md-9 col-lg-9">
                                                @Html.TextBoxFor(model => model.InwardFromSupplierDetails.SupplierName, new { @placeholder = "Supplier Name", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.InwardFromSupplierDetails.SupplierName, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                        <div style="display: none" id="SupplierDetails">
                                            <label>State: &nbsp</label><label style="font-weight: normal" id="SupplierState"></label><br />
                                            <label>Contact Number: &nbsp</label><label style="font-weight: normal" id="SupplierContactNo"></label><br />
                                            <label>Email: &nbsp</label><label style="font-weight: normal" id="SupplierEmail"></label><br />
                                            <label>Registered: &nbsp</label><label style="font-weight: normal" id="SupplierType"></label><br />
                                            <div id="formtypeid" style="display: none">
                                                <label for="exampleInputSalesTax">Form Type :</label>
                                                <label style="font-weight: normal" id="formtype"></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-lg-4" style="border-left: 1px solid #999; height: 210px;">
                                <div class="col-md-12 col-lg-12">
                                    <div class="row">
                                        <div class="row" id="PO_Details" style="display: none">
                                            <div class="col-md-5 col-lg-5">
                                                <div style="height: 3px"></div>
                                                <label style="font-size: 18px">PO No.<label style="color: red">*</label></label>
                                            </div>
                                            <div class="col-md-7 col-lg-7">
                                                @Html.DropDownListFor(model => model.InwardFromSupplierDetails.PoNo, Enumerable.Empty<SelectListItem>(), "Godown Name", new { id = "ddlponos", @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" id="Delivery_Details" style="display: none">
                                        <div class="col-md-12 col-lg-12">
                                            <label>Delivery Date: &nbsp</label><label id="Delivery_Date" style="font-weight: normal"></label><br />
                                            <label>PO Date: &nbsp</label><label id="PO_Date" style="font-weight: normal"></label><br />
                                            <label>Receiving Date: &nbsp</label><label id="Receiving_Date" style="font-weight: normal"></label><br />
                                            <div id="RemarksDetails" style="display: none">
                                                <label>Remarks: &nbsp</label>
                                                <label id="RemarksEarlier" style="font-weight: normal; color: darkgreen; display: none"></label>
                                                <label id="RemarksDelay" style="font-weight: normal; color: red; display: none"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div style="height: 5px"></div>
                                    <div class="row" id="Transport_Details" style="display: none">
                                        <div style="width: 100%; height: 1px; background-color: lightgrey;"></div>
                                        <div style="height: 5px"></div>
                                        <label style="font-size: medium">Transport Details:</label>
                                        <div class="col-md-12 col-lg-12">
                                            <label>Transport Mode: &nbsp</label><label id="TransportMode" style="font-weight: normal"></label><br />
                                            <label>Transport Name: &nbsp</label><label id="TransportName" style="font-weight: normal"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-lg-4" style="border-left: 1px solid #999; height: 210px;">
                                <div class="row">
                                    <div class="col-md-11 col-lg-11">
                                        @{
    string dt = DateTime.Now.ToString("dd/MM/yyyy");
    string date = DateTime.Now.ToString("MM/dd/yyyy");
    string billdate = DateTime.Now.ToString("MM/dd/yyyy");
    string challandate = DateTime.Now.ToString("MM/dd/yyyy");
                                        }
                                        <table>
                                            <tr>
                                                <td style="width: 34%">
                                                    <div style="height: 2px"></div>
                                                    <label>Date</label>
                                                </td>
                                                <td>
                                                    <label id="date" style="font-size: 14px;">@dt</label>
                                                    <input type="hidden" id="receivingdate" value="@date" />
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div style="height: 2px"></div>
                                                    <label id="InwardNoLabel" style="display: none">Inward No.</label>
                                                </td>
                                                <td>
                                                   <label id="InwardCode" style="font-size: 14px; display: none"></label>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td colspan="2">
                                                    <table id="ReceivedAt" style="display: none; border-spacing: 0px; padding: 0px;" cellspacing="0" cellpadding="0">
                                                        <tr>
                                                            <td style="border-spacing: 0px; padding: 0px; width: 35%" >
                                                                <label>Challan No.</label>
                                                            </td>
                                                            <td>
                                                                @Html.TextBoxFor(model => model.InwardFromSupplierDetails.ChallanNo, new { @style = "text-align: center", @placeholder = "ChallanNo", @class = "form-control", @autocomplete = "off" })
                                                                @Html.ValidationMessageFor(model => model.InwardFromSupplierDetails.ChallanNo, null, new { style = "color:red" })
                                                            </td>
                                                        </tr>
                                                        <tr style="height: 8px">
                                                        </tr>
                                                        <tr>
                                                            <td style="border-spacing: 0px; padding: 0px;">
                                                                <label>Challan Date</label>
                                                            </td>
                                                            <td>
                                                                <input type="text" id="InwardFromSupplierDetails_ChallanDate" name="InwardFromSupplierDetails.ChallanDate" class="form-control" value="@challandate" autocomplete="off" onkeypress="return false" style="text-align:center" disabled="disabled" />
                                                            </td>
                                                        </tr>
                                                        <tr style="height: 8px">
                                                        </tr>
                                                        <tr>
                                                            <td style="border-spacing: 0px; padding: 0px;">
                                                                <label for="exampleInputname">Bill No. </label>
                                                            </td>
                                                            <td>
                                                                @Html.TextBoxFor(model => model.InwardFromSupplierDetails.BillNo, new { @style = "text-align: center", @class = "form-control", @placeholder = "BillNo", @autocomplete = "off" })
                                                                @Html.ValidationMessageFor(model => model.InwardFromSupplierDetails.BillNo, null, new { style = "color:red" })
                                                            </td>
                                                        </tr>
                                                        <tr style="height: 8px">
                                                        </tr>
                                                        <tr>
                                                            <td style="border-spacing: 0px; padding: 0px;">
                                                                <label for="exampleInputname">Bill Date </label>
                                                            </td>
                                                            <td>
                                                                <input type="text" id="InwardFromSupplierDetails_BillDate" name="InwardFromSupplierDetails.BillDate" class="form-control" onkeypress="return false" value="@billdate" autocomplete="off" style="text-align:center" disabled="disabled" />
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div id="LoadList"></div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
    <div style="height: 5px"></div>
    <div class="col-lg-9 col-md-9">
        <input type="submit" id="Submit" value="Save" disabled="disabled"  @*onclick="OpenLoginPageForVerification()"*@ class="col-md-offset-8 col-lg-offset-8 btn btn-success" />
    </div>
    <div class="col-lg-3 col-md-3" style="text-align: right">
        <button type="button" id="Edit" class="btn btn-warning" data-toggle="tooltip" title="Edit"><i class="fa fa-pencil"></i></button>
        <button type="button" id="Print" class="btn btn-primary" data-toggle="tooltip" title="Print"><i class="fa fa-print" title="Print"></i></button>
    </div>
}