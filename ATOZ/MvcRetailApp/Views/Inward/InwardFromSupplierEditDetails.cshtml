@model CodeFirstEntities.MainApplication

@{
    ViewBag.Title = "InwardFromSupplierEditDetails";
}

<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

<link href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jsDatePick.jquery.min.1.3.js")"></script>
<script src="@Url.Content("~/Scripts/jsDatePick.min.1.3.js")"></script>

<script type="text/javascript">
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }

    function confirmbox(message, row) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone2.ogg';
        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('confirmClass');
        bootbox.confirm('<i class="fa fa-2x fa-question-circle"></i><br>' + message + '<hr>',
		 function (result) {
		     if (result) {
		         $("#" + row).remove();
		         CalculateTotalQuantityAndAmount();
		     }
		 });
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {

        //var rowcount = document.getElementById("hdnRowCount").value;
        //for (var i = 1; i <= rowcount; i++) {
        //    var amount = "amountvalue" + i;
        //    var totalamount = document.getElementById(amount).value;
        //    document.getElementById("Total_Amount_Value").value = +document.getElementById("Total_Amount_Value").value + +(totalamount);
        //}

        var deldate = document.getElementById("deldate").innerHTML;
        var dat = new Date(deldate);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('deldate').innerHTML = data;

        var podate = document.getElementById("podate").innerHTML;
        var dat = new Date(podate);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('podate').innerHTML = data;

        var receivedate = document.getElementById("receivedate").innerHTML;
        var dat = new Date(receivedate);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('receivedate').innerHTML = data;

        var temp = $("#date").text();
        var dat = new Date(temp);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById("date").innerHTML = data;

        if ($("#InwardFromSupplierDetails_ChallanDate").val() != "") {
            var temp = $("#InwardFromSupplierDetails_ChallanDate").val();
            var dat = new Date(temp);
            var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
            var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
            document.getElementById('InwardFromSupplierDetails_ChallanDate').value = data;
        }
        else {
            document.getElementById("InwardFromSupplierDetails_ChallanDate").disabled = true;
        }

        if ($("#InwardFromSupplierDetails_BillDate").val() != "") {
            var temp = $("#InwardFromSupplierDetails_BillDate").val();
            var dat = new Date(temp);
            var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
            var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
            document.getElementById('InwardFromSupplierDetails_BillDate').value = data;
        }
        else {
            document.getElementById("InwardFromSupplierDetails_BillDate").disabled = true;
        }

        new JsDatePick({
            useMode: 2,
            target: "InwardFromSupplierDetails_ChallanDate",
            dateFormat: "%d/%M/%Y",
        });

        new JsDatePick({
            useMode: 2,
            target: "InwardFromSupplierDetails_BillDate",
            dateFormat: "%d/%M/%Y",
        });
    });

    $(document).ready(function () {
        $("#InwardFromSupplierDetails_ChallanNo").change(function () {
            var value = $(this).val();
            if (value != 0 && value != "") {
                document.getElementById("InwardFromSupplierDetails_ChallanDate").disabled = false;
            }
            else {
                document.getElementById("InwardFromSupplierDetails_ChallanDate").disabled = true;
            }
        });

        $("#InwardFromSupplierDetails_BillNo").change(function () {
            var value = $(this).val();
            if (value != 0 && value != "") {
                document.getElementById("InwardFromSupplierDetails_BillDate").disabled = false;
            }
            else {
                document.getElementById("InwardFromSupplierDetails_BillDate").disabled = true;
            }
        });
    });

    $(document).keypress(function (e) {
        if (e.which == 13) {
            var previousRowValidationCount = 0;
            var rowid = document.getElementById("hdnRowCount").value;
            var presentrows = +$("#AlreadyPresentItems").val();
            if (presentrows >= rowid) {
                for (var i = 1; i <= presentrows; i++) {
                    var prevquantity = "receivedquantity" + i;
                    var prevrate = "rate" + i;
                    var prevfreeqty = "FreeQty" + i;
                    var prevdiscount = "discount" + i;
                    if (document.getElementById(prevquantity).disabled == false) {
                        if ($("#" + prevquantity).val() == "") {
                            alertbox("Please Fill The Quantity");
                            previousRowValidationCount++;
                            break;
                        }
                        else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                            alertbox("Please Fill The Rate");
                            previousRowValidationCount++;
                            break;
                        }
                        else {
                            document.getElementById(prevquantity).disabled = true;
                            document.getElementById(prevfreeqty).disabled = true;
                            document.getElementById(prevrate).disabled = true;
                            document.getElementById(prevdiscount).disabled = true;
                        }
                    }
                }
            }
            if (previousRowValidationCount == 0) {
                var previtemCode = "itemCode" + rowid;
                var prevquantity = "receivedquantity" + rowid;
                var prevfreeqty = "FreeQty" + rowid;
                var prevrate = "rate" + rowid;
                var prevdiscountpercent = "discount" + rowid;
                //If Row was Not DELETED
                if (document.getElementById(previtemCode) != null) {
                    //If Required Fields are Empty of Previous Row
                    if ($("#" + previtemCode).val() == "") {
                        alertbox("Please Select The Item");
                    }
                    else if ($("#" + prevquantity).val() == "") {
                        alertbox("Please Fill The Quantity");
                    }
                    else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                        alertbox("Please Fill The Rate");
                    }
                        //If Required Fields are Not Empty then Generate Row
                    else {
                        if (document.getElementById(previtemCode) != null) {
                            document.getElementById(previtemCode).disabled = true;
                            document.getElementById(prevquantity).disabled = true;
                            document.getElementById(prevfreeqty).disabled = true;
                            document.getElementById(prevrate).disabled = true;
                            document.getElementById(prevdiscountpercent).disabled = true;
                        }
                        GenerateDynamicRow(rowid);
                    }
                }
                    //If row was DELETED then Generate Row
                else {
                    if (document.getElementById(previtemCode) != null) {
                        document.getElementById(previtemCode).disabled = true;
                        document.getElementById(prevquantity).disabled = true;
                        document.getElementById(prevfreeqty).disabled = true;
                        document.getElementById(prevrate).disabled = true;
                        document.getElementById(prevdiscountpercent).disabled = true;
                    }
                    GenerateDynamicRow(rowid);
                }
            }
        }
    });

    function GenerateDynamicRow(rowid) {
        rowid = +rowid + 1;
        var subcat = "SubCat" + rowid;
        var ItemType = "ItemType" + rowid;
        var row = "row" + rowid;
        var itemCode = "itemCode" + rowid;
        var itemName = "itemName" + rowid;
        var barcode = "barcode" + rowid;
        var description = "description" + rowid;
        var descriptionvalue = "descriptionvalue" + rowid;
        var materialvalue = "materialvalue" + rowid;
        var brandvalue = "brandvalue" + rowid;
        var sizevalue = "sizevalue" + rowid;
        var colorvalue = "colorvalue" + rowid;
        var orderedquantity = "orderedquantity" + rowid;
        var quantity = "receivedquantity" + rowid;
        var balanceqty = "balanceqty" + rowid;
        var extraqty = "ExtraQty" + rowid;
        var freeqty = "FreeQty" + rowid;
        var prevbal = "prevbal" + rowid;
        var rate = "rate" + rowid;
        var mrp = "MRP" + rowid;
        var sellingprice = "sellingprice" + rowid;
        var discount = "discount" + rowid;
        var amount = "amount" + rowid;
        var amountvalue = "amountvalue" + rowid;
        var itemtax = "ItemTax" + rowid;
        var itemtaxvalue = "ItemTaxValue" + rowid;
        var unit = "unit" + rowid;
        var unitvalue = "unitvalue" + rowid;
        var numbertype = "numberType" + rowid;
        var design = "design" + rowid;
        var designName = "designName" + rowid;
        var designNameValue = "designNameValue" + rowid;
        var proportionatetax = "proportionatetax" + rowid;
        var proportionatetaxvalue = "proportionatetaxvalue" + rowid;
        var proportionateamount = "proportionatetaxamount" + rowid;
        var newlyadded = "NewAdded" + rowid;

        var unorderedList;
        unorderedList = $("#ItemsFromPerforma");

        var data = "<tr id='" + row + "'><input type='hidden' id='" + subcat + "' name='" + subcat + "' />";
        data += "<td><select id='" + itemCode + "' name='" + itemCode + "' class='form-control col-md-2 col-lg-2'><option value=''>Select</option></select><input type='hidden' id='" + itemName + "' name='" + itemName + "' /><input type='hidden' id='" + barcode + "' name='" + barcode + "'/></td>";
        data += "<td style='text-align:left'><label id='" + description + "' style='width:100%;font-weight:normal'>---</label><input type='hidden' name='" + descriptionvalue + "' id='" + descriptionvalue + "'><input type='hidden' id='" + colorvalue + "' name='" + colorvalue + "'/><input type='hidden' id='" + materialvalue + "' name='" + materialvalue + "' /></td>";
        data += "<td style='text-align:left'><label id='" + designName + "' style='text-align:center;width:100%;font-weight:normal'>---</label><input type='hidden' id='" + design + "' name='" + design + "'/><input type='hidden' id='" + designNameValue + "' name='" + designNameValue + "'/><input type='hidden' name='" + sizevalue + "' id='" + sizevalue + "'><input type='hidden' name='" + brandvalue + "' id='" + brandvalue + "'></td>";
        data += "<td style='text-align:center'><label id='" + orderedquantity + "' style='text-align:right;width:100%;font-weight:normal'>0</label></td>";
        data += "<td style='text-align:center'><label id='" + prevbal + "' style='text-align:right;width:100%;font-weight:normal'>0</label></td>";
        data += "<td style='text-align:center'><label style='text-align:right;width:100%;font-weight:normal'>0</label></td>";
        data += "<td><input type='text' id='" + quantity + "' name='" + quantity + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='Qty' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ")' onkeypress='return AllowDecimal(event," + rowid + ")' /><input type='hidden' id='" + extraqty + "' name='" + extraqty + "' value='0' /></td>";
        data += "<td><input type='text' id='" + freeqty + "' name='" + freeqty + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='Qty' style='text-align:center;width:100%' value='0' onkeypress='return AllowDecimal(event," + rowid + ")' /></td>";
        data += "<td style='text-align:center'><label style='text-align:right;width:100%;font-weight:normal' id='" + balanceqty + "'>0</label></td>";
        data += "<td style='text-align:center'><label id='" + unit + "' style='font-weight:normal'>---</label><input type='hidden' name='" + unitvalue + "' id='" + unitvalue + "'><input type='hidden' name='" + numbertype + "' id='" + numbertype + "'></td>";
        data += "<td><input type='text' id='" + rate + "' name='" + rate + "' autocomplete='off' disabled='disabled' class='form-control col-md-1 col-lg-1' placeholder='Rate' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ")' onkeypress='return AllowNumbers(event," + rowid + ")' /><input type='hidden' id='" + mrp + "' name='" + mrp + "'/><input type='hidden' id='" + sellingprice + "' name='" + sellingprice + "'/></td>";
        data += "<td><input type='text' id='" + discount + "' name='" + discount + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='0' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ")' onkeypress='return AllowNumbers(event," + rowid + ")' /></td>";
        data += "<td style='text-align:right'><label id='" + itemtax + "'>0</label><input type='hidden' id='" + itemtaxvalue + "' name='" + itemtaxvalue + "' value='0'/></td>";
        data += "<td style='text-align:right'><label id='" + amount + "'>0</label><input type='hidden' id='" + amountvalue + "' name='" + amountvalue + "' value='0'/></td>";
        data += "<td style='text-align:right'><label id='" + proportionatetax + "'>0</label><input type='hidden' id='" + proportionatetaxvalue + "' name='" + proportionatetaxvalue + "' value='0' /><input type='hidden' id='" + proportionateamount + "' name='" + proportionateamount + "' value='0' /></td>";
        data += "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + rowid + ")' class='fa fa-trash fa-lg' style='color:red;' /><input type='hidden' id='" + ItemType + "' name='" + ItemType + "' value='Inventory'/><input type='hidden' id='" + newlyadded + "' name='" + newlyadded + "' value='NewAdded'/></td></tr>";
        unorderedList.append(data);

        $.getJSON("/Inward/GetInventoryItems",
        function (data) {
            var select = $("#" + itemCode);
            select.empty();
            select.append($('<option/>', {
                value: "",
                text: "Select"
            }));
            $.each(data, function (index, itemData) {
                select.append($('<option/>', {
                    value: itemData.Value,
                    text: itemData.Text + " " + itemData.Value
                }));
            });
        });

        $("#" + itemCode).change(function () {
            var name = document.getElementById(itemCode).value;
            if (name != "") {
                var currentrowid = 0;
                for (var i = rowid - 1; i >= 1; i--) {
                    var previousitemname = "itemCode" + i;
                    if (name == $("#" + previousitemname).val()) {
                        currentrowid = i;
                        break;
                    }
                }
                if (currentrowid == 0) {
                    var validationcount = 0;
                    for (var i = 1; i < rowid; i++) {
                        var prevquantity = "receivedquantity" + i;
                        var freeqty = "FreeQty" + i;
                        var prevrate = "rate" + i;
                        var prevdiscount = "discount" + i;
                        if (document.getElementById(prevquantity) != null) {
                            if ($("#" + prevquantity).val() == "") {
                                alertbox("Please Fill The Quantity");
                                validationcount++;
                            }
                            else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                                alertbox("Please Fill The Rate");
                                validationcount++;
                            }
                            else {
                                if (document.getElementById(prevquantity) != null) {
                                    if (document.getElementById(prevquantity).disabled == false) {
                                        document.getElementById(prevquantity).disabled = true;
                                        document.getElementById(freeqty).disabled = true;
                                        document.getElementById(prevrate).disabled = true;
                                        document.getElementById(prevdiscount).disabled = true;
                                    }
                                }
                            }
                        }
                    }
                    if (validationcount == 0) {
                        var Formtype = "";
                        if (document.getElementById("formtypeid").style.display == "inline") {
                            Formtype = $("#InwardFromSupplierDetails_FormType").val();
                        }
                        $.getJSON("/Inward/GetInventoryAndNonInvItemDetailsFromItems",
                            {
                                itemname: name,
                                State: $("#InwardFromSupplierDetails_SupplierState").val(),
                                Formtype: Formtype,
                                ItemType: $("#" + ItemType).val(),
                            },
                     function (data) {
                         document.getElementById("receivedquantity" + rowid).value = "";
                         document.getElementById("FreeQty" + rowid).value = "0";
                         document.getElementById("discount" + rowid).value = "0";
                         document.getElementById("amount" + rowid).innerHTML = 0.00;
                         document.getElementById("amountvalue" + rowid).innerHTML = 0.00;
                         $("#" + subcat).val(data.subcat);
                         $("#" + itemName).val(data.itemName);
                         $("#" + description).text(data.description);
                         $("#" + descriptionvalue).val(data.description);
                         $("#" + sellingprice).val(data.sellingprice);
                         $("#" + mrp).val(data.mrp);
                         $("#" + rate).val(data.costprice);
                         $("#" + design).val(data.designCode);
                         $("#" + designName).text(data.designName);
                         $("#" + designNameValue).val(data.designName);
                         $("#" + materialvalue).val(data.typematerial);
                         $("#" + colorvalue).val(data.colorname);
                         $("#" + brandvalue).val(data.brandName);
                         $("#" + sizevalue).val(data.size);
                         $("#" + unit).text(data.unit);
                         $("#" + unitvalue).val(data.unit);
                         $("#" + numbertype).val(data.NumberType);
                         $("#" + itemtax).text(data.taxPercent);
                         $("#" + itemtaxvalue).val(data.taxPercent);
                         $("#" + barcode).val(data.Barcode);

                         //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                         //on each item which is applied
                         var tax = data.taxPercent;
                         if (tax != '0') {//if tax is '0' no need to add new taxnumber
                             var taxcount = document.getElementById("ItemTaxCount").value;
                             if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                 $("#ItemTaxNumber" + taxcount).val(tax);
                                 document.getElementById("AddTaxes").style.display = "inline";
                                 $("#AddedTax1").text(tax + "%");
                             }
                             else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                 var taxpresent = 0;
                                 for (var i = 1; i <= taxcount; i++) {
                                     var taxno = "ItemTaxNumber" + i;
                                     if (tax == $("#" + taxno).val()) {
                                         taxpresent++;
                                     }
                                 }
                                 if (taxpresent == 0) {
                                     taxcount++;
                                     var taxno = "ItemTaxNumber" + taxcount;
                                     var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                     $("#AllTaxesNumbersValue").append(data);
                                     var addedtaxno = "AddedTax" + taxcount;
                                     var addedtaxamount = "AddedTaxAmount" + taxcount;
                                     var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                     var addedamount = "AddedAmount" + taxcount;
                                     var addedamounthdn = "AddedAmounthdn" + taxcount;
                                     var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                     newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                     newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                     $("#AddTaxes").append(newlabel);
                                     $("#ItemTaxCount").val(taxcount);
                                 }
                             }
                         }
                     });
                    }
                    else {
                        $("#itemCode" + rowid).val("").attr("selected", true);
                    }
                }
                else {
                    alertbox("Item Name Already Selected Please change the quantity");
                    document.getElementById("receivedquantity" + currentrowid).disabled = false;
                    document.getElementById("FreeQty" + currentrowid).disabled = false;
                    document.getElementById("discount" + currentrowid).disabled = false;

                    $("#itemCode" + rowid).val("").attr("selected", true);
                    document.getElementById("receivedquantity" + rowid).value = 0;
                    document.getElementById("amount" + rowid).innerHTML = 0.00;
                    document.getElementById("proportionatetax" + rowid).innerHTML = 0;
                    $("#description" + rowid).text("---");
                    $("#designName" + rowid).text("---");
                    $("#discount" + rowid).val("0");
                    $("#rate" + rowid).val(0.00);
                    $("#unit" + rowid).text("---");
                    $("#ItemTax" + rowid).text("0");
                    CalculateItemWiseAmount(rowid);
                    CalculateTaxSummary(rowid);
                    CalculateTotalQuantityAndAmount();
                }
            }

            else {
                alertbox("Please Select Item First");
                document.getElementById("receivedquantity" + rowid).disabled = false;
                document.getElementById("FreeQty" + rowid).disabled = false;
                document.getElementById("discount" + rowid).disabled = false;

                $("#itemCode" + rowid).val("").attr("selected", true);
                document.getElementById("receivedquantity" + rowid).value = 0;
                document.getElementById("amount" + rowid).innerHTML = 0.00;
                document.getElementById("proportionatetax" + rowid).innerHTML = 0;
                $("#description" + rowid).text("---");
                $("#designName" + rowid).text("---");
                $("#discount" + rowid).val("0");
                $("#rate" + rowid).val(0.00);
                $("#unit" + rowid).text("---");
                $("#ItemTax" + rowid).text("0");
                CalculateItemWiseAmount(rowid);
                CalculateTaxSummary(rowid);
                CalculateTotalQuantityAndAmount();
            }
        });
        $("#hdnRowCount").val(rowid);
    }

    function CalculateItemWiseAmount(count) {
        var packandforwd = (+document.getElementById("InwardFromSupplierDetails_PackAndForwd").value);
        if (packandforwd != 0 && packandforwd != "" && packandforwd != null) {
            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var quantity = "receivedquantity" + i;
                var rate = "rate" + i;
                var amount = "amount" + i;
                var discountpercent = "discount" + i;
                var amountvalue = "amountvalue" + i;
                var unit = "unit" + i;
                if (document.getElementById(quantity) != null) {
                    var percent;
                    if (document.getElementById(discountpercent).value != null) {
                        percent = (+document.getElementById(discountpercent).value) / 100;
                    }
                    else { percent = (+document.getElementById(discountpercent).innerHTML) / 100; }
                    var roundupqty = (+document.getElementById(quantity).value);
                    document.getElementById(quantity).value = roundupqty;
                    var calculatedvalue = 0;

                    if ($("#" + unit).text() == "Dozens") {
                        calculatedvalue = ((+document.getElementById(quantity).value) * 12) * (+document.getElementById(rate).value);
                    }
                    else {
                        calculatedvalue = (+document.getElementById(quantity).value) * (+document.getElementById(rate).value);
                    }
                    if (percent != 0) {
                        var valueafterdiscount = calculatedvalue * percent;
                        calculatedvalue -= valueafterdiscount;

                    }
                    document.getElementById(amountvalue).value = calculatedvalue.toFixed(2);
                    document.getElementById(amount).innerHTML = addCommas(calculatedvalue.toFixed(2));
                }
            }

            var totalamount = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                var amountvalue = "amountvalue" + i;
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proportionateamount = "proportionatetaxamount" + i;
                if (document.getElementById(amount) != null) {
                    var propotaxpercent = (+removeCommas(document.getElementById(amount).innerHTML)) / (+document.getElementById("Total_Amount_Value").value);
                    document.getElementById(proportionate).innerHTML = (propotaxpercent * 100).toFixed(2);
                    document.getElementById(proportionatetaxvalue).value = (propotaxpercent * 100).toFixed(2);
                    var packandforwdpropoamount = propotaxpercent * packandforwd;
                    document.getElementById(proportionateamount).value = packandforwdpropoamount.toFixed(2);
                    if (document.getElementById(proportionate).innerHTML.toString() == "NaN") {
                        document.getElementById(proportionate).innerHTML = "0";
                    }
                    CalculateTaxSummary(i);
                }
            }
            CalculateTotalQuantityAndAmount();
            totalamount += packandforwd;
            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }
            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
        }
        else {
            var proportionatecount = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= proportionatecount; i++) {
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proporamount = "proportionatetaxamount" + i;
                if (document.getElementById(proportionate) != null) {
                    document.getElementById(proportionate).innerHTML = "0";
                    document.getElementById(proportionatetaxvalue).value = 0;
                    document.getElementById(proporamount).value = 0;
                }
            }
            var quantity = "receivedquantity" + count;
            var rate = "rate" + count;
            var amount = "amount" + count;
            var discountpercent = "discount" + count;
            var amountvalue = "amountvalue" + count;
            var unit = "unit" + count;
            var totalamount = 0;
            if (document.getElementById(quantity) != null) {
                var percent;
                if (document.getElementById(discountpercent).value != null) {
                    percent = (+document.getElementById(discountpercent).value) / 100;
                }
                else { percent = (+document.getElementById(discountpercent).innerHTML) / 100; }
                var roundupqty = (+document.getElementById(quantity).value);
                document.getElementById(quantity).value = roundupqty;
                var calculatedvalue = 0;

                if ($("#" + unit).text() == "Dozens") {
                    calculatedvalue = ((+document.getElementById(quantity).value) * 12) * (+document.getElementById(rate).value);
                }
                else {
                    calculatedvalue = (+document.getElementById(quantity).value) * (+document.getElementById(rate).value);
                }
                if (percent != 0) {
                    var valueafterdiscount = calculatedvalue * percent;
                    calculatedvalue -= valueafterdiscount;

                }
                document.getElementById(amountvalue).value = calculatedvalue.toFixed(2);
                document.getElementById(amount).innerHTML = addCommas(calculatedvalue.toFixed(2));
            }
            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            totalamount = Math.round(totalamount.toFixed(2));
            document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
            CalculateTaxSummary(rowid);
            CalculateTotalQuantityAndAmount();
            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }
            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
        }

        var rowid = document.getElementById("hdnRowCount").value;
        var previtemCode = "itemCode" + rowid;
        var prevquantity = "receivedquantity" + rowid;
        var prevfreeqty = "FreeQty" + rowid;
        var prevrate = "rate" + rowid;
        var prevdiscountpercent = "discount" + rowid;
        if (document.getElementById(previtemCode) != null) {
            document.getElementById(previtemCode).disabled = false;
            document.getElementById(prevquantity).disabled = false;
            document.getElementById(prevdiscountpercent).disabled = false;
            document.getElementById(prevfreeqty).disabled = false;
        }
    }

    function OpenPopUp() {
        window.open("/Inward/NewItem", "_target", "width=1200,height=600,top=20px,left=100px");
    }

    function addCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function removeCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, '');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }
</script>

<script type="text/javascript">
    function CalculatePackAndForwd() {
        var rowid = document.getElementById("hdnRowCount").value;
        var packandforwd = (+document.getElementById("InwardFromSupplierDetails_PackAndForwd").value);
        for (var i = 1; i <= rowid; i++) {
            CalculateItemWiseAmount(i);
        }
    }
</script>

<script>
    function CalculateBalance(count, msg, type) {
        var packandforwd = (+document.getElementById("InwardFromSupplierDetails_PackAndForwd").value);
        if (packandforwd != 0 && packandforwd != "" && packandforwd != null) {
            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var row = "row" + i;
                var orderedquantity = "orderedquantity" + i;
                var receivedquantity = "receivedquantity" + i;
                var receivedtill = "receivedtill" + i;
                var balanceqty = "balanceqty" + i;
                var balanceqtyvalue = "balanceqtyvalue" + i;
                var prevbal = "prevbal" + i;
                var extraqty = "ExtraQty" + i;
                if (document.getElementById(receivedquantity) != null) {

                    document.getElementById("Submit").disabled = false;
                    var calculatebalance = (+document.getElementById(receivedtill).innerHTML) - (+document.getElementById(receivedquantity).value) + (+document.getElementById(prevbal).innerHTML);
                    if (i == count) {
                        if (calculatebalance < 0) {
                            if (type == 'quantity') {
                                alertbox("Extra " + (0 - calculatebalance) + " Quantity Received");
                                document.getElementById(extraqty).value = 0 - calculatebalance;
                                document.getElementById(balanceqty).style.color = "gray";
                                document.getElementById(balanceqty).innerHTML = "0";
                                calculatebalance = 0;
                            }
                        }
                        else {
                            if (calculatebalance > 0) {
                                document.getElementById(balanceqty).style.color = "red";
                            }
                            else { document.getElementById(balanceqty).style.color = "gray"; }
                            document.getElementById(extraqty).value = "0";
                            document.getElementById(balanceqty).innerHTML = calculatebalance;
                            document.getElementById(balanceqtyvalue).value = calculatebalance;
                        }
                    }

                    /*calculate amount and remaining amount*/
                    var rate = "rate" + i;
                    var amount = "amount" + i;
                    var amountvalue = "amountvalue" + i;
                    var discount = "discount" + i;
                    var unit = "unit" + i;
                    var percent = (+document.getElementById(discount).innerHTML) / 100;
                    var calculateamount = 0;
                    if (calculatebalance < 0) {
                        calculateamount = (+document.getElementById(orderedquantity).innerHTML) * (+document.getElementById(rate).value);
                    }
                    else {
                        calculateamount = (+document.getElementById(receivedquantity).value) * (+document.getElementById(rate).value);
                    }
                    if ($("#" + unit).text() == "Dozens") {
                        calculateamount = calculateamount * 12;
                    }

                    if (percent != 0) {
                        var discountforamount = calculateamount * percent;
                        calculateamount -= discountforamount;

                    }
                    document.getElementById(amount).innerHTML = addCommas(calculateamount.toFixed(2));
                    document.getElementById(amountvalue).value = calculateamount.toFixed(2);
                }
            }
            var totalamount = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }

            document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);

            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                var amountvalue = "amountvalue" + i;
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proportionateamount = "proportionatetaxamount" + i;
                if (document.getElementById(amount) != null) {
                    var propotaxpercent = (+removeCommas(document.getElementById(amount).innerHTML)) / (+document.getElementById("Total_Amount_Value").value);
                    document.getElementById(proportionate).innerHTML = (propotaxpercent * 100).toFixed(2);
                    document.getElementById(proportionatetaxvalue).value = (propotaxpercent * 100).toFixed(2);
                    var packandforwdpropoamount = propotaxpercent * packandforwd;
                    document.getElementById(proportionateamount).value = packandforwdpropoamount.toFixed(2);
                    if (document.getElementById(proportionate).innerHTML.toString() == "NaN") {
                        document.getElementById(proportionate).innerHTML = "0";
                    }
                    CalculateTaxSummary(i);
                }
            }

            totalamount += packandforwd;
            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }
            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            CalculateTotalQuantityAndAmount();
        }
        else {
            var proportionatecount = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= proportionatecount; i++) {
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proporamount = "proportionatetaxamount" + i;
                if (document.getElementById(proportionate) != null) {
                    document.getElementById(proportionate).innerHTML = "0";
                    document.getElementById(proportionatetaxvalue).value = 0;
                    document.getElementById(proporamount).value = 0;
                }
            }

            var row = "row" + count;
            var orderedquantity = "orderedquantity" + count;
            var receivedquantity = "receivedquantity" + count;
            var receivedtill = "receivedtill" + count;
            var balanceqty = "balanceqty" + count;
            var balanceqtyvalue = "balanceqtyvalue" + count;
            var prevbal = "prevbal" + count;
            var extraqty = "ExtraQty" + count;

            document.getElementById("Submit").disabled = false;
            var calculatebalance = (+document.getElementById(receivedtill).innerHTML) - (+document.getElementById(receivedquantity).value) + (+document.getElementById(prevbal).innerHTML);
            if (calculatebalance < 0) {
                if (type == 'quantity') {
                    alertbox("Extra " + (0 - calculatebalance) + " Quantity Received");
                    document.getElementById(extraqty).value = 0 - calculatebalance;
                    document.getElementById(balanceqty).style.color = "gray";
                    document.getElementById(balanceqty).innerHTML = "0";
                    calculatebalance = 0;
                }
            }
            else {
                if (calculatebalance > 0) {
                    document.getElementById(balanceqty).style.color = "red";
                }
                else { document.getElementById(balanceqty).style.color = "gray"; }
                document.getElementById(extraqty).value = "0";
                document.getElementById(balanceqty).innerHTML = calculatebalance;
                document.getElementById(balanceqtyvalue).value = calculatebalance;
            }

            /*calculate amount and remaining amount*/
            var rate = "rate" + count;
            var amount = "amount" + count;
            var amountvalue = "amountvalue" + count;
            var discount = "discount" + count;
            var unit = "unit" + count;
            var percent = (+document.getElementById(discount).innerHTML) / 100;
            var calculateamount = 0;
            if (calculatebalance < 0) {
                calculateamount = (+document.getElementById(orderedquantity).innerHTML) * (+document.getElementById(rate).value);
            }
            else {
                calculateamount = (+document.getElementById(receivedquantity).value) * (+document.getElementById(rate).value);
            }
            if ($("#" + unit).text() == "Dozens") {
                calculateamount = calculateamount * 12;
            }

            if (percent != 0) {
                var discountforamount = calculateamount * percent;
                calculateamount -= discountforamount;
            }
            document.getElementById(amount).innerHTML = addCommas(calculateamount.toFixed(2));
            document.getElementById(amountvalue).value = calculateamount.toFixed(2);
            CalculateTotalQuantityAndAmount();

            var rowid = document.getElementById("hdnRowCount").value;
            var totalamount = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
            CalculateTaxSummary(rowid);

            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }

            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
                //document.getElementById("In_Words").innerHTML = NumberToWords();
            }
        }
    }

    function CalculateTotalQuantityAndAmount() {
        var rowid = document.getElementById("hdnRowCount").value;
        var totalreceivedquantity = 0;
        var totalamount = 0;
        var totalremainingqty = 0;
        var extratotalquantity = 0;
        var extraltotalamount = 0;
        var rate = 0;
        for (var i = 1; i <= rowid; i++) {
            var row = "row" + i;
            var orderedquantity = "orderedquantity" + i;
            var receivedquantity = "receivedquantity" + i;
            var amount = "amount" + i;
            var balanceqty = "balanceqty" + i;
            var extraquantity = "ExtraQty" + i;
            var rate = "rate" + i;
            if (document.getElementById(row) != null) {
                totalreceivedquantity = (+totalreceivedquantity) + (+document.getElementById(receivedquantity).value);
                totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                totalremainingqty = totalremainingqty + (+document.getElementById(balanceqty).innerHTML);
                extratotalquantity = extratotalquantity + (+document.getElementById(extraquantity).value);
            }
        }
        totalamount = Math.round(totalamount.toFixed(2));
        document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
        document.getElementById("Total_Extra_Quantity").innerHTML = extratotalquantity;
        document.getElementById("Total_Extra_Quantity_Value").value = extratotalquantity;

        if (totalremainingqty < 0) {
            document.getElementById("Total_Remaining_Quantity").innerHTML = (0 - totalremainingqty);
            document.getElementById("Total_Remaining_Quantity_Value").value = (0 - totalremainingqty);
        }
        else {
            document.getElementById("Total_Remaining_Quantity").innerHTML = totalremainingqty;
            document.getElementById("Total_Remaining_Quantity_Value").value = totalremainingqty;
        }

        if (totalreceivedquantity != 0) {
            document.getElementById("TotalQuantityDetails").style.display = "inline";
            document.getElementById("Total_Quantity").innerHTML = totalreceivedquantity;
            document.getElementById("Total_Quantity_Value").value = totalreceivedquantity;
            document.getElementById("Submit").disabled = false;
        }
        else {
            document.getElementById("Total_Quantity").innerHTML = totalreceivedquantity;
            document.getElementById("Total_Quantity_Value").value = totalreceivedquantity;
            document.getElementById("Submit").disabled = true;
        }
    };

    function CalculateTaxSummary(rowid) {
        var TaxCount = document.getElementById("ItemTaxCount").value;
        for (var i = 1; i <= TaxCount; i++) {
            var TotalTaxAmount = 0;
            var itemtaxno = "ItemTaxNumber" + i;
            var addedtaxamount = "AddedTaxAmount" + i;
            var addedtaxamounthdn = "AddedTaxAmounthdn" + i;
            var addedamount = "AddedAmount" + i;
            var addedamounthdn = "AddedAmounthdn" + i;
            for (var j = 1; j <= rowid; j++) {
                var itemtaxvalue = "ItemTaxValue" + j;
                var amount = "amount" + j;
                var proporamount = "proportionatetaxamount" + j;
                if (document.getElementById(amount) != null) {
                    if ($("#" + itemtaxno).val() == $("#" + itemtaxvalue).val()) {
                        TotalTaxAmount = (+TotalTaxAmount) + (+removeCommas(document.getElementById(amount).innerHTML)) + (+document.getElementById(proporamount).value);
                    }
                }
            }
            document.getElementById(addedamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedamounthdn).value = TotalTaxAmount.toFixed(2);
            TotalTaxAmount = TotalTaxAmount * (+document.getElementById(itemtaxno).value / 100);
            document.getElementById(addedtaxamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedtaxamounthdn).value = TotalTaxAmount.toFixed(2);
        }
    }

    function AllowNumbers(key) {
        var keycode = (key.which) ? key.which : key.keyCode;
        //comparing pressed keycodes
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
    }

    function AllowDecimal(key, rowid) {
        var numbertype = $("#numberType" + rowid).val();
        var quantity = $("#receivedquantity" + rowid).val();
        var pointFoundCount = 0;
        for (var i = 0; i <= quantity.length; i++) {
            if (quantity[i] == '.') {
                pointFoundCount++;
            }
        }

        var pointposition = quantity.indexOf(".");
        var digitupto = 0;
        if (pointposition != -1) {
            digitupto = quantity.substr(pointposition, quantity.length).length;
        }

        var keycode = (key.which) ? key.which : key.keyCode;
        //comparing pressed keycodes
        if (numbertype == 'Whole') { //if unit type is whole number then don't allow point
            if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                return false;
            }
        }
        else if (quantity.length == 0) {
            if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                return false;
            }
        }
        else if (keycode == 46) { //if decimal point is inserted
            if (pointFoundCount > 0 && pointFoundCount < 2) { // more than one decimal point is inserted then don't allow to insert it
                return false;
            }
        }
        else if (digitupto != 0) { // if unit type is decimal then wait for decimal point to be insert then execute this condition 
            if (numbertype == '2Digit') { // if unit type is 2 digit the then allow 2 digits after decimal not the characters in between
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 3) {
                    return false;
                }
            }
            else { // if unit type is 2 digit the then allow 3 digits after decimal not the characters in between
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 4) {
                    return false;
                }
            }
        }
        else { //don't allow any decimal point or character until first digit occurs
            if (quantity.length == 0) // if first digit is point in quantity field then don't allow it and characters too
            {
                if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
            else { //don't allow any character until the above else if condition meets
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
        }
    }

    $(function () {
        $("#NonInvButton").click(function () {
            var noninvrowid = document.getElementById("hdnRowCount").value;
            //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
            var validationcounter = 0;
            for (var i = 1; i <= noninvrowid; i++) {
                var previtemCode = "itemCode" + i;
                var prevfreeqty = "FreeQty" + i;
                var prevquantity = "receivedquantity" + i;
                var prevdiscount = "discount" + i;
                var prevrate = "rate" + i;
                //If Row was Not DELETED
                if (document.getElementById(previtemCode) != null) {
                    //If Required Fields are Empty of Previous Row
                    if ($("#" + previtemCode).val() == "") {
                        alertbox("Please Select The Item");
                        validationcounter++;
                        break;
                    }
                    else if ($("#" + prevquantity).val() == "") {
                        alertbox("Please Fill The Quantity");
                        validationcounter++;
                        break;
                    }
                    else if ((+$("#" + prevrate).val()) == 0 || $("#" + prevrate).val() == "") {
                        alertbox("Please Fill The Rate");
                        validationcounter++;
                        break;
                    }
                    else {
                        if (document.getElementById(previtemCode).disabled != true) {
                            document.getElementById(prevfreeqty).disabled = true;
                            document.getElementById(previtemCode).disabled = true;
                            document.getElementById(prevrate).disabled = true;
                            document.getElementById(prevquantity).disabled = true;
                            document.getElementById(prevdiscount).disabled = true;
                        }
                    }
                }
            }

            if (validationcounter == 0) {
                noninvrowid = +noninvrowid + 1;
                var row = "row" + noninvrowid;
                var subcat = "SubCat" + noninvrowid;
                var noninvItemType = "ItemType" + noninvrowid;
                var noninvitem = "itemCode" + noninvrowid;
                var noninvdescription = "description" + noninvrowid;
                var noninvdescriptionvalue = "descriptionvalue" + noninvrowid;
                var noninvrate = "rate" + noninvrowid;
                var noninvmrp = "MRP" + noninvrowid;
                var noninvsellingprice = "sellingprice" + noninvrowid;
                var noninvquantity = "receivedquantity" + noninvrowid;
                var noninvfreeqty = "FreeQty" + noninvrowid;
                var noninvextraqty = "ExtraQty" + noninvrowid;
                var nonprevbal = "prevbal" + noninvrowid;
                var noninvbalanceqty = "balanceqty" + noninvrowid;
                var noninvdis = "discount" + noninvrowid;
                var noninvunit = "unit" + noninvrowid;
                var noninvamount = "amount" + noninvrowid;
                var noninvitemtax = "ItemTax" + noninvrowid;
                var noninvproportionatetax = "proportionatetax" + noninvrowid;

                var noninvitemname = "itemName" + noninvrowid;
                var noninvdesigncode = "design" + noninvrowid;
                var noninvdesignname = "designName" + noninvrowid;
                var noninvdesignnamevalue = "designNameValue" + noninvrowid;
                var noninvcolorvalue = "colorvalue" + noninvrowid;
                var noninvmaterialvalue = "materialvalue" + noninvrowid;
                var noninvbrandvalue = "brandvalue" + noninvrowid;
                var noninvsizevalue = "sizevalue" + noninvrowid;
                var noninvunitvalue = "unitvalue" + noninvrowid;
                var noninvnumbertype = "numberType" + noninvrowid;
                var noninvamountvalue = "amountvalue" + noninvrowid;
                var noninvitemtaxvalue = "ItemTaxValue" + noninvrowid;
                var noninvproptaxvalue = "proportionatetaxvalue" + noninvrowid;
                var noninvproptaxamount = "proportionatetaxamount" + noninvrowid;
                var noninvnewlyadded = "NewAdded" + noninvrowid;

                var ItemListFrom = document.getElementById("GetItemListFrom").value;
                var unorderedList;
                if (ItemListFrom == "From PO")
                { unorderedList = $("#ItemsFromPO"); }
                else
                { unorderedList = $("#ItemsFromPerforma"); }

                var data = "<tr id='" + row + "'><input type='hidden' id='" + subcat + "' name='" + subcat + "' />";
                data += "<td><select id='" + noninvitem + "' name='" + noninvitem + "' class='form-control col-md-2 col-lg-2'><option value=''>Select</option></select><input type='hidden' id='" + noninvitemname + "' name='" + noninvitemname + "' /></td>";
                data += "<td><label id='" + noninvdescription + "' style='text-align:left;width:100%;font-weight:normal'>---</label><input type='hidden' name='" + noninvdescriptionvalue + "' id='" + noninvdescriptionvalue + "'><input type='hidden' id='" + noninvcolorvalue + "' name='" + noninvcolorvalue + "'/><input type='hidden' id='" + noninvmaterialvalue + "' name='" + noninvmaterialvalue + "' /></td>";
                data += "<td style='text-align:left'><label id='" + noninvdesignname + "' style='width:100%;font-weight:normal'>---</label><input type='hidden' id='" + noninvdesigncode + "' name='" + noninvdesigncode + "'/><input type='hidden' id='" + noninvdesignnamevalue + "' name='" + noninvdesignnamevalue + "'/><input type='hidden' name='" + noninvsizevalue + "' id='" + noninvsizevalue + "'><input type='hidden' name='" + noninvbrandvalue + "' id='" + noninvbrandvalue + "'></td>";
                data += "<td style='text-align:center'><label style='text-align:right;width:100%;font-weight:normal'>0</label></td>";
                data += "<td style='text-align:center'><label id='" + nonprevbal + "' style='text-align:right;width:100%;font-weight:normal'>0</label></td>";
                data += "<td style='text-align:center'><label style='text-align:right;width:100%;font-weight:normal'>0</label></td>";
                data += "<td><input type='text' id='" + noninvquantity + "' name='" + noninvquantity + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='Qty' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + noninvrowid + ")' onkeypress='return AllowDecimal(event," + noninvrowid + ")' /><input type='hidden' name='" + noninvextraqty + "' id='" + noninvextraqty + "' value='0' /></td>";
                data += "<td><input type='text' id='" + noninvfreeqty + "' name='" + noninvfreeqty + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='Qty' style='text-align:center;width:100%' value='0' onkeypress='return AllowDecimal(event," + noninvrowid + ")' /></td>";
                data += "<td style='text-align:center'><label style='text-align:right;width:100%;font-weight:normal' id='" + noninvbalanceqty + "'>0</label></td>";
                data += "<td style='text-align:center'><label id='" + noninvunit + "' style='font-weight:normal'>---</label><input type='hidden' name='" + noninvunitvalue + "' id='" + noninvunitvalue + "'><input type='hidden' name='" + noninvnumbertype + "' id='" + noninvnumbertype + "'></td>";
                data += "<td><input type='text' id='" + noninvrate + "' name='" + noninvrate + "' autocomplete='off' disabled='disabled' class='form-control col-md-1 col-lg-1' placeholder='Qty' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + noninvrowid + ")' onkeypress='return AllowNumbers(event," + noninvrowid + ")' /><input type='hidden' id='" + noninvsellingprice + "' name='" + noninvsellingprice + "'/></td>";
                data += "<td><input type='text' id='" + noninvdis + "' name='" + noninvdis + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='0' value='0' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + noninvrowid + ")' onkeypress='return AllowNumbers(event," + noninvrowid + ")' /></td>";
                data += "<td style='text-align:right'><label id='" + noninvitemtax + "'>0</label><input type='hidden' id='" + noninvitemtaxvalue + "' name='" + noninvitemtaxvalue + "' value='0'/></td>";
                data += "<td style='text-align:right'><label id='" + noninvamount + "'></label><input type='hidden' id='" + noninvamountvalue + "' name='" + noninvamountvalue + "'/></td>";
                data += "<td style='text-align:right'><label id='" + noninvproportionatetax + "'>0</label><input type='hidden' id='" + noninvproptaxvalue + "' name='" + noninvproptaxvalue + "' value='0' /><input type='hidden' id='" + noninvproptaxamount + "' name='" + noninvproptaxamount + "' value='0' /></td>";
                data += "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + noninvrowid + ")' class='fa fa-trash fa-lg' style='color:red;' /><input type='hidden' id='" + noninvItemType + "' name='" + noninvItemType + "' value='Non-Inventory'/><input type='hidden' id='" + noninvnewlyadded + "' name='" + noninvnewlyadded + "' value='Newadded'/></td></tr>";
                unorderedList.append(data);

                $.getJSON("/Inward/GetNonInventoryItems",
                function (data) {
                    var select = $("#" + noninvitem);
                    select.empty();
                    select.append($('<option>', {
                        text: "Select Item",
                        value: "",
                    }));
                    $.each(data, function (index, itemdata) {
                        select.append($('<option>', {
                            text: itemdata.Text + " " + itemdata.Value,
                            value: itemdata.Value,
                        }));
                    });
                });

                //GET ITEM DETAILS FROM ITEMNAME
                $("#" + noninvitem).change(function () {
                    var noninvitemcode = document.getElementById(noninvitem).value;
                    if (noninvitemcode != "") {
                        // EMPTY STOCK QUANTITY AND QUANTITY BECOZ IF WE CHANGE ITEM PREVIOUS ROWS STOCK QUANTITY AND QUANTITY IS EMPTY
                        var qty = "receivedquantity" + noninvrowid;
                        var freeqty = "FreeQty" + noninvrowid;
                        var amt = "amount" + noninvrowid;
                        var rate = "rate" + noninvrowid;
                        var description = "description" + noninvrowid;
                        var designname = "designName" + noninvrowid;
                        var discount = "discount" + noninvrowid;
                        var itemtax = "ItemTax" + noninvrowid;
                        //IF ROW IS DELETED THEN QUANTITY WON'T GET ENABLED
                        if (document.getElementById(qty) != null) {
                            document.getElementById(qty).value = "";
                            document.getElementById(amt).innerHTML = "";
                            document.getElementById(freeqty).value = "0";
                            document.getElementById(rate).value = "";
                            document.getElementById(description).innerHTML = "---";
                            document.getElementById(designname).innerHTML = "---";
                            document.getElementById(itemtax).innerHTML = "";
                            document.getElementById(discount).value = "0";
                        }

                        //IF PREVIOUS ROW IS ENABLED FOR CHANGE THE QUANTITY BUT WE SELECT AGAIN DDL THEN DISABLED THIS ENABLES QUANTITY
                        var validationcount = 0;
                        for (var i = 1; i < noninvrowid; i++) {
                            var prevquantity = "receivedquantity" + i;
                            var prevfreeqty = "FreeQty" + i;
                            var prevrate = "rate" + i;
                            var prevdiscount = "discount" + i;
                            if (document.getElementById(prevquantity) != null) {
                                if ($("#" + prevquantity).val() == "") {
                                    alertbox("Please Fill The Quantity");
                                    validationcount++;
                                }
                                else if ((+$("#" + prevrate).val()) == 0 || $("#" + prevrate).val() == "") {
                                    alertbox("Please Fill The Rate");
                                    validationcount++;
                                }
                                else {
                                    if (document.getElementById(prevquantity) != null) {
                                        if (document.getElementById(prevquantity).disabled == false) {
                                            document.getElementById(prevquantity).disabled = true;
                                            document.getElementById(prevfreeqty).disabled = true;
                                            document.getElementById(prevrate).disabled = true;
                                            document.getElementById(prevdiscount).disabled = true;
                                        }
                                    }
                                }
                            }
                        }
                        if (validationcount == 0) {
                            var Formtype = "";
                            if (document.getElementById("formtypeid").style.display == "inline") {
                                Formtype = $("#InwardFromSupplierDetails_FormType").val();
                            }
                            $.getJSON("/Inward/GetInventoryAndNonInvItemDetailsFromItems",
                                {
                                    itemname: noninvitemcode,
                                    State: $("#InwardFromSupplierDetails_SupplierState").val(),
                                    Formtype: Formtype,
                                    ItemType: $("#" + noninvItemType).val(),
                                },
                         function (data) {
                             document.getElementById("receivedquantity" + noninvrowid).value = "";
                             document.getElementById("amount" + noninvrowid).innerHTML = 0.00;
                             document.getElementById("amountvalue" + noninvrowid).innerHTML = 0.00;
                             $("#" + subcat).val(data.subcat);
                             $("#" + noninvitemname).val(data.itemName);
                             $("#" + noninvdescription).text(data.description);
                             $("#" + noninvdescriptionvalue).val(data.description);
                             $("#" + noninvsellingprice).val(data.sellingprice);
                             $("#" + noninvmrp).val(data.mrp);
                             $("#" + noninvrate).val(data.costprice);
                             $("#" + noninvcolorvalue).val(data.colorCode);
                             $("#" + noninvdesigncode).val(data.designCode);
                             $("#" + noninvdesignname).text(data.designName);
                             $("#" + noninvdesignnamevalue).val(data.designName);
                             $("#" + noninvmaterialvalue).val(data.typeOfMaterial);
                             $("#" + noninvunit).text(data.unit);
                             $("#" + noninvunitvalue).val(data.unit);
                             $("#" + noninvnumbertype).val(data.NumberType);
                             $("#" + noninvitemtax).text(data.taxPercent);
                             $("#" + noninvitemtaxvalue).val(data.taxPercent);

                             //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                             //on each item which is applied
                             var tax = data.taxPercent;
                             if (tax != '0') {//if tax is '0' no need to add new taxnumber
                                 var taxcount = document.getElementById("ItemTaxCount").value;
                                 if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                     $("#ItemTaxNumber" + taxcount).val(tax);
                                     document.getElementById("AddTaxes").style.display = "inline";
                                     $("#AddedTax1").text(tax + "%");
                                 }
                                 else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                     var taxpresent = 0;
                                     for (var i = 1; i <= taxcount; i++) {
                                         var taxno = "ItemTaxNumber" + i;
                                         //if tax is already present then no need to make other taxnumbers
                                         if (tax == $("#" + taxno).val()) {
                                             taxpresent++;
                                         }
                                     }
                                     if (taxpresent == 0) {
                                         taxcount++;
                                         var taxno = "ItemTaxNumber" + taxcount;
                                         var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                         $("#AllTaxesNumbersValue").append(data);
                                         var addedtaxno = "AddedTax" + taxcount;
                                         var addedtaxamount = "AddedTaxAmount" + taxcount;
                                         var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                         var addedamount = "AddedAmount" + taxcount;
                                         var addedamounthdn = "AddedAmounthdn" + taxcount;
                                         var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                         newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                         newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                         $("#AddTaxes").append(newlabel);
                                         $("#ItemTaxCount").val(taxcount);
                                     }
                                 }
                             }
                         });
                        }
                        else {
                            $("#itemCode" + noninvrowid).val("").attr("selected", true);
                        }
                    }
                    else {
                        alertbox("Please Select Item First");
                        document.getElementById("receivedquantity" + noninvrowid).value = 0;
                        document.getElementById("FreeQty" + noninvrowid).value = 0;
                        document.getElementById("amount" + noninvrowid).innerHTML = 0.00;
                        document.getElementById("proportionatetax" + noninvrowid).innerHTML = 0;
                        $("#description" + noninvrowid).text("---");
                        $("#designName" + noninvrowid).text("---");
                        $("#discount" + noninvrowid).val("0");
                        $("#rate" + noninvrowid).val(0.00);
                        $("#unit" + noninvrowid).text("---");
                        $("#ItemTax" + noninvrowid).text("0");
                        CalculateItemWiseAmount(noninvrowid);
                        CalculateTaxSummary(noninvrowid);
                        CalculateTotalQuantityAndAmount();
                    }
                });
                $("#hdnRowCount").val(noninvrowid);
            }
        });

        $("#Submit").click(function () {
            if ($("#InwardFromSupplierDetails_ChallanNo").val() == "" && $("#InwardFromSupplierDetails_BillNo").val() == "") {
                alertbox("Please Fill The Bill No Or Challan No");
                validationcounter++;
                return false;
            }

            if ($("#InwardFromSupplierDetails_SupplierName").val() == "" || $("#ddlponos").val() == "") {
                validationcounter++;
            }

            if ($("#InwardFromSupplierDetails_ChallanNo").val() != "") { //if challan no field is not empty then call alert
                if ($("#InwardFromSupplierDetails_ChallanDate").val() == "") {
                    alertbox("Please Fill The Challan Date");
                    return false;
                }
            }

            if ($("#InwardFromSupplierDetails_BillNo").val() != "") { //if bill no field is not empty then call alert
                if ($("#InwardFromSupplierDetails_BillDate").val() == "") {
                    alertbox("Please Fill The Bill Date");
                    return false;
                }
            }

            var rowid = document.getElementById("hdnRowCount").value;
            var validationcounter = 0;
            for (var i = 1; i <= rowid; i++) {
                var previtemCode = "itemCode" + i;
                var prevquantity = "receivedquantity" + i;
                var prevfreeqty = "FreeQty" + i;
                var prevrate = "rate" + i;
                var prevdiscount = "discount" + i;
                if (document.getElementById(prevquantity) != null) {
                    if ($("#" + previtemCode).val() == "") {
                        alertbox("Please Select The Item ");
                        validationcounter = i;
                        return false;
                        break;
                    }
                    else if ((+$("#" + prevrate).val()) == 0 || $("#" + prevrate).val() == "") {
                        alertbox("Please Fill The Rate");
                        validationcounter = i;
                        return false;
                        break;
                    }
                    else if ($("#" + prevquantity).val() == "") {
                        alertbox("Please Fill The Quantity");
                        validationcounter = i;
                        return false;
                        break;
                    }
                }

                if (validationcounter == 0) {
                    for (var i = 1; i <= rowid; i++) {
                        var previtemCode = "itemCode" + i;
                        var prevquantity = "receivedquantity" + i;
                        var prevfreeqty = "FreeQty" + i;
                        var prevrate = "rate" + i;
                        var prevdiscount = "discount" + i;
                        if (document.getElementById(prevquantity) != null) {
                            document.getElementById(previtemCode).disabled = false;
                            document.getElementById(prevquantity).disabled = false;
                            document.getElementById(prevfreeqty).disabled = false;
                            document.getElementById(prevrate).disabled = false;
                            document.getElementById(prevdiscount).disabled = false;
                        }
                    }
                }
            }
            if (validationcounter == 0) {
                setTimeout(function () {
                    document.getElementById("Submit").disabled = true;
                }, 100);
            }
        });
    });

    function DeleteRow(id) {
        var row = "row" + id;
        confirmbox("Are you sure you wish to delete this row?", row);
    }

</script>

@using (Html.BeginForm("InwardFromSupplierEditDetails", "Inward", FormMethod.Post))
{
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierAddress)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierEmail)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierState)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.Registered)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.FormType)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.DelDate)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PoDate)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.InwardNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ReceivingDate)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.Editable)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ModeOfTransport)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.TransportName)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.TransportContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownCode)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownName)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownArea)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownContactPerson)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownEmail)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopCode)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopName)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopEmail)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopContactPerson)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PaymentStatus)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PaymentAmount)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PaymentBalance)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.DebitNotesAmount)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PurchaseReturn)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PurchaseReturnNo)
    <input type="hidden" id="GetItemListFrom" name="GetItemListFrom" />
    <input type="hidden" id="AlreadyPresentItems" name="AlreadyPresentItems" />
    <div id="AllTaxesNumbersValue">
        @if (Model.PurchaseInventoryTaxList.Count() == 0)
        {
            <input type="hidden" id="ItemTaxCount" name="ItemTaxCount" value="1" />
            <input type="hidden" id="ItemTaxNumber1" name="ItemTaxNumber1" value="0" />
        }
        else
        {
            <input type="hidden" id="ItemTaxCount" name="ItemTaxCount" value="@Model.PurchaseInventoryTaxList.Count()" />
        }
    </div>
    <audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
        <source src="" type="audio/ogg" />
    </audio>
    <table style="border: 1px double; width: 100%">
        <tr>
            <td>
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="row">
                            <div style="height: 5px"></div>
                            <div class="col-md-4 col-lg-4">
                                <div class="col-md-12 col-lg-12">
                                    <label style="font-size: medium">Supplier Details:</label>
                                    <div style="height: 1px"></div>
                                    <div class="col-md-12 col-lg-12">
                                        <div id="SupplierDetails">
                                            <label>Name: &nbsp</label><label style="font-weight: normal">@Html.DisplayFor(model => model.InwardFromSupplierDetails.SupplierName)</label><br />
                                            <label>State: &nbsp</label><label style="font-weight: normal">@Html.DisplayFor(model => model.InwardFromSupplierDetails.SupplierState)</label><br />
                                            <label>Contact Number: &nbsp</label><label style="font-weight: normal">@Html.DisplayFor(model => model.InwardFromSupplierDetails.SupplierContactNo)</label><br />
                                            <label>Registered: &nbsp</label><label style="font-weight: normal">@Html.DisplayFor(model => model.InwardFromSupplierDetails.Registered)</label>
                                            <br />
                                            <div id="formtypeid">
                                                @{
        if (Model.InwardFromSupplierDetails.FormType != null)
        {
                                                    <label for="exampleInputSalesTax">Form Type :</label>
                                                    <label style="font-weight: normal">@Html.DisplayFor(model => model.InwardFromSupplierDetails.FormType)</label>
        }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-lg-4" style="border-left: 1px solid #999; height: 220px;">
                                <div class="col-md-12 col-lg-12">
                                    <div class="row">
                                        <label style="font-size: medium">P.O. Details</label><br />
                                    </div>
                                    <div class="row">
                                    </div>
                                    <div class="row" id="Delivery_Details">
                                        <div class="col-md-12 col-lg-12">
                                            @{
        var deldate = Convert.ToDateTime(Model.InwardFromSupplierDetails.DelDate).ToShortDateString();
        var podate = Convert.ToDateTime(Model.InwardFromSupplierDetails.PoDate).ToShortDateString();
        var receivedate = Convert.ToDateTime(Model.InwardFromSupplierDetails.ReceivingDate).ToShortDateString();
                                            }
                                            <label>PO No: &nbsp</label><label style="font-weight: normal">@Html.DisplayFor(model => model.InwardFromSupplierDetails.PoNo)</label><br />
                                            <label>Delivery Date: &nbsp</label><label id="deldate" style="font-weight: normal">@deldate</label><br />
                                            <label>PO Date: &nbsp</label><label id="podate" style="font-weight: normal">@podate</label><br />
                                            <label>Receiving Date: &nbsp</label><label id="receivedate" style="font-weight: normal">@receivedate</label><br />
                                        </div>
                                    </div>
                                    <div style="height: 10px"></div>
                                    <div class="row" id="Transport_Details">
                                        <div style="width: 100%; height: 1px; background-color: lightgrey;"></div>

                                        <div style="height: 10px"></div>
                                        <label style="font-size: medium">Transport Details:</label>
                                        <div class="col-md-12 col-lg-12">
                                            <label>Transport Mode: &nbsp</label><label style="font-weight: normal">@Html.DisplayFor(model => model.InwardFromSupplierDetails.ModeOfTransport)</label><br />
                                            <label>Transport Name: &nbsp</label><label style="font-weight: normal">@Html.DisplayFor(model => model.InwardFromSupplierDetails.TransportName)</label><br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-lg-4">
                                <div style="float: left; min-height: 220px; width: 1px; background-color: GrayText;"></div>
                                <div class="row">
                                    <div class="col-md-11 col-lg-11">
                                        <table>
                                            <tr>
                                                <td style="width: 35%">
                                                    <div style="height: 2px"></div>
                                                    <label>Date</label>
                                                </td>
                                                @{
        var date = Convert.ToDateTime(Model.InwardFromSupplierDetails.InwardDate).ToShortDateString();
                                                }
                                                <td>
                                                    <label id="date" style="font-weight: normal">&nbsp @date</label>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div style="height: 2px"></div>
                                                    <label>Inward No.</label>
                                                </td>
                                                <td>
                                                    <label id="InwardNo" style="font-weight: normal">@Html.DisplayFor(model => model.InwardFromSupplierDetails.InwardNo)</label>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div style="height: 8px"></div>
                                                    <label>Challan No.</label>
                                                </td>
                                                <td>
                                                    <input type="text" style="text-align:center" name="InwardFromSupplierDetails.ChallanNo" id="InwardFromSupplierDetails_ChallanNo" placeholder="Challan No" value="@Model.InwardFromSupplierDetails.ChallanNo" class="form-control" />
                                                </td>
                                            </tr>
                                            <tr style="height: 11px"></tr>
                                            <tr>
                                                <td style="border-spacing: 0px; padding: 0px;">
                                                    <div style="height: 8px"></div>
                                                    <label>Challan Date</label>
                                                </td>
                                                <td>
                                                    @{
        var challandate = string.Empty;
        if (Model.InwardFromSupplierDetails.ChallanDate != null)
        {
            challandate = Convert.ToDateTime(Model.InwardFromSupplierDetails.ChallanDate).ToShortDateString();
        }
                                                        <input type="text" id="InwardFromSupplierDetails_ChallanDate" name="InwardFromSupplierDetails.ChallanDate" class="form-control" value="@challandate" style="text-align:center" onkeypress="return false" />
                                                    }
                                                </td>
                                            </tr>
                                            <tr style="height: 11px"></tr>
                                            <tr>
                                                <td style="border-spacing: 0px; padding: 0px;">
                                                    <div style="height: 8px"></div>
                                                    <label for="exampleInputname">Bill No. </label>
                                                </td>
                                                <td>
                                                    <input type="text" style="text-align:center" name="InwardFromSupplierDetails.BillNo" id="InwardFromSupplierDetails_BillNo" placeholder="Bill No" value="@Model.InwardFromSupplierDetails.BillNo" class="form-control" />
                                                </td>
                                            </tr>
                                            <tr style="height: 11px"></tr>
                                            <tr>
                                                <td style="border-spacing: 0px; padding: 0px;">
                                                    <div style="height: 8px"></div>
                                                    <label for="exampleInputname">Bill Date </label>
                                                </td>
                                                <td>
                                                    @{
        var billdate = string.Empty;
        if (Model.InwardFromSupplierDetails.BillDate != null)
        {
            billdate = Convert.ToDateTime(Model.InwardFromSupplierDetails.BillDate).ToShortDateString();
        }
                                                        <input type="text" id="InwardFromSupplierDetails_BillDate" name="InwardFromSupplierDetails.BillDate" class="form-control" value="@billdate" style="text-align:center" onkeypress="return false" />
                                                    }
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="col-md-12 col-lg-12">
                            <div class="row">
                                @if (Model.InwardItemsFromSupplierList != null && Model.InwardItemsFromSupplierList.Any())
                                {
                                    <table class="table" id="ItemsFromPerforma" style="border-color: #d2d2d2; border: outset; width: 100%">
                                        <thead>
                                            <tr>
                                                <th style="text-align: center">
                                                    <label>Item</label></th>
                                                <th style="text-align: center">
                                                    <label>Description</label></th>
                                                <th style="text-align: center">
                                                    <label>Design</label></th>
                                                <th style="text-align: center">
                                                    <label>Ord Qty</label></th>
                                                <th style="text-align: center">
                                                    <label>Pre. Bal.</label></th>
                                                <th style="text-align: center">
                                                    <label>Rcd. Till</label></th>
                                                <th style="text-align: center">
                                                    <label>Rcd Qty<i style="color: red">*</i></label></th>
                                                <th style="text-align: center" style="text-align: center">
                                                    <label>Free Qty</label></th>
                                                <th style="text-align: center">
                                                    <label>Bal.</label></th>
                                                <th style="text-align: center">
                                                    <label>Unit</label></th>
                                                <th style="text-align: center">
                                                    <label>Rate</label></th>
                                                <th style="text-align: center">
                                                    <label>
                                                        Disc<br />
                                                        (%)</label></th>
                                                <th style="text-align: center">
                                                    <label>
                                                        Tax<br />
                                                        (%)</label></th>
                                                <th style="text-align: center">
                                                    <label>Amt</label></th>
                                                <th style="text-align: center">
                                                    <label>PropTax(%)</label></th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                    string row = string.Empty;
                                    string itemcode = string.Empty;
                                    string itemtype = string.Empty;
                                    string orderedquantity = string.Empty;
                                    string receivedtill = string.Empty;
                                    string receivedquantity = string.Empty;
                                    string rate = string.Empty;
                                    string mrp = string.Empty;
                                    string sellingprice = string.Empty;
                                    string unit = string.Empty;
                                    string balanceqtyvalue = string.Empty;
                                    string balanceqty = string.Empty;
                                    string amount = string.Empty;
                                    string discount = string.Empty;
                                    string itemtax = string.Empty;
                                    string itemtaxvalue = string.Empty;
                                    string amountvalue = string.Empty;
                                    string prevbal = string.Empty;
                                    string freeqty = string.Empty;
                                    string extraqty = string.Empty;
                                    string barcode = string.Empty;
                                    string numbertype = string.Empty;
                                    string proportionatetax = string.Empty;
                                    string proportionateamount = string.Empty;
                                    string proportionatetaxvalue = string.Empty;

                                    int rowid = 1;
                                    int rowcount = Model.InwardItemsFromSupplierList.Count();
                                    foreach (var item in Model.InwardItemsFromSupplierList)
                                    {
                                        row = "row" + rowid;
                                        itemcode = "itemCode" + rowid;
                                        itemtype = "ItemType" + rowid;
                                        orderedquantity = "orderedquantity" + rowid;
                                        receivedquantity = "receivedquantity" + rowid;
                                        receivedtill = "receivedtill" + rowid;
                                        rate = "rate" + rowid;
                                        mrp = "MRP" + rowid;
                                        sellingprice = "sellingprice" + rowid;
                                        amount = "amount" + rowid;
                                        amountvalue = "amountvalue" + rowid;
                                        discount = "discount" + rowid;
                                        balanceqty = "balanceqty" + rowid;
                                        balanceqtyvalue = "balanceqtyvalue" + rowid;
                                        numbertype = "numberType" + rowid;
                                        prevbal = "prevbal" + rowid;
                                        freeqty = "FreeQty" + rowid;
                                        extraqty = "ExtraQty" + rowid;
                                        itemtaxvalue = "ItemTaxValue" + rowid;
                                        proportionatetax = "proportionatetax" + rowid;
                                        proportionatetaxvalue = "proportionatetaxvalue" + rowid;
                                        proportionateamount = "proportionatetaxamount" + rowid;
                                        barcode = "barcode" + rowid;
                                                <tr id="@row">
                                                    <td class="col-lg-2 col-md-2">
                                                        <label class="CenterText" style="font-weight: normal">@item.Item</label>
                                                        <input type="hidden" id="@barcode" name="@barcode" value="@item.Barcode" />
                                                        <input type="hidden" id="@itemcode" value="@item.itemCode" />
                                                        <input type="hidden" id="@itemtype" value="@item.ItemType" />
                                                    </td>
                                                    <td>
                                                        <label class="CenterText" style="font-weight: normal">@item.Description</label></td>
                                                    <td>
                                                        <label class="CenterText" style="font-weight: normal">@item.DesignName</label></td>
                                                    <td style="text-align: right">


                                                        <label id="@orderedquantity" style="font-weight: normal">@item.OrderedQuantity</label>

                                                    </td>
                                                    <td style="text-align: right">
                                                        <label id="@prevbal" style="font-weight: normal; color:red">@item.Balance</label></td>
                                                    <td style="text-align: right">
                                                        <label id="@receivedtill" style="font-weight: normal">@item.ReceivedQuantity</label></td>
                                                    <td>
                                                        <input type="text" style="text-align:center" id="@receivedquantity" name="@receivedquantity" class="form-control" autocomplete="off" onchange="CalculateBalance(@rowid,'Performa','quantity')" onkeypress="return AllowNumbers(event)" />
                                                        <input type="hidden" id="@extraqty" name="@extraqty" value="@item.ExtraQty" />
                                                    </td>
                                                    <td>
                                                        <input type="text" id="@freeqty" style="text-align:center" name="@freeqty" value="@item.FreeQty" autocomplete="off" class="form-control" onkeypress="return AllowNumbers(event)" />
                                                    </td>
                                                    <td style="text-align: right">
                                                        <label id="@balanceqty" style="font-weight: normal">0</label>
                                                        <input type="hidden" id="@balanceqtyvalue" name="@balanceqtyvalue" value="0" />
                                                    </td>
                                                    <td>
                                                        <label class="CenterText" style="font-weight: normal">@item.Unit</label>
                                                        <input type="hidden" id="@numbertype" name="@numbertype" value="@item.NumberType" /></td>
                                                    <td style="text-align: right" class="col-lg-1 col-md-1">
                                                        <input id="@rate" name="@rate" value="@item.CostPrice" class="form-control" disabled="disabled" style="font-weight: normal;text-align:center" onchange="CalculateBalance(@rowid,'Performa','')" onkeypress="return AllowNumbers(event)"/>
                                                        <input type="hidden" id="@mrp" name="@mrp" value="@item.MRP" />
                                                        <input type="hidden" id="@sellingprice" name="@sellingprice" value="@item.SellingPrice" />
                                                    </td>
                                                    <td style="text-align: center">
                                                        <label id="@discount" style="font-weight: normal">@item.Discount</label></td>
                                                    <td style="text-align: right">
                                                        <label>@item.ItemTax</label>
                                                        <input type="hidden" id="@itemtaxvalue" name="@itemtaxvalue" value="@item.ItemTax" />
                                                    </td>
                                                    <td style="text-align: right">
                                                        @{
                                        var amt = Convert.ToDouble(@item.Amount).ToString("#,###.00##");
                                                        }
                                                        <label id="@amount">@amt</label>
                                                        <input type="hidden" id="@amountvalue" name="@amountvalue" value="@item.Amount" />
                                                    </td>
                                                    <td style="text-align: right">
                                                        <label id="@proportionatetax">@item.ProportionateTax</label>
                                                        <input type="hidden" id="@proportionatetaxvalue" name="@proportionatetaxvalue" value="@item.ProportionateTax" />
                                                        <input type="hidden" id="@proportionateamount" name="@proportionateamount" value="@item.ProportionateTaxAmt" />
                                                    </td>
                                                    <td></td>
                                                </tr>
                                        rowid += 1;

                                    }
                                                <input type="hidden" id="hdnRowCount" name="hdnRowCount" value="@Model.InwardItemsFromSupplierList.Count()" />
                                                <script type="text/javascript">
                                                    document.getElementById("AlreadyPresentItems").value = +"@Model.InwardItemsFromSupplierList.Count()";
                                                </script>
                                            }
                                        </tbody>
                                    </table>
                                    <button class="btn btn-link" id="NonInvButton" type="button" style="float: right; text-align: right; color: orangered; font-size: small;">Non-Inventory Item</button>
                                    <div style="height: 4px"></div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-7 col-lg-7">
                            <div class="col-md-12 col-lg-12">
                                <div id="AddTaxes">
                                    <div class="row">
                                        <div class="col-lg-12 col-md-12">
                                            <label style="font-size: medium">Tax Summary:</label>
                                        </div>
                                    </div>
                                    @{
                                if (Model.PurchaseInventoryTaxList.Count() == 0)
                                {
                                        <div class="row">
                                            <div class="col-md-3 col-lg-3">
                                                <label id="AddedAmount1">0</label>
                                                <input type="hidden" id="AddedAmounthdn1" name="AddedAmounthdn1" value="0" />
                                            </div>
                                            <div class="col-md-2 col-lg-2">
                                                <label id="AddedTax1"></label>
                                            </div>
                                            <div class="col-md-7 col-lg-7">
                                                <label id="AddedTaxAmount1">0</label>
                                                <input type="hidden" id="AddedTaxAmounthdn1" name="AddedTaxAmounthdn1" value="0" />
                                            </div>
                                        </div>
                                }
                                else
                                {
                                    int taxcount = 1;
                                    foreach (var tax in Model.PurchaseInventoryTaxList)
                                    {
                                        string addedtax = "AddedTax" + taxcount;
                                        string taxnumber = "ItemTaxNumber" + taxcount;
                                        string addedtaxamount = "AddedTaxAmount" + taxcount;
                                        string addedtaxhdn = "AddedTaxAmounthdn" + taxcount;
                                        string addedamount = "AddedAmount" + taxcount;
                                        string addedamounthdn = "AddedAmounthdn" + taxcount;
                                        string itemtax = tax.Tax + "%";
                                        <div class="row">
                                            <div class="col-md-3 col-lg-3">
                                                <label id="@addedamount"><i class="fa fa-inr"></i>@Convert.ToDouble(tax.Amount).ToString("#,###.00##")</label>
                                                <input type="hidden" id="@addedamounthdn" name="@addedamounthdn" value="@tax.Amount" />
                                            </div>
                                            <div class="col-md-2 col-lg-2">
                                                <label id="@addedtax">@itemtax</label>
                                                <input type="hidden" id="@taxnumber" name="@taxnumber" value="@tax.Tax" />
                                            </div>
                                            <div class="col-md-7 col-lg-7">
                                                <label id="@addedtaxamount"><i class="fa fa-inr"></i>@Convert.ToDouble(tax.TaxAmount).ToString("#,###.00##")</label>
                                                <input type="hidden" id="@addedtaxhdn" name="@addedtaxhdn" value="@tax.TaxAmount" />
                                            </div>
                                        </div>
                                        taxcount++;
                                    }
                                        <script type="text/javascript">
                                            document.getElementById("AddTaxes").style.display = "inline";
                                        </script>
                                }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="row"></div>
                    </div>
                    <div class="col-md-12 col-lg-12" id="TotalQuantityDetails">
                        <div class="col-md-6 col-lg-6">
                            <div class="row">
                                <div class="col-md-7 col-lg-7" style="text-align: left">
                                    <label style="font-size: larger">Total Received Quantity</label>
                                </div>
                                <div class="col-md-5 col-lg-5" style="text-align: left">
                                    <label id="Total_Quantity" style="font-size: larger">@Html.DisplayFor(model => model.InwardFromSupplierDetails.TotalReceivedQuantity)</label>
                                    <input type="hidden" id="Total_Quantity_Value" name="Total_Quantity_Value" value="@Model.InwardFromSupplierDetails.TotalReceivedQuantity" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-7 col-lg-7" style="text-align: left">
                                    <label style="font-size: larger">Total Remaining Quantity</label>
                                </div>
                                <div class="col-md-5 col-lg-5" style="text-align: left">
                                    <label id="Total_Remaining_Quantity" style="font-size: larger">@Html.DisplayFor(model => model.InwardFromSupplierDetails.TotalRemainingQuantity)</label>
                                    <input type="hidden" id="Total_Remaining_Quantity_Value" name="Total_Remaining_Quantity_Value" value="@Model.InwardFromSupplierDetails.TotalRemainingQuantity" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-7 col-lg-7" style="text-align: left">
                                    <label style="font-size: larger">Total Extra Quantity</label>
                                </div>
                                <div class="col-md-5 col-lg-5" style="text-align: left">
                                    <label id="Total_Extra_Quantity" style="font-size: larger">@Html.DisplayFor(model => model.InwardFromSupplierDetails.TotalExtraQuantity)</label>
                                    <input type="hidden" id="Total_Extra_Quantity_Value" name="Total_Extra_Quantity_Value" value="@Model.InwardFromSupplierDetails.TotalExtraQuantity" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 col-lg-6">
                            <div class="row">
                                <div class="col-md-7 col-lg-7">
                                    <label style="font-size: 14px;">Total Amount</label>
                                </div>
                                <div class="col-md-5 col-lg-5" style="text-align: right">
                                    <label id="Total_Amount" style="font-size: 14px"><i class="fa fa-inr"></i>@Convert.ToDouble(Model.InwardFromSupplierDetails.TotalAmount).ToString("#,###.00##")</label>
                                    <input type="hidden" id="Total_Amount_Value" name="Total_Amount_Value" value="@Model.InwardFromSupplierDetails.TotalAmount" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-7 col-lg-7">
                                    <label style="font-size: 14px;">Packing and Forwarding</label>
                                </div>
                                <div class="col-md-5 col-lg-5" style="text-align: right">
                                    @Html.TextBoxFor(model => model.InwardFromSupplierDetails.PackAndForwd, new { @class = "form-control", @autocomplete = "off", @placeholder = "0", @style = "text-align:right", @onchange = "CalculatePackAndForwd()" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-7 col-lg-7">
                                    <label style="font-size: 14px;">Tax Amount</label>
                                </div>
                                <div class="col-md-5 col-lg-5" style="text-align: right">
                                    <label id="TotalTaxAmount" style="font-size: 14px"><i class="fa fa-inr"></i>@Convert.ToDouble(Model.InwardFromSupplierDetails.TotalTaxAmount).ToString("#,###.00##")</label>
                                    <input type="hidden" id="TotalTaxAmountValue" name="TotalTaxAmountValue" value="@Model.InwardFromSupplierDetails.TotalTaxAmount" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-7 col-lg-7">
                                    <label style="font-size: 14px;">Grand Total</label>
                                </div>
                                <div class="col-md-5 col-lg-5" style="text-align: right">
                                    <label id="Grand_Total" style="font-size: 14px"><i class="fa fa-inr"></i>@Convert.ToDouble(Model.InwardFromSupplierDetails.GrandTotal).ToString("#,###.00##")</label>
                                    <input type="hidden" id="Grand_Total_Value" name="Grand_Total_Value" value="@Model.InwardFromSupplierDetails.GrandTotal" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="height: 5px"></div>
                    <div class="">
                        <div class="col-md-12 col-lg-12 form-group">
                            <div class="col-md-1 col-lg-1">
                                <label style="font-size: larger">Narration:</label>
                            </div>
                            <div class="col-md-11 col-lg-11">
                                @Html.TextBoxFor(model => model.InwardFromSupplierDetails.Narration, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
    <div style="height: 5px"></div>
    <input type="submit" id="Submit" value="Save" class="col-md-offset-6 col-lg-offset-6 btn btn-success" />
}