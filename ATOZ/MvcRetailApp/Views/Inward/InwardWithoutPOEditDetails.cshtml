@model CodeFirstEntities.MainApplication

@{
    ViewBag.Title = "InwardWithoutPOEditDetails";
}

<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

<link href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jsDatePick.jquery.min.1.3.js")"></script>
<script src="@Url.Content("~/Scripts/jsDatePick.min.1.3.js")"></script>

<script type="text/javascript" src="~/Scripts/bootstrap.js"></script>
<link href="~/Content/customAlerts.css" rel="stylesheet" />
<script src="~/Scripts/bootbox.js"></script>

<script type="text/javascript">
    jQuery(document).ready(function () {

        // Init Theme Core 	  
        Core.init();

        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields = $(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }

        });

        document.getElementById("In_Words").innerHTML = NumberToWords();
        if ($("#InwardFromSupplierDetails_ChallanDate").val() != "") {
            var temp = $("#InwardFromSupplierDetails_ChallanDate").val();
            var dat = new Date(temp);
            var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
            var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
            document.getElementById('InwardFromSupplierDetails_ChallanDate').value = data;
        }
        else {
            document.getElementById("InwardFromSupplierDetails_ChallanDate").disabled = true;
        }

        if ($("#InwardFromSupplierDetails_BillDate").val() != "") {
            var temp = $("#InwardFromSupplierDetails_BillDate").val();
            var dat = new Date(temp);
            var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
            var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
            document.getElementById('InwardFromSupplierDetails_BillDate').value = data;
        }
        else {
            document.getElementById("InwardFromSupplierDetails_BillDate").disabled = true;
        }
        var temp = $("#date").text();
        var dat = new Date(temp);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('date').innerHTML = data;

        new JsDatePick({
            useMode: 2,
            target: "InwardFromSupplierDetails_ChallanDate",
            dateFormat: "%d/%M/%Y",
        });

        new JsDatePick({
            useMode: 2,
            target: "InwardFromSupplierDetails_BillDate",
            dateFormat: "%d/%M/%Y",
        });

        $("#InwardFromSupplierDetails_ChallanNo").change(function () {
            var value = $(this).val();
            if (value != 0 && value != "") {
                document.getElementById("InwardFromSupplierDetails_ChallanDate").disabled = false;
            }
            else {
                document.getElementById("InwardFromSupplierDetails_ChallanDate").disabled = true;
            }
        });

        $("#InwardFromSupplierDetails_BillNo").change(function () {
            var value = $(this).val();
            if (value != 0 && value != "") {
                document.getElementById("InwardFromSupplierDetails_BillDate").disabled = false;
            }
            else {
                document.getElementById("InwardFromSupplierDetails_BillDate").disabled = true;
            }
        });
    });
</script>


<script type="text/javascript">
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }

    function confirmbox(message, row) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone2.ogg';
        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('confirmClass');
        bootbox.confirm('<i class="fa fa-2x fa-question-circle"></i><br>' + message + '<hr>',
		 function (result) {
		     if (result) {
		         $("#" + row).remove();
		         var rowid = document.getElementById("hdnRowCount").value;
		         CalculateItemWiseAmount(rowid);
		         var rowid = document.getElementById("hdnRowCount").value;
		         var totalamount = 0;
		         for (var i = 1; i <= rowid; i++) {
		             var amount = "amount" + i;
		             if (document.getElementById(amount) != null) {
		                 totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
		             }
		         }
		         totalamount = Math.round(totalamount.toFixed(2));
		         document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
		         document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
		         document.getElementById("In_Words").innerHTML = NumberToWords();
		     }
		 });
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        var transportmode = document.getElementById("ddltypeofmode").value;
        var transportname = document.getElementById("transportname").value;
        $.getJSON("/Inward/GetTransportNames", { mode: transportmode },
                    function (data) {
                        var select = $("#ddltransportnames");
                        select.empty();
                        select.append($('<option/>', {
                            text: "Select Name",
                            value: "",
                        }));
                        $.each(data, function (index, itemdata) {
                            select.append($('<option/>', {
                                text: itemdata.Text,
                                value: itemdata.Value,
                            }));
                        });
                        $("#ddltransportnames").val(transportname).attr("selected", true);
                    });

        if (document.getElementById("godowncode").value != "") {
            var data = document.getElementById("ddlgodownnames").value;
            var gdadd = document.getElementById("godownarea").value;

            $.getJSON("/PurchaseOrder/GetGodownAddresses", { code: data },
            function (data) {
                var select = $("#ddlgodownaddresses");
                select.empty();
                select.append($('<option/>', {
                    text: "Addresses",
                    value: "",
                }));
                $.each(data.addresslist, function (index, itemdata) {
                    select.append($('<option/>', {
                        text: itemdata.Text,
                        value: itemdata.Value,
                    }));
                });
                $("#ddlgodownaddresses").val(gdadd).attr("selected", true);
            });
        }
    });
</script>

<script type="text/javascript">
    $(function () {
        new JsDatePick({
            useMode: 2,
            target: "InwardFromSupplierDetails_ChallanDate",
            dateFormat: "%d/%M/%Y",
        });
        new JsDatePick({
            useMode: 2,
            target: "InwardFromSupplierDetails_BillDate",
            dateFormat: "%d/%M/%Y",
        });
    });

    $("#InwardFromSupplierDetails_SupplierName").autocomplete({
        source: "/Supplier/GetSupplierNames",
        minLength: 1,
        select: function (event, ui) {
            if (ui.item) {
                $("#InwardFromSupplierDetails_SupplierName").val(ui.item.value);
                var idmodel = document.getElementById("InwardFromSupplierDetails_SupplierName").value;
                $("#InwardFromSupplierDetails_SupplierName").change(function () {
                    document.getElementById("SupplierDetails").style.display = "none";
                });

                $.getJSON("/Inward/GetSupplierDetails", { name: idmodel },
                function (data) {
                    document.getElementById("SupplierDetails").style.display = "inline";
                    if (data.Registered == "Yes") {
                        $("#Registered").prop("checked", true);
                    }
                    else {
                        $("#NonRegistered").prop("checked", true);
                    }
                    if (data.State == "Maharashtra") {
                        document.getElementById("formtypeid").style.display = "none";
                        $("#YesRadioButton").attr("disabled", true);
                        $("#NoRadioButton").attr("disabled", true);
                        $("#NoRadioButton").prop("checked", true);
                    }
                    else {
                        if (data.Registered == "Yes") {
                            $("#YesRadioButton").attr("disabled", false);
                            $("#NoRadioButton").attr("disabled", false);
                            $("#NoRadioButton").prop("checked", true);
                            document.getElementById("formtypeid").style.display = "none";
                            $("#ddlformtypes").val("").attr("selected", true);
                        }
                        else {
                            $("#YesRadioButton").attr("disabled", true);
                            $("#NoRadioButton").attr("disabled", true);
                            $("#NoRadioButton").prop("checked", true);
                            document.getElementById("formtypeid").style.display = "none";
                            $("#ddlformtypes").val("").attr("selected", true);
                        }
                    }

                    document.getElementById("SupplierState").innerHTML = data.State;
                    $("#InwardFromSupplierDetails_SupplierAddress").val(data.Address);
                    $("#InwardFromSupplierDetails_SupplierContactNo").val(data.ContactNo1);
                    $("#InwardFromSupplierDetails_SupplierEmail").val(data.Email);
                    $("#InwardFromSupplierDetails_SupplierState").val(data.State);
                    document.getElementById("TransportDetails").style.display = "inline";
                    document.getElementById("ReceivedAt").style.display = "inline";
                    document.getElementById("Godown_Details").style.display = "inline";
                    document.getElementById("ShopDetails").style.display = "inline";
                });
            }
        }
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {


        $("#ddltypeofmode").change(function () {
            var mode = document.getElementById("ddltypeofmode").value;
            if (mode != "") {

                $.getJSON("/Inward/GetTransportNames", { mode: mode },
                function (data) {
                    var select = $("#ddltransportnames");
                    select.empty();
                    select.append($('<option/>', {
                        text: "Select Name",
                        value: "",
                    }));
                    $.each(data, function (index, itemdata) {
                        select.append($('<option/>', {
                            text: itemdata.Text,
                            value: itemdata.Value,
                        }));
                    });
                });
            }
            else {
                var select = $("#ddltransportnames");
                select.empty();
                select.append($('<option/>', {
                    text: "Select Name",
                    value: "",
                }));
            }
        });

        $("#ddltransportnames").change(function () {
            var name = document.getElementById("ddltransportnames").value;
            if (name != "") {
                $.getJSON("/Inward/GetTransportDetails", { name: name },
                    function (data) {
                        document.getElementById("InwardFromSupplierDetails_TransportContactNo").value = data.no;
                    });
            }
        });

        $("#ddlgodownnames").change(function () {
            var data = $(this).val();
            if (data != "") {
                $.getJSON("/PurchaseOrder/GetGodownAddresses", { code: data },
                function (data) {
                    document.getElementById("Godown_Addresses").style.display = "inline";
                    var select = $("#ddlgodownaddresses");
                    select.empty();
                    select.append($('<option/>', {
                        text: "Addresses",
                        value: "",
                    }));
                    $.each(data.addresslist, function (index, itemdata) {
                        select.append($('<option/>', {
                            text: itemdata.Text,
                            value: itemdata.Value,
                        }));
                    });
                });
            }
            else {
                if (document.getElementById("shopname") != null) {
                    document.getElementById("shopname").disabled = false;
                }
                document.getElementById("Godown_Addresses").style.display = "none";
                document.getElementById("Delivery_Details").style.display = "none";
            }
        });

        $("#ddlgodownaddresses").change(function () {
            var data = $(this).val();
            if (data != "") {
                document.getElementById("InwardFromSupplierDetails_GodownArea").value = data;
                document.getElementById("Delivery_Details").style.display = "inline";
                $.getJSON("/PurchaseOrder/GetGodownDetails", { code: $("#ddlgodownnames").val(), area: data },
                    function (data) {
                        document.getElementById("Godown_Address").innerHTML = data.Address;
                        document.getElementById("Godown_Person").innerHTML = data.EmpName;
                        document.getElementById("Godown_Contact").innerHTML = data.ContactNo1;
                        document.getElementById("Godown_Email").innerHTML = data.GodownEmail;
                        $("#InwardFromSupplierDetails_ReceivedAt").val(data.Address);
                        $("#InwardFromSupplierDetails_ContactPerson").val(data.EmpName);
                        $("#InwardFromSupplierDetails_GodownContactNo").val(data.ContactNo1);
                        $("#InwardFromSupplierDetails_GodownEmail").val(data.GodownEmail);
                    });
            }
            else {
                document.getElementById("Delivery_Details").style.display = "none";
            }
        });
    });

    function GetTaxForAlreadyPresentItems(rowid, presentrows) {
        var itemtax = "ItemTax" + rowid;
        var itemtaxvalue = "ItemTaxValue" + rowid;
        var subcat = "SubCat" + rowid;
        var formtype;
        if (document.getElementById("ddlformtypes").style.display == "none") {
            formtype = "";
        }
        else {
            formtype = document.getElementById("ddlformtypes").value;
        }

        $.getJSON("/PurchaseOrder/GetTaxForAlreadyPresentItems", { itemname: $("#itemCode" + rowid).val(), FormType: formtype, subcat: $("#" + subcat).val(), State: $("#InwardFromSupplierDetails_SupplierState").val() },
        function (data) {
            document.getElementById(itemtax).innerHTML = data;
            document.getElementById(itemtaxvalue).value = data;
            var tax = data;
            if (tax != '0') {//if tax is '0' no need to add new taxnumber
                var taxcount = document.getElementById("ItemTaxCount").value;
                if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                    $("#ItemTaxNumber" + taxcount).val(tax);
                    document.getElementById("AddTaxes").style.display = "inline";
                    $("#AddedTax1").text(tax + "%");
                }
                else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                    var taxpresent = 0;
                    for (var i = 1; i <= taxcount; i++) {
                        var taxno = "ItemTaxNumber" + i;
                        if (tax == $("#" + taxno).val()) {
                            taxpresent++;
                        }
                    }
                    if (taxpresent == 0) {
                        taxcount++;
                        var taxno = "ItemTaxNumber" + taxcount;
                        var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                        $("#AllTaxesNumbersValue").append(data);
                        var addedtaxno = "AddedTax" + taxcount;
                        var addedtaxamount = "AddedTaxAmount" + taxcount;
                        var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                        var addedamount = "AddedAmount" + taxcount;
                        var addedamounthdn = "AddedAmounthdn" + taxcount;
                        var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                        newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                        newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                        $("#AddTaxes").append(newlabel);
                        $("#ItemTaxCount").val(taxcount);
                    }
                }
            }
            CalculateTaxSummary(presentrows);
        });
    }
</script>

<script type="text/javascript">
    $(document).keypress(function (e) {
        if (e.which == 13) {
            //IF EMPTY VALUE IS NOT SELECTED IN SUBCATEGORY DROPDOWN
            if ($("#InwardFromSupplierDetails_SupplierName").val() != "") {
                var rowid = document.getElementById("hdnRowCount").value;
                var presentrows = +$("#AlreadyPresentItems").val();
                var previousRowValidationCount = 0;
                for (var i = 1; i <= presentrows; i++) {
                    var allprevitemCode = "itemCode" + i;
                    var allprevdescription = "description" + i;
                    var allprevquantity = "quantity" + i;
                    var allprevdesign = "design" + i;
                    var allprevrate = "rate" + i;
                    var allprevdiscountpercent = "discountpercent" + i;
                    var allprevdiscountrps = "discountrps" + i;
                    if (document.getElementById(allprevitemCode) != null) {
                        if ($("#" + allprevitemCode).val() == "") {
                            alertbox("Please Select The Item");
                            previousRowValidationCount++;
                        }
                        else if ((+$("#" + allprevquantity).val()) == 0 || $("#" + allprevquantity).val() == "") {
                            alertbox("Please Fill The Quantity");
                            previousRowValidationCount++;
                        }
                            //else if ($("#" + allprevdesign).val() == "") {
                            //    alertbox("Please Select The Design");
                            //    previousRowValidationCount++;
                            //}
                        else if ($("#" + allprevrate).val() == "" || (+$("#" + allprevrate).val()) == 0) {
                            alertbox("Please Fill The Rate");
                            previousRowValidationCount++;
                        }
                    }
                }
                if (previousRowValidationCount == 0) {
                    if ($("#CalculateTaxForAlreadyPresentRows").val() == "Yes") {
                        $("#CalculateTaxForAlreadyPresentRows").val("No");
                        for (var i = 1; i <= presentrows; i++) {
                            var allprevitemCode = "itemCode" + i;
                            var allprevdescription = "description" + i;
                            var allprevquantity = "quantity" + i;
                            var allprevdesign = "design" + i;
                            var allprevrate = "rate" + i;
                            var allprevdiscountpercent = "discountpercent" + i;
                            var allprevdiscountrps = "discountrps" + i;
                            if (document.getElementById(allprevitemCode) != null) {
                                document.getElementById(allprevitemCode).disabled = true;
                                document.getElementById(allprevdescription).disabled = true;
                                document.getElementById(allprevquantity).disabled = true;
                                document.getElementById(allprevdesign).disabled = true;
                                document.getElementById(allprevrate).disabled = true;
                                document.getElementById(allprevdiscountpercent).disabled = true;
                                document.getElementById(allprevdiscountrps).disabled = true;
                                GetTaxForAlreadyPresentItems(i);
                            }
                        }
                    }
                    var previtemCode = "itemCode" + rowid;
                    var prevdescription = "description" + rowid;
                    var prevquantity = "quantity" + rowid;
                    var prevdesign = "design" + rowid;
                    var prevrate = "rate" + rowid;
                    var prevdiscountpercent = "discountpercent" + rowid;
                    var prevdiscountrps = "discountrps" + rowid;
                    //If Row was Not DELETED
                    if (document.getElementById(previtemCode) != null) {
                        //If Required Fields are Empty of Previous Row
                        if ($("#" + previtemCode).val() == "") {
                            alertbox("Please Select The Item");
                        }
                        else if ((+$("#" + prevquantity).val()) == 0 || $("#" + prevquantity).val() == "") {
                            alertbox("Please Fill The Quantity");
                        }
                            //else if ($("#" + prevdesign).val() == "") {
                            //    alertbox("Please Select The Design");
                            //}
                        else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                            alertbox("Please Fill The Rate");
                        }
                            //If Required Fields are Not Empty then Generate Row
                        else {
                            if (document.getElementById(previtemCode) != null) {
                                document.getElementById(previtemCode).disabled = true;
                                document.getElementById(prevdescription).disabled = true;
                                document.getElementById(prevquantity).disabled = true;
                                document.getElementById(prevdesign).disabled = true;
                                document.getElementById(prevrate).disabled = true;
                                document.getElementById(prevdiscountpercent).disabled = true;
                                document.getElementById(prevdiscountrps).disabled = true;
                            }
                            GenerateDynamicRow(rowid);
                        }
                    }
                        //If row was DELETED then Generate Row
                    else {
                        if (document.getElementById(previtemCode) != null) {
                            document.getElementById(previtemCode).disabled = true;
                            document.getElementById(prevdescription).disabled = true;
                            document.getElementById(prevquantity).disabled = true;
                            document.getElementById(prevdesign).disabled = true;
                            document.getElementById(prevrate).disabled = true;
                            document.getElementById(prevdiscountpercent).disabled = true;
                            document.getElementById(prevdiscountrps).disabled = true;
                        }
                        GenerateDynamicRow(rowid);
                    }
                }
            }
                //IF SUPPLIER NAME IS EMPTY
            else {
                alertbox("Please Select The Supplier Name");
            }
        }
    });
</script>

<script type="text/javascript">
    function GenerateDynamicRow(rowid) {
        rowid = +rowid + 1;
        var subcat = "SubCat" + rowid;
        var row = "row" + rowid;
        var itemCode = "itemCode" + rowid;
        var itemName = "itemName" + rowid;
        var ItemType = "ItemType" + rowid;
        var barcode = "barcode" + rowid;
        var description = "description" + rowid;
        var materialvalue = "materialvalue" + rowid;
        var brandvalue = "brandvalue" + rowid;
        var sizevalue = "sizevalue" + rowid;
        var designlist = "designlist" + rowid;
        var color = "color" + rowid;
        var colorvalue = "colorvalue" + rowid;
        var quantity = "quantity" + rowid;
        var rate = "rate" + rowid;
        var mrp = "MRP" + rowid;
        var sellingprice = "sellingprice" + rowid;
        var discountrps = "discountrps" + rowid;
        var discountpercent = "discountpercent" + rowid;
        var amount = "amount" + rowid;
        var amountvalue = "amountvalue" + rowid;
        var itemtax = "ItemTax" + rowid;
        var itemtaxvalue = "ItemTaxValue" + rowid;
        var unit = "unit" + rowid;
        var numbertype = "numberType" + rowid;
        var unitvalue = "unitvalue" + rowid;
        var design = document.createElement("SELECT");
        var designName = "designName" + rowid;
        var proportionatetax = "proportionatetax" + rowid;
        var proportionatetaxvalue = "proportionatetaxvalue" + rowid;
        var proportionateamount = "proportionatetaxamount" + rowid;

        design.className = "form-control col-md-1 col-lg-1";
        design.id = "design" + rowid;
        design.name = "design" + rowid;
        var option1 = document.createElement("option");
        option1.text = "Select";
        option1.value = "";
        design.appendChild(option1);

        var unorderedList = $("#AddingRows");
        var data = "<tr id='" + row + "'><input type='hidden' id='" + subcat + "' name='" + subcat + "' />";
        data += "<td><select id='" + itemCode + "' name='" + itemCode + "' class='form-control col-md-2 col-lg-2'><option value=''>Select</option></select><input type='hidden' id='" + itemName + "' name='" + itemName + "' /><input type='hidden' id='" + barcode + "' name='" + barcode + "' /></td>";
        data += "<td><textarea id='" + description + "' name='" + description + "' class='form-control col-md-3 col-lg-3' placeholder='Description' /></td>";
        data += "<td><label id='" + color + "' class='CenterText' style='font-weight: normal'>---</label><input type='hidden' id='" + materialvalue + "' name='" + materialvalue + "' /><input type='hidden' id='" + colorvalue + "' name='" + colorvalue + "' /></td>";
        data += "<td><div id='" + designlist + "' name='" + designlist + "'></div><input type='hidden' id='" + designName + "' name='" + designName + "' /><input type='hidden' id='" + brandvalue + "' name='" + brandvalue + "' /><input type='hidden' id='" + sizevalue + "' name='" + sizevalue + "' /></td>";
        data += "<td><input type='text' id='" + quantity + "' name='" + quantity + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='Qty' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ',' + '\"\"' + ")' onkeypress='return AllowDecimal(event," + rowid + ")' /></td>";
        data += "<td><label id='" + unit + "' class='CenterText' style='font-weight:normal'></label><input type='hidden' name='" + unitvalue + "' id='" + unitvalue + "'><input type='hidden' name='" + numbertype + "' id='" + numbertype + "'></td>";
        data += "<td><input type='text' id='" + rate + "' name='" + rate + "' autocomplete='off' disabled='disabled' class='form-control col-md-2 col-lg-2' placeholder='Rate' style='text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ',' + '\"\"' + ")' onkeypress='return AllowNumbers(event)' /><input type='hidden' id='" + mrp + "' name='" + mrp + "'/><input type='hidden' id='" + sellingprice + "' name='" + sellingprice + "'/></td>";
        data += "<td><input type='text' id='" + discountpercent + "' name='" + discountpercent + "' autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='0%' style='font-weight:normal; text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ',' + '\"percent\"' + ")' onkeypress='return AllowNumbers(event)' /></td>";
        data += "<td><input type='text' id='" + discountrps + "' name='" + discountrps + "'  autocomplete='off' class='form-control col-md-1 col-lg-1' placeholder='0' style='font-weight:normal; text-align:center;width:100%' onchange='CalculateItemWiseAmount(" + rowid + ',' + '\"rps\"' + ")' onkeypress='return AllowNumbers(event)' /></td>";
        data += "<td style='text-align:center'><label id='" + itemtax + "'>0</label><input type='hidden' id='" + itemtaxvalue + "' name='" + itemtaxvalue + "' value='0' /></td>";
        data += "<td style='text-align:right'><label id='" + amount + "'>0</label><input type='hidden' id='" + amountvalue + "' name='" + amountvalue + "' value='0'/></td>";
        data += "<td style='text-align:right'><label id='" + proportionatetax + "'>0</label><input type='hidden' id='" + proportionatetaxvalue + "' name='" + proportionatetaxvalue + "' value='0' /><input type='hidden' id='" + proportionateamount + "' name='" + proportionateamount + "' value='0' /></td>";
        data += "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + rowid + ")' class='fa fa-trash fa-lg' style='color:red;' /><input type='hidden' id='" + ItemType + "' name='" + ItemType + "' value='Inventory' /></td></tr>";
        unorderedList.append(data);
        var dropdown = document.getElementById(designlist);
        dropdown.appendChild(design);

        $.getJSON("/Inward/GetInventoryItems",
        function (data) {
            var select = $("#" + itemCode);
            select.empty();
            select.append($('<option/>', {
                value: "",
                text: "Select"
            }));
            $.each(data, function (index, itemData) {
                select.append($('<option/>', {
                    value: itemData.Value,
                    text: itemData.Text + " " + itemData.Value
                }));
            });
        });
        $("#" + itemCode).change(function () {
            $("#InwardFromSupplierDetails_SupplierName").attr("disabled", true);
            $("#ddlformtypes").attr("disabled", true);
            $("#YesRadioButton").attr("disabled", true);
            $("#NoRadioButton").attr("disabled", true);
            $("#Registered").attr("disabled", true);
            $("#NonRegistered").attr("disabled", true);
            var name = document.getElementById(itemCode).value;
            if (name != "") {
                var formtype = document.getElementById("ddlformtypes").value;
                if (document.getElementById("formtypeid").style.display == "none") {
                    formtype = "";
                }
                else {
                    if (document.getElementById("ddlformtypes").value == "") {
                        formtype = "";
                    }
                    else {
                        formtype = $("#ddlformtypes").val();
                    }
                }
                var currentrowid = 0;
                for (var i = rowid - 1; i >= 1; i--) {
                    var previousitemname = "itemCode" + i;
                    if (name == $("#" + previousitemname).val()) {
                        currentrowid = i;
                        break;
                    }
                }
                if (currentrowid == 0) {
                    var validationcount = 0;
                    for (var i = 1; i < rowid; i++) {
                        var prevquantity = "quantity" + i;
                        var prevrate = "rate" + i;
                        var prevdesign = "design" + i;
                        if (document.getElementById(quantity) != null) {
                            if ((+$("#" + prevquantity).val()) == 0 || $("#" + prevquantity).val() == "") {
                                alertbox("Please Fill The Quantity");
                                validationcount++;
                            }
                                //else if ($("#" + prevdesign).val() == "") {
                                //    alertbox("Please Select The Design");
                                //    validationcount++;
                                //}
                            else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                                alertbox("Please Fill The Rate");
                                validationcount++;
                            }
                            else {
                                if (document.getElementById(prevquantity) != null) {
                                    if (document.getElementById(prevquantity).disabled == false) {
                                        document.getElementById(prevquantity).disabled = true;
                                        document.getElementById("description" + i).disabled = true;
                                        document.getElementById(prevdesign).disabled = true;
                                        document.getElementById(prevrate).disabled = true;
                                        document.getElementById("discountpercent" + i).disabled = true;
                                        document.getElementById("discountrps" + i).disabled = true;
                                    }
                                }
                            }
                        }
                    }
                    if (validationcount == 0) {
                        $.getJSON("/Inward/GetInventoryAndNonInvItemDetailsFromItems", { itemname: name, FormType: formtype, State: $("#InwardFromSupplierDetails_SupplierState").val(), ItemType: "Inventory" },
                     function (data) {
                         document.getElementById("quantity" + rowid).value = "";
                         document.getElementById("amount" + rowid).innerHTML = 0.00;
                         document.getElementById("amountvalue" + rowid).innerHTML = 0.00;
                         $("#" + subcat).val(data.subcat);
                         $("#" + itemName).val(data.itemName);
                         $("#" + description).val(data.description);
                         $("#" + sellingprice).val(data.sellingprice);
                         $("#" + mrp).val(data.mrp);
                         $("#" + rate).val(data.costprice);
                         $("#" + color).text(data.colorname);
                         $("#" + materialvalue).val(data.typematerial);
                         $("#" + colorvalue).val(data.colorname);
                         $("#" + brandvalue).val(data.brandName);
                         $("#" + sizevalue).val(data.size);
                         $("#" + unit).text(data.unit);
                         $("#" + numbertype).val(data.NumberType);
                         $("#" + designName).val(data.designName);
                         $("#" + unitvalue).val(data.unit);
                         $("#" + itemtax).text(data.taxPercent);
                         $("#" + itemtaxvalue).val(data.taxPercent);
                         $("#" + barcode).val(data.Barcode);

                         design.options.length = 0;
                         design.className = "form-control col-md-1 col-lg-1";
                         design.id = "design" + rowid;
                         design.name = "design" + rowid;
                         design.onchange = EventTrigger(data.designCode);
                         var option1 = document.createElement("option");
                         option1.text = "Select";
                         option1.value = "";
                         design.appendChild(option1);
                         $.each(data.select, function (index, itemData) {
                             var option1 = document.createElement("option");
                             option1.value = itemData.Value;
                             option1.text = itemData.Text;
                             design.appendChild(option1);

                         });
                         $("#" + design.id).val(data.designCode).attr("selected", "selected");


                         //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                         //on each item which is applied
                         var tax = data.taxPercent;
                         if (tax != '0') {//if tax is '0' no need to add new taxnumber
                             var taxcount = document.getElementById("ItemTaxCount").value;
                             if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                 $("#ItemTaxNumber" + taxcount).val(tax);
                                 document.getElementById("AddTaxes").style.display = "inline";
                                 $("#AddedTax1").text(tax + "%");
                             }
                             else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                 var taxpresent = 0;
                                 for (var i = 1; i <= taxcount; i++) {
                                     var taxno = "ItemTaxNumber" + i;
                                     if (tax == $("#" + taxno).val()) {
                                         taxpresent++;
                                     }
                                 }
                                 if (taxpresent == 0) {
                                     taxcount++;
                                     var taxno = "ItemTaxNumber" + taxcount;
                                     var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                     $("#AllTaxesNumbersValue").append(data);
                                     var addedtaxno = "AddedTax" + taxcount;
                                     var addedtaxamount = "AddedTaxAmount" + taxcount;
                                     var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                     var addedamount = "AddedAmount" + taxcount;
                                     var addedamounthdn = "AddedAmounthdn" + taxcount;
                                     var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                     newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                     newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                     $("#AddTaxes").append(newlabel);
                                     $("#ItemTaxCount").val(taxcount);
                                 }
                             }
                         }
                         var CostPrice = +$("#" + rate).val();
                         var Tax = +$("#" + itemtaxvalue).val();
                         var MRP = +$("#" + mrp).val();
                         taxoncostprice = (CostPrice * Tax) / 100;
                         var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                         var Sellingprice = MRP - (MRP * +taxpercentoncostprice / 100);
                         $("#sellingprice" + rowid).val(Sellingprice.toFixed(2));
                     });

                        function EventTrigger(designCode) {
                            window.open("/Inward/PopUpPage?code=" + designCode, "_target", "width=1000,height=150,top=280px,left=200px");
                        }

                        $("#" + design.id).change(function () {
                            if ($("#" + design.id).val() != "") {
                                $.getJSON("/Inward/GetDesignNameByCode", { code: $("#" + design.id).val() },
                                function (data) {
                                    $("#" + designName).val(data);
                                });
                                window.open("/Inward/PopUpPage?code=" + $("#" + design.id).val(), "_target", "width=1000,height=150,top=280px,left=200px");
                            }
                        });
                    }
                    else {
                        $("#itemCode" + rowid).val("").attr("selected", true);
                    }
                }
                else {
                    alertbox("Item Name Already Selected Please change the quantity");
                    document.getElementById("quantity" + currentrowid).disabled = false;
                    document.getElementById("description" + currentrowid).disabled = false;
                    document.getElementById("design" + currentrowid).disabled = false;
                    document.getElementById("discountpercent" + currentrowid).disabled = false;
                    document.getElementById("discountrps" + currentrowid).disabled = false;

                    $("#itemCode" + rowid).val("").attr("selected", true);
                    document.getElementById("quantity" + rowid).value = 0;
                    document.getElementById("amount" + rowid).innerHTML = 0.00;
                    document.getElementById("proportionatetax" + rowid).innerHTML = 0;
                    $("#description" + rowid).val("");
                    $("#rate" + rowid).val(0.00);
                    $("#color" + rowid).text("---");
                    $("#unit" + rowid).text("---");
                    $("#ItemTax" + rowid).text("0");
                    var designselect = $("#design" + rowid);
                    designselect.empty();
                    designselect.append($('<option/>', {
                        value: "",
                        text: "Select"
                    }));
                    CalculateItemWiseAmount(rowid);
                }
            }
            else { alertbox("Please Select Item First"); }
        });
        $("#hdnRowCount").val(rowid);
    }
</script>

<script type="text/javascript">
    function addCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function removeCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, '');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function DeleteRow(id) {
        var row = "row" + id;
        confirmbox("Are you sure you wish to delete this row?", row);
    }
</script>

<script type="text/javascript">
    function NumberToWords() {
        var junkVal = (+removeCommas(document.getElementById('Grand_Total').innerHTML));
        junkVal = Math.floor(junkVal);
        var obStr = new String(junkVal);
        numReversed = obStr.split("");
        actnumber = numReversed.reverse();
        if (Number(junkVal) > 0) {
            //do nothing
        }
        else if (Number(junkVal) == 0) {
            //document.getElementById('container').innerHTML = obStr + '' + 'Rupees Zero Only';
            return 'Rupees Zero Only';
        }
        else {
            alertbox('wrong Number cannot be converted');
            return false;
        }

        if (actnumber.length > 9) {
            alertbox('Oops!!!! the Number is too big to covertes');
            return false;
        }

        var iWords = ["Zero", " One", " Two", " Three", " Four", " Five", " Six", " Seven", " Eight", " Nine"];
        var ePlace = ['Ten', ' Eleven', ' Twelve', ' Thirteen', ' Fourteen', ' Fifteen', ' Sixteen', ' Seventeen', ' Eighteen', ' Nineteen'];
        var tensPlace = ['dummy', ' Ten', ' Twenty', ' Thirty', ' Forty', ' Fifty', ' Sixty', ' Seventy', ' Eighty', ' Ninety'];

        var iWordsLength = numReversed.length;
        var totalWords = "";
        var inWords = new Array();
        var finalWord = "";
        j = 0;
        for (i = 0; i < iWordsLength; i++) {
            switch (i) {
                case 0:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + ' Only';
                    break;
                case 1:
                    tens_complication();
                    break;
                case 2:
                    if (actnumber[i] == 0) {
                        inWords[j] = '';
                    }
                    else if (actnumber[i - 1] != 0 && actnumber[i - 2] != 0) {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred and';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred';
                    }
                    break;
                case 3:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Thousand";
                    }
                    break;
                case 4:
                    tens_complication();
                    break;
                case 5:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Lakh";
                    }
                    break;
                case 6:
                    tens_complication();
                    break;
                case 7:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + " Crore";
                    break;
                case 8:
                    tens_complication();
                    break;
                default:
                    break;
            }
            j++;
        }

        function tens_complication() {
            if (actnumber[i] == 0) {
                inWords[j] = '';
            }
            else if (actnumber[i] == 1) {
                inWords[j] = ePlace[actnumber[i - 1]];
            }
            else {
                inWords[j] = tensPlace[actnumber[i]];
            }
        }
        inWords.reverse();
        for (i = 0; i < inWords.length; i++) {
            finalWord += inWords[i];
        }
        // obStr + '  '+ finalWord;
        return finalWord;
    }
</script>

<script type="text/javascript">
    function CalculateItemWiseAmount(count, type) {
        var packandforwd = (+document.getElementById("InwardFromSupplierDetails_PackAndForwd").value);
        if (type == "rps") {
            document.getElementById("discountType").value = "rps";
        }
        else if (type == "percent") {
            document.getElementById("discountType").value = "percent"
        }
        if (packandforwd != 0 || packandforwd != "") {
            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var quantity = "quantity" + i;
                var rate = "rate" + i;
                var amount = "amount" + i;
                var discountpercent = "discountpercent" + i;
                var discountrps = "discountrps" + i;
                var amountvalue = "amountvalue" + i;
                var unit = "unit" + i;
                if (document.getElementById(quantity) != null) {
                    var percent = (+document.getElementById(discountpercent).value) / 100;
                    var rupees = (+document.getElementById(discountrps).value);
                    var roundupqty = (+document.getElementById(quantity).value);
                    document.getElementById(quantity).value = roundupqty;
                    var calculatedvalue = 0;

                    if ($("#" + unit).text() == "Dozens") {
                        calculatedvalue = ((+document.getElementById(quantity).value) * 12) * (+document.getElementById(rate).value);
                    }
                    else {
                        calculatedvalue = (+document.getElementById(quantity).value) * (+document.getElementById(rate).value);
                    }

                    var discounttype = document.getElementById("discountType").value;
                    if (roundupqty == 0 || (+document.getElementById(rate).value) == 0) {
                        document.getElementById(discountpercent).value = "0";
                        document.getElementById(discountrps).value = "0.00";
                    }
                    else if (discounttype == "percent") {
                        if (percent != 0) {
                            var valueafterdiscount = calculatedvalue * percent;
                            document.getElementById(discountrps).value = valueafterdiscount.toFixed(2);
                            calculatedvalue -= valueafterdiscount;

                        }
                        else { document.getElementById(discountrps).value = "0.00"; }
                    }
                    else {
                        if (rupees != 0) {
                            var valueafterdiscount = rupees / calculatedvalue * 100;
                            document.getElementById(discountpercent).value = valueafterdiscount.toFixed(1);
                            calculatedvalue -= rupees;
                        }
                        else { document.getElementById(discountpercent).value = 0; }
                    }

                    document.getElementById(amountvalue).value = calculatedvalue.toFixed(2);
                    document.getElementById(amount).innerHTML = addCommas(calculatedvalue.toFixed(2));
                }
            }

            var totalamount = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            document.getElementById("Total_Amount").innerHTML = addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);

            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                var amountvalue = "amountvalue" + i;
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proportionateamount = "proportionatetaxamount" + i;
                if (document.getElementById(amount) != null) {
                    var propotaxpercent = (+removeCommas(document.getElementById(amount).innerHTML)) / (+document.getElementById("Total_Amount_Value").value);
                    document.getElementById(proportionate).innerHTML = (propotaxpercent * 100).toFixed(2);
                    document.getElementById(proportionatetaxvalue).value = (propotaxpercent * 100).toFixed(2);
                    var packandforwdpropoamount = propotaxpercent * packandforwd;
                    document.getElementById(proportionateamount).value = packandforwdpropoamount.toFixed(2);
                    if (document.getElementById(proportionate).innerHTML.toString() == "NaN") {
                        document.getElementById(proportionate).innerHTML = "0";
                    }
                    CalculateTaxSummary(i);
                }
            }

            totalamount += packandforwd;
            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }
            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + addCommas(totalamount.toFixed(2));
                document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = addCommas(totalamount.toFixed(2));
                document.getElementById("In_Words").innerHTML = NumberToWords();
            }
        }
        else {
            var proportionatecount = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= proportionatecount; i++) {
                var proportionate = "proportionatetax" + i;
                var proportionatetaxvalue = "proportionatetaxvalue" + i;
                var proporamount = "proportionatetaxamount" + i;
                if (document.getElementById(proportionate) != null) {
                    document.getElementById(proportionate).innerHTML = "0";
                    document.getElementById(proportionatetaxvalue).value = 0;
                    document.getElementById(proporamount).value = 0;
                }
            }

            var quantity = "quantity" + count;
            var rate = "rate" + count;
            var amount = "amount" + count;
            var discountpercent = "discountpercent" + count;
            var discountrps = "discountrps" + count;
            var amountvalue = "amountvalue" + count;
            var unit = "unit" + count;
            var totalamount = 0;
            if (document.getElementById(quantity) != null) {
                var percent = (+document.getElementById(discountpercent).value) / 100;
                var rupees = (+document.getElementById(discountrps).value);
                var roundupqty = (+document.getElementById(quantity).value);
                document.getElementById(quantity).value = roundupqty;
                var calculatedvalue = 0;

                if ($("#" + unit).text() == "Dozens") {
                    calculatedvalue = ((+document.getElementById(quantity).value) * 12) * (+document.getElementById(rate).value);
                }
                else {
                    calculatedvalue = (+document.getElementById(quantity).value) * (+document.getElementById(rate).value);
                }

                var discounttype = document.getElementById("discountType").value;
                if (roundupqty == 0 || (+document.getElementById(rate).value) == 0) {
                    document.getElementById(discountpercent).value = "0";
                    document.getElementById(discountrps).value = "0.00";
                }
                else if (discounttype == "percent") {
                    if (percent != 0) {
                        var valueafterdiscount = calculatedvalue * percent;
                        document.getElementById(discountrps).value = valueafterdiscount.toFixed(2);
                        calculatedvalue -= valueafterdiscount;

                    }
                    else { document.getElementById(discountrps).value = "0.00"; }
                }
                else {
                    if (rupees != 0) {
                        var valueafterdiscount = rupees / calculatedvalue * 100;
                        document.getElementById(discountpercent).value = valueafterdiscount.toFixed(1);
                        calculatedvalue -= rupees;
                    }
                    else { document.getElementById(discountpercent).value = 0; }
                }

                document.getElementById(amountvalue).value = calculatedvalue.toFixed(2);
                document.getElementById(amount).innerHTML = addCommas(calculatedvalue.toFixed(2));
            }

            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var amount = "amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            document.getElementById("Total_Amount").innerHTML = addCommas(totalamount.toFixed(2));
            document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
            CalculateTaxSummary(rowid);

            var totaltaxamt = 0;
            var TaxCount = (+document.getElementById("ItemTaxCount").value);
            if (+($("#ItemTaxNumber1").val()) != 0) {
                for (var i = 1; i <= TaxCount; i++) {
                    var addedtaxamount = "AddedTaxAmount" + i;
                    totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                }
                document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
                document.getElementById("TotalTaxAmountValue").value = totaltaxamt.toFixed(2);
            }
            totalamount += totaltaxamt;
            totalamount = Math.round(totalamount.toFixed(2));
            if (totalamount < 0) {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = "-" + addCommas(totalamount.toFixed(2));
                document.getElementById("In_Words").innerHTML = NumberToWords();
            }
            else {
                document.getElementById("Grand_Total_Value").value = totalamount.toFixed(2);
                document.getElementById("Grand_Total").innerHTML = addCommas(totalamount.toFixed(2));
                document.getElementById("In_Words").innerHTML = NumberToWords();
            }

        }

        var rowid = document.getElementById("hdnRowCount").value;
        var previtemCode = "itemCode" + rowid;
        var prevdescription = "description" + rowid;
        var prevquantity = "quantity" + rowid;
        var prevunit = "unit" + rowid;
        var prevdesign = "design" + rowid;
        var prevdiscountpercent = "discountpercent" + rowid;
        if (document.getElementById(previtemCode) != null) {
            document.getElementById(previtemCode).disabled = false;
            document.getElementById(prevdescription).disabled = false;
            document.getElementById(prevquantity).disabled = false;
            document.getElementById(prevdiscountpercent).disabled = false;
            document.getElementById(prevdesign).disabled = false;
        }
    }
</script>

<script type="text/javascript">
    function CalculateTaxSummary(rowid) {
        var TaxCount = document.getElementById("ItemTaxCount").value;
        for (var i = 1; i <= TaxCount; i++) {
            var TotalTaxAmount = 0;
            var itemtaxno = "ItemTaxNumber" + i;
            var addedtaxamount = "AddedTaxAmount" + i;
            var addedtaxamounthdn = "AddedTaxAmounthdn" + i;
            var addedamount = "AddedAmount" + i;
            var addedamounthdn = "AddedAmounthdn" + i;
            for (var j = 1; j <= rowid; j++) {
                var itemtaxvalue = "ItemTaxValue" + j;
                var amount = "amount" + j;
                var proporamount = "proportionatetaxamount" + j;
                if (document.getElementById(amount) != null) {
                    if ($("#" + itemtaxno).val() == $("#" + itemtaxvalue).val()) {
                        TotalTaxAmount = (+TotalTaxAmount) + (+removeCommas(document.getElementById(amount).innerHTML)) + (+document.getElementById(proporamount).value);
                    }
                }
            }
            document.getElementById(addedamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedamounthdn).value = TotalTaxAmount.toFixed(2);
            TotalTaxAmount = TotalTaxAmount * (+document.getElementById(itemtaxno).value / 100);
            document.getElementById(addedtaxamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedtaxamounthdn).value = TotalTaxAmount.toFixed(2);
        }
    }
</script>

<style type="text/css">
    .CenterText {
        text-align: center;
        width: 100%;
    }
</style>

<script type="text/javascript">
    function AllowNumbers(key) {
        var keycode = (key.which) ? key.which : key.keyCode;
        //comparing pressed keycodes
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
    }
    function AllowDecimal(key, rowid) {
        var numbertype = $("#numberType" + rowid).val();
        var quantity = $("#quantity" + rowid).val();
        var pointFoundCount = 0;
        for (var i = 0; i <= quantity.length; i++) {
            if (quantity[i] == '.') {
                pointFoundCount++;
            }
        }

        var pointposition = quantity.indexOf(".");
        var digitupto = 0;
        if (pointposition != -1) {
            digitupto = quantity.substr(pointposition, quantity.length).length;
        }

        var keycode = (key.which) ? key.which : key.keyCode;
        //comparing pressed keycodes
        if (numbertype == 'Whole') { //if unit type is whole number then don't allow point
            if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                return false;
            }
        }
        else if (keycode == 46) { //if decimal point is inserted
            if (pointFoundCount > 0 && pointFoundCount < 2) { // more than one decimal point is inserted then don't allow to insert it
                return false;
            }
        }
        else if (digitupto != 0) { // if unit type is decimal then wait for decimal point to be insert then execute this condition 
            if (numbertype == '2Digit') { // if unit type is 2 digit the then allow 2 digits after decimal not the characters in between
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 3) {
                    return false;
                }
            }
            else { // if unit type is 2 digit the then allow 3 digits after decimal not the characters in between
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 4) {
                    return false;
                }
            }
        }
        else { //don't allow any decimal point or character until first digit occurs
            if (quantity.length == 0) // if first digit is point in quantity field then don't allow it and characters too
            {
                if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
            else { //don't allow any character until the above else if condition meets
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
        }
    }
</script>

<script type="text/javascript">
    $(function () {
        $("#Submit").click(function () {
            if ($("#InwardFromSupplierDetails_ChallanNo").val() == "" && $("#InwardFromSupplierDetails_BillNo").val() == "") {
                alertbox("Please Fill The Bill No Or Challan No");
                validationcounter++;
                return false;
            }
            if ($("#InwardFromSupplierDetails_SupplierName").val() == "" || $("#ddltypeofmode").val() == "" || $("#ddltransportnames").val() == "" || $("#PurchaseOrderData_DelDate").val() == "") {
                validationcounter++;
            }

            if (document.getElementById("ddlgodownnames") != null) {
                document.getElementById("ddlgodownnames").disabled = false;
            }

            if (document.getElementById("shopname") != null) {
                document.getElementById("shopname").disabled = false;
            }

            if ($("#InwardFromSupplierDetails_ChallanNo").val() != "") { //if challan no field is not empty then call alert
                if ($("#InwardFromSupplierDetails_ChallanDate").val() == "") {
                    alertbox("Please Fill The Challan Date");
                    validationcounter++;
                    return false;
                }
            }

            if ($("#InwardFromSupplierDetails_BillNo").val() != "") { //if bill no field is not empty then call alert
                if ($("#InwardFromSupplierDetails_BillDate").val() == "") {
                    alertbox("Please Fill The Bill Date");
                    validationcounter++;
                    return false;
                }
            }

            var validationcounter = 0;
            var rowid = document.getElementById("hdnRowCount").value;
            var itemCode = "itemCode" + rowid;
            var quantity = "quantity" + rowid;
            var design = "design" + rowid;
            var rate = "rate" + rowid;
            if (document.getElementById("ddlgodownnames") != null) {
                if ($("#ddlgodownnames").val() != "") {
                    if ($("#ddlgodownaddresses").val() == "") {
                        alertbox("Please Select Godown Area");
                        validationcounter++;
                        return false;
                    }
                }
                else {
                    alertbox("Please Select Godown Name");
                    validationcounter++;
                    return false;
                }
            }
            else if ($("#shopname").val() == "") {
                alertbox("Please Select Shop Name");
                validationcounter++;
                return false;
            }

            if (document.getElementById(itemCode) != null) {
                if ($("#" + itemCode).val() == "") {
                    alertbox("Please Select The Item");
                    validationcounter++;
                    return false;
                }
                else if ($("#" + quantity).val() == "" || (+$("#" + quantity).val()) == 0) {
                    alertbox("Please Fill The Quantity");
                    validationcounter++;
                    return false;
                }
                    //else if ($("#" + design).val() == "") {
                    //    alertbox("Please Select The Design");
                    //    validationcounter++;
                    //    return false;
                    //}
                else if ($("#" + rate).val() == "" || (+$("#" + rate).val()) == 0) {
                    alertbox("Please Fill The Rate");
                    validationcounter++;
                    return false;
                }
                else {
                    document.getElementById("InwardFromSupplierDetails_SupplierName").disabled = false;
                    if (document.getElementById("formtypeid").style.display == "inline") {
                        document.getElementById("ddlformtypes").disabled = false;
                    }
                    for (var i = 1; i <= rowid; i++) {
                        var previtemCode = "itemCode" + i;
                        var prevdescription = "description" + i;
                        var prevquantity = "quantity" + i;
                        var prevdesign = "design" + i;
                        var prevunit = "unit" + i;
                        var prevrate = "rate" + i;
                        var prevdiscountpercent = "discountpercent" + i;
                        var prevdiscountrps = "discountrps" + i;
                        if (document.getElementById(previtemCode) != null) {
                            document.getElementById(previtemCode).disabled = false;
                            document.getElementById(prevdescription).disabled = false;
                            document.getElementById(prevquantity).disabled = false;
                            document.getElementById("InwardFromSupplierDetails_TotalReceivedQuantity").value = +(document.getElementById("InwardFromSupplierDetails_TotalReceivedQuantity").value) + +(document.getElementById(prevquantity).value);
                            document.getElementById(prevdesign).disabled = false;
                            document.getElementById(prevunit).disabled = false;
                            document.getElementById(prevrate).disabled = false;
                            document.getElementById(prevdiscountpercent).disabled = false;
                            document.getElementById(prevdiscountrps).disabled = false;
                        }
                    }
                }
            }
            else {
                var allitemsdeleted = 0;
                document.getElementById("InwardFromSupplierDetails_SupplierName").disabled = false;
                if (document.getElementById("formtypeid").style.display == "inline") {
                    document.getElementById("ddlformtypes").disabled = false;
                }
                for (var i = 1; i <= rowid; i++) {
                    var previtemCode = "itemCode" + i;
                    var prevdescription = "description" + i;
                    var prevquantity = "quantity" + i;
                    var prevdesign = "design" + i;
                    var prevunit = "unit" + i;
                    var prevrate = "rate" + i;
                    var prevdiscountpercent = "discountpercent" + i;
                    var prevdiscountrps = "discountrps" + i;
                    if (document.getElementById(previtemCode) != null) {
                        document.getElementById(previtemCode).disabled = false;
                        document.getElementById(prevdescription).disabled = false;
                        document.getElementById(prevquantity).disabled = false;
                        document.getElementById("InwardFromSupplierDetails_TotalReceivedQuantity").value = +(document.getElementById("InwardFromSupplierDetails_TotalReceivedQuantity").value) + +(document.getElementById(prevquantity).value);
                        document.getElementById(prevdesign).disabled = false;
                        document.getElementById(prevunit).disabled = false;
                        document.getElementById(prevrate).disabled = false;
                        document.getElementById(prevdiscountpercent).disabled = false;
                        document.getElementById(prevdiscountrps).disabled = false;
                    }
                    else { allitemsdeleted++; }
                }
                if (allitemsdeleted == rowid) {
                    alertbox("Please Insert At Least One Item");
                    validationcounter++;
                    return false;
                }
            }
            if (validationcounter == 0) {
                setTimeout(function () {
                    document.getElementById("Submit").disabled = true;
                }, 100);
            }
        });
    });
</script>

<script>
    $("#shopname").change(function () {
        var name = $(this).val();
        if (name != "") {
            if (document.getElementById("ddlgodownnames") != null) {
                document.getElementById("ddlgodownnames").disabled = true;
            }
            document.getElementById("ShopInfo").style.display = "inline";
            $.getJSON("/Shop/GetShopDetailsByName", { Code: name }, function (data) {
                $("#ShopPerson").text(data.EmpName);
                $("#ShopContact").text(data.ShopContactNo);
                $("#ShopEmail").text(data.ShopEmail);

                $("#InwardFromSupplierDetails_ShopContactPerson").val(data.EmpName);
                $("#InwardFromSupplierDetails_ShopContactNo").val(data.ShopContactNo);
                $("#InwardFromSupplierDetails_ShopEmail").val(data.ShopEmail);
                $("#InwardFromSupplierDetails_ShopName").val(data.ShopName);
                $("#InwardFromSupplierDetails_ReceivedAt").val(data.ShopAddress);

            });
        }
        else {
            if (document.getElementById("ddlgodownnames") != null) {
                document.getElementById("ddlgodownnames").disabled = false;
            }
            document.getElementById("ShopInfo").style.display = "none";
        }
    });
</script>


<script type="text/javascript">
    function PutTheDiscountType(type) {
        document.getElementById("discountType").value = type;
    }
</script>

<script type="text/javascript">
    function CalculatePackAndForwd() {
        var rowid = document.getElementById("hdnRowCount").value;
        var packandforwd = (+document.getElementById("InwardFromSupplierDetails_PackAndForwd").value);
        for (var i = 1; i <= rowid; i++) {
            CalculateItemWiseAmount(i, '');
        }
    }
</script>

<script type="text/javascript">
    $(function () {
        $("#NonInvButton").click(function () {
            if ($("#InwardFromSupplierDetails_SupplierName").val() != "") {
                var noninvrowid = document.getElementById("hdnRowCount").value;
                //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                var validationcounter = 0;
                for (var i = 1; i <= noninvrowid; i++) {
                    var previtemCode = "itemCode" + i;
                    var prevdescription = "description" + i;
                    var prevquantity = "quantity" + i;
                    var prevdesign = "design" + i;
                    var prevrate = "rate" + i;
                    var prevdiscountpercent = "discountpercent" + i;
                    var prevdiscountrps = "discountrps" + i;
                    //If Row was Not DELETED
                    if (document.getElementById(previtemCode) != null) {
                        //If Required Fields are Empty of Previous Row
                        if ($("#" + previtemCode).val() == "") {
                            alertbox("Please Select The Item");
                            validationcounter++;
                        }
                        else if ($("#" + prevquantity).val() == "" || (+$("#" + prevquantity).val()) == 0) {
                            alertbox("Please Fill The Quantity");
                            validationcounter++;
                        }
                            //else if ($("#" + prevdesign).val() == "") {
                            //    alertbox("Please Select The Design");
                            //    validationcounter++;
                            //}
                        else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                            alertbox("Please Fill The Rate");
                            validationcounter++;
                        }
                        else {
                            if (document.getElementById(previtemCode).disabled != true) {
                                document.getElementById(previtemCode).disabled = true;
                                document.getElementById(prevdescription).disabled = true;
                                document.getElementById(prevquantity).disabled = true;
                                document.getElementById(prevdesign).disabled = true;
                                document.getElementById(prevrate).disabled = true;
                                document.getElementById(prevdiscountpercent).disabled = true;
                                document.getElementById(prevdiscountrps).disabled = true;
                            }
                        }
                    }
                }

                if (validationcounter == 0) {
                    noninvrowid = +noninvrowid + 1;
                    var row = "row" + noninvrowid;
                    var subcat = "SubCat" + noninvrowid;
                    var ItemType = "ItemType" + noninvrowid;
                    var noninvitem = "itemCode" + noninvrowid;
                    var nondescription = "description" + noninvrowid;
                    var noninvcolor = "color" + noninvrowid;
                    var noninvrate = "rate" + noninvrowid;
                    var noninvmrp = "MRP" + noninvrowid;
                    var noninvsellingprice = "sellingprice" + noninvrowid;
                    var noninvquantity = "quantity" + noninvrowid;
                    var noninvdisper = "discountpercent" + noninvrowid;
                    var noninvdesignlist = "designlist" + noninvrowid;
                    var noninvdisrs = "discountrps" + noninvrowid;
                    var noninvunit = "unit" + noninvrowid;
                    var noninvamount = "amount" + noninvrowid;
                    var noninvitemtax = "ItemTax" + noninvrowid;
                    var noninvproportionatetax = "proportionatetax" + noninvrowid;
                    var nondesignlist = "designlist" + noninvrowid;

                    var nondesign = document.createElement("SELECT");

                    var noninvitemname = "itemName" + noninvrowid;
                    var noninvdesignname = "designName" + noninvrowid;
                    var noninvcolorvalue = "colorvalue" + noninvrowid;
                    var noninvmaterialvalue = "materialvalue" + noninvrowid;
                    var noninvbrandvalue = "brandvalue" + noninvrowid;
                    var noninvsizevalue = "sizevalue" + noninvrowid;
                    var noninvunitvalue = "unitvalue" + noninvrowid;
                    var noninvnumbertype = "numberType" + noninvrowid;
                    var noninvamountvalue = "amountvalue" + noninvrowid;
                    var noninvitemtaxvalue = "ItemTaxValue" + noninvrowid;
                    var noninvproptaxvalue = "proportionatetaxvalue" + noninvrowid;
                    var noninvproptaxamount = "proportionatetaxamount" + noninvrowid;

                    nondesign.className = "form-control col-md-1 col-lg-1";
                    nondesign.id = "design" + noninvrowid;
                    nondesign.name = "design" + noninvrowid;
                    var option1 = document.createElement("option");
                    option1.text = "Select";
                    option1.value = "";
                    nondesign.appendChild(option1);
                    var unorderlist = $("#AddingRows");

                    unorderlist.append(
                        "<tr id='" + row + "'>" +
                        "<td style='text-align:center' class='col-lg-3 col-md-3'><select id='" + noninvitem + "' name='" + noninvitem + "' class='form-control'><option>Select Item</option></select><input type='hidden' id='" + noninvitemname + "' name='" + noninvitemname + "' /><input type='hidden' id='" + ItemType + "' name='" + ItemType + "' value='NonInventory' /><input type='hidden' id='" + subcat + "' name='" + subcat + "' /></td>" +
                        "<td style='text-align:center'><textarea class='form-control' style='text-align: center' id='" + nondescription + "' name='" + nondescription + "' placeholder='Description' ></textarea></td>" +
                        "<td style='text-align:center'><label id='" + noninvcolor + "' name='" + noninvcolor + "' style='font-weight:normal'>---</label><input type='hidden' id='" + noninvcolorvalue + "' name='" + noninvcolorvalue + "'/><input type='hidden' id='" + noninvbrandvalue + "' name='" + noninvbrandvalue + "' /><input type='hidden' id='" + noninvsizevalue + "' name='" + noninvsizevalue + "' /></td>" +
                        "<td><div id='" + nondesignlist + "' name='" + nondesignlist + "'></div><input type='hidden' id='" + noninvdesignname + "' name='" + noninvdesignname + "' /></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' name='" + noninvquantity + "' id='" + noninvquantity + "' autocomplete='off' onchange='CalculateItemWiseAmount(" + noninvrowid + ',' + '\"\"' + ")' style='text-align:center' placeholder='Qty' onkeypress='return AllowDecimal(event," + noninvrowid + ")' /></td>" +
                        "<td style='text-align:center'><label id='" + noninvunit + "' name='" + noninvunit + "' style='font-weight:normal'>---</label><input type='hidden' id='" + noninvunitvalue + "' name='" + noninvunitvalue + "'/><input type='hidden' name='" + noninvnumbertype + "' id='" + noninvnumbertype + "'><input type='hidden' id='" + noninvmaterialvalue + "' name='" + noninvmaterialvalue + "'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvrate + "' name='" + noninvrate + "' onchange='CalculateItemWiseAmount(" + noninvrowid + ',' + '\"\"' + ")' style='font-weight:normal; text-align:center;' placeholder='Rate' onkeypress='return AllowNumbers(event)' /><input type='hidden' id='" + noninvmrp + "' name='" + noninvmrp + "'/><input type='hidden' id='" + noninvsellingprice + "' name='" + noninvsellingprice + "'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvdisper + "' name='" + noninvdisper + "' style='font-weight:normal; text-align:center' placeholder='0%' onchange='CalculateItemWiseAmount(" + noninvrowid + ',' + '\"percent\"' + ")' onkeypress='return AllowNumbers(event)' /></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvdisrs + "' name='" + noninvdisrs + "' style='font-weight:normal; text-align:center' placeholder='0' onchange='CalculateItemWiseAmount(" + noninvrowid + ',' + '\"rps\"' + ")' onkeypress='return AllowNumbers(event)' /></td>" +
                        "<td style='text-align:right'><label id='" + noninvitemtax + "'>0</label><input type='hidden' id='" + noninvitemtaxvalue + "' name='" + noninvitemtaxvalue + "'/></td>" +
                        "<td style='text-align:right'><label  id='" + noninvamount + "'>0</label><input type='hidden' id='" + noninvamountvalue + "' name='" + noninvamountvalue + "'/></td>" +
                        "<td style='text-align:right'><label id='" + noninvproportionatetax + "' >0</label><input type='hidden' id='" + noninvproptaxvalue + "' name='" + noninvproptaxvalue + "' value='0' /><input type='hidden' id='" + noninvproptaxamount + "' name='" + noninvproptaxamount + "' value='0' /></td>" +
                        "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + noninvrowid + ")' class='fa fa-trash fa-lg' style='color:red;' /></td>"
                    );
                    var dropdown = document.getElementById(nondesignlist);
                    dropdown.appendChild(nondesign);

                    //FILL ITEM DDL ON ENTER CLICK EVENT
                    $.getJSON("/Inward/GetNonInventoryItems",
                    function (data) {
                        var select = $("#" + noninvitem);
                        select.empty();
                        select.append($('<option>', {
                            text: "Select Item",
                            value: "",
                        }));
                        $.each(data, function (index, itemdata) {
                            select.append($('<option>', {
                                text: itemdata.Text + " " + itemdata.Value,
                                value: itemdata.Value,
                            }));
                        });
                    });

                    var formtype = document.getElementById("ddlformtypes").value;
                    if (document.getElementById("formtypeid").style.display == "none") {
                        formtype = "";
                    }
                    else {
                        if (document.getElementById("ddlformtypes").value == "") {
                            formtype = "";
                        }
                        else {
                            formtype = $("#ddlformtypes").val();
                        }
                    }

                    //GET ITEM DETAILS FROM ITEMNAME
                    $("#" + noninvitem).change(function () {
                        $("#InwardFromSupplierDetails_SupplierName").attr("disabled", true);
                        $("#ddlformtypes").attr("disabled", true);
                        $("#YesRadioButton").attr("disabled", true);
                        $("#NoRadioButton").attr("disabled", true);
                        $("#Registered").attr("disabled", true);
                        $("#NonRegistered").attr("disabled", true);
                        var noninvitemcode = document.getElementById(noninvitem).value;
                        if (noninvitemcode != "") {

                            // EMPTY STOCK QUANTITY AND QUANTITY BECOZ IF WE CHANGE ITEM PREVIOUS ROWS STOCK QUANTITY AND QUANTITY IS EMPTY
                            var qty = "quantity" + noninvrowid;
                            var amt = "amount" + noninvrowid;
                            //IF ROW IS DELETED THEN QUANTITY WON'T GET ENABLED
                            if (document.getElementById(qty) != null) {
                                document.getElementById(qty).value = "";
                                document.getElementById(amt).innerHTML = "";
                            }

                            //IF PREVIOUS ROW IS ENABLED FOR CHANGE THE QUANTITY BUT WE SELECT AGAIN DDL THEN DISABLED THIS ENABLES QUANTITY
                            var validationcount = 0;
                            for (var i = 1; i < noninvrowid; i++) {
                                var prevquantity = "quantity" + i;
                                var prevrate = "rate" + i;
                                var prevdesign = "design" + i;
                                if (document.getElementById(prevquantity) != null) {
                                    if ((+$("#" + prevquantity).val()) == 0 || $("#" + prevquantity).val() == "") {
                                        alertbox("Please Fill The Quantity");
                                        validationcount++;
                                    }
                                    else if ($("#" + prevrate).val() == "" || (+$("#" + prevrate).val()) == 0) {
                                        alertbox("Please Fill The Rate");
                                        validationcount++;
                                    }
                                        //else if ($("#" + prevdesign).val() == "") {
                                        //    alertbox("Please Select The Design");
                                        //    validationcount++;
                                        //}
                                    else {
                                        if (document.getElementById(prevquantity) != null) {
                                            if (document.getElementById(prevquantity).disabled == false) {
                                                document.getElementById(prevquantity).disabled = true;
                                                document.getElementById("description" + i).disabled = true;
                                                document.getElementById(prevdesign).disabled = true;
                                                document.getElementById(prevrate).disabled = true;
                                                document.getElementById("discountpercent" + i).disabled = true;
                                                document.getElementById("discountrps" + i).disabled = true;
                                            }
                                        }
                                    }
                                }
                            }
                            if (validationcount == 0) {
                                $.getJSON("/Inward/GetInventoryAndNonInvItemDetailsFromItems", { itemname: noninvitemcode, State: $("#InwardFromSupplierDetails_SupplierState").val(), FormType: $("#ddlformtypes").val(), ItemType: "NonInventory" },
                                   function (data) {
                                       $("#" + subcat).val(data.subcat);
                                       $("#" + noninvitemname).val(data.itemName);
                                       $("#" + nondescription).val(data.description);
                                       $("#" + noninvcolor).text(data.colorCode);
                                       $("#" + noninvcolorvalue).val(data.colorCode);
                                       $("#" + noninvdesignname).val(data.designName);
                                       $("#" + noninvbrandvalue).val(data.brandName);
                                       $("#" + noninvsizevalue).val(data.size);
                                       $("#" + noninvunit).text(data.unit);
                                       $("#" + noninvunitvalue).val(data.unit);
                                       $("#" + noninvsellingprice).val(data.sellingprice);
                                       $("#" + noninvmrp).val(data.mrp);
                                       $("#" + noninvrate).val(data.costprice);
                                       $("#" + noninvmaterialvalue).val(data.typeOfMaterial);
                                       $("#" + noninvitemtax).text(data.taxPercent);
                                       $("#" + noninvitemtaxvalue).val(data.taxPercent);
                                       $("#" + noninvnumbertype).val(data.NumberType);
                                       $("#discountpercent" + noninvrowid).val("0");
                                       $("#discountrps" + noninvrowid).val("0.00");
                                       $("#ItemType" + noninvrowid).val("NonInventory");

                                       nondesign.options.length = 0;
                                       nondesign.className = "form-control col-md-1 col-lg-1";
                                       nondesign.id = "design" + noninvrowid;
                                       nondesign.name = "design" + noninvrowid;
                                       var option1 = document.createElement("option");
                                       option1.text = "Select";
                                       option1.value = "";
                                       nondesign.appendChild(option1);
                                       $.each(data.select, function (index, itemData) {
                                           var option1 = document.createElement("option");
                                           option1.value = itemData.Value;
                                           option1.text = itemData.Text;
                                           nondesign.appendChild(option1);

                                       });
                                       $("#" + nondesign.id).val(data.designCode).attr("selected", "selected");

                                       //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                                       //on each item which is applied
                                       var tax = data.taxPercent;
                                       if (tax != '0') {//if tax is '0' no need to add new taxnumber
                                           var taxcount = document.getElementById("ItemTaxCount").value;
                                           if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                               $("#ItemTaxNumber" + taxcount).val(tax);
                                               document.getElementById("AddTaxes").style.display = "inline";
                                               $("#AddedTax1").text(tax + "%");
                                           }
                                           else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                               var taxpresent = 0;
                                               for (var i = 1; i <= taxcount; i++) {
                                                   var taxno = "ItemTaxNumber" + i;
                                                   //if tax is already present then no need to make other taxnumbers
                                                   if (tax == $("#" + taxno).val()) {
                                                       taxpresent++;
                                                   }
                                               }
                                               if (taxpresent == 0) {
                                                   taxcount++;
                                                   var taxno = "ItemTaxNumber" + taxcount;
                                                   var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                                   $("#AllTaxesNumbersValue").append(data);
                                                   var addedtaxno = "AddedTax" + taxcount;
                                                   var addedtaxamount = "AddedTaxAmount" + taxcount;
                                                   var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                                   var addedamount = "AddedAmount" + taxcount;
                                                   var addedamounthdn = "AddedAmounthdn" + taxcount;
                                                   var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "' style='font-weight:normal'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                                   newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "' style='font-weight:normal'>" + tax + "%" + "</label></div>";
                                                   newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "' style='font-weight:normal'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                                   $("#AddTaxes").append(newlabel);
                                                   $("#ItemTaxCount").val(taxcount);
                                               }
                                           }
                                       }
                                       var CostPrice = +$("#" + noninvrate).val();
                                       var Tax = +$("#" + noninvitemtaxvalue).val();
                                       var MRP = +$("#" + noninvmrp).val();
                                       taxoncostprice = (CostPrice * Tax) / 100;
                                       var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                                       var Sellingprice = MRP - (MRP * +taxpercentoncostprice / 100);
                                       $("#sellingprice" + noninvrowid).val(Sellingprice.toFixed(2));
                                   });
                            }
                            else {
                                $("#itemCode" + noninvrowid).val("").attr("selected", true);
                            }
                        }
                        else { alertbox("Please Select Item First"); }
                    });
                    $("#hdnRowCount").val(noninvrowid);
                }
            }
            else { alertbox("Please Select SubCategory First") }
        });
    });

    function DisplayForm(type) {
        if (type == "yes") {
            document.getElementById("formtypeid").style.display = "inline";
            document.getElementById("ddlformtypes").style.display = "inline";
        }
        else {
            document.getElementById("formtypeid").style.display = "none";
            document.getElementById("ddlformtypes").style.display = "none";
            $("#ddlformtypes").val("").attr("selected", true);
        }
    }

    function CheckRegistered(type) {
        if (type == "yes") {
            if ($("#InwardFromSupplierDetails_SupplierState").val() != "Maharashtra") {
                $("#NoRadioButton").attr("disabled", false);
                $("#YesRadioButton").attr("disabled", false);
                $("#NoRadioButton").attr("checked", true);
                document.getElementById("InwardFromSupplierDetails_Registered").value = "Registered";
            }
            else {
                $("#NoRadioButton").attr("disabled", true);
                $("#YesRadioButton").attr("disabled", true);
                $("#NoRadioButton").prop("checked", true);
                document.getElementById("InwardFromSupplierDetails_Registered").value = "Registered";
                document.getElementById("formtypeid").style.display = "none";
                $("#ddlformtypes").val("").attr("selected", true);
            }
        }
        else {
            $("#NoRadioButton").attr("disabled", true);
            $("#YesRadioButton").attr("disabled", true);
            $("#NoRadioButton").prop("checked", true);
            document.getElementById("InwardFromSupplierDetails_Registered").value = "NonRegistered";
            document.getElementById("formtypeid").style.display = "none";
            $("#ddlformtypes").val("").attr("selected", true);
        }
    }

</script>

<script type="text/javascript">
    function GetSelectedItemsAndDesign(subcat, id, item, design, itemtype) {
        id = +id;
        $.getJSON("/PurchaseOrder/LoadItemAndDesignBySubCategory", { subcat: subcat, itemtype: itemtype },
        function (data) {
            var select = $("#itemCode" + id);
            select.empty();
            select.append($('<option/>', {
                value: "",
                text: "Select"
            }));
            $.each(data.items, function (index, itemData) {
                select.append($('<option/>', {
                    value: itemData.Value,
                    text: itemData.Text + " " + itemData.Value
                }));
            });
            $("#itemCode" + id).val(item).attr("selected", true);

            var select = $("#design" + id);
            select.empty();
            select.append($('<option/>', {
                value: "",
                text: "Select"
            }));
            $.each(data.designs, function (index, itemData) {
                select.append($('<option/>', {
                    value: itemData.Value,
                    text: itemData.Text
                }));
            });
            $("#design" + id).val(design).attr("selected", true);
        });
    }

    function GetItemsDetails(rowid) {
        var item = $("#itemCode" + rowid).val();
        var itemtype = $("#ItemType" + rowid).val();
        if (item != "") {
            $("#InwardFromSupplierDetails_SupplierName").attr("disabled", true);
            $("#ddlformtypes").attr("disabled", true);
            $("#YesRadioButton").attr("disabled", true);
            $("#NoRadioButton").attr("disabled", true);
            $("#Registered").attr("disabled", true);
            $("#NonRegistered").attr("disabled", true);

            var subcat = "SubCat" + rowid;
            var row = "row" + rowid;
            var itemCode = "itemCode" + rowid;
            var itemName = "itemName" + rowid;
            var barcode = "barcode" + rowid;
            var description = "description" + rowid;
            var materialvalue = "materialvalue" + rowid;
            var designName = "designName" + rowid;
            var color = "color" + rowid;
            var colorvalue = "colorvalue" + rowid;
            var brandvalue = "brandvalue" + rowid;
            var sizevalue = "sizevalue" + rowid;
            var quantity = "quantity" + rowid;
            var rate = "rate" + rowid;
            var mrp = "MRP" + rowid;
            var sellingprice = "sellingprice" + rowid;
            var discountrps = "discountrps" + rowid;
            var discountpercent = "discountpercent" + rowid;
            var amount = "amount" + rowid;
            var amountvalue = "amountvalue" + rowid;
            var itemtax = "ItemTax" + rowid;
            var itemtaxvalue = "ItemTaxValue" + rowid;
            var unit = "unit" + rowid;
            var unitvalue = "unitvalue" + rowid;
            var numbertype = "numberType" + rowid;
            var totalrows = document.getElementById("hdnRowCount").value;
            var currentrowid = 0;
            for (var i = 1 ; i <= totalrows; i++) {
                var previousitemname = "itemCode" + i;
                if (document.getElementById(previousitemname) != null) {
                    if (rowid != i) {
                        if ($("#" + itemCode).val() == $("#" + previousitemname).val()) {
                            currentrowid = i;
                            break;
                        }
                    }
                }
            }
            if (currentrowid == 0) {
                var formtype;
                if (document.getElementById("ddlformtypes").style.display == "none") {
                    formtype = "";
                }
                else { formtype = document.getElementById("ddlformtypes").value; }
                $.getJSON("/Inward/GetInventoryAndNonInvItemDetailsFromItems", { itemname: item, FormType: formtype, State: $("#InwardFromSupplierDetails_SupplierState").val(), ItemType: itemtype },
                         function (data) {
                             if (itemtype == "Inventory") {
                                 $("#" + subcat).val(data.subcat);
                                 $("#" + itemName).val(data.itemName);
                                 $("#" + description).val(data.description);
                                 $("#" + sellingprice).val(data.sellingprice);
                                 $("#" + mrp).val(data.mrp);
                                 $("#" + rate).val(data.costprice);
                                 $("#" + color).text(data.colorname);
                                 $("#" + materialvalue).val(data.typematerial);
                                 $("#" + colorvalue).val(data.colorname);
                                 $("#" + brandvalue).val(data.brandName);
                                 $("#" + sizevalue).val(data.size);
                                 $("#" + designName).val(data.designName);
                                 $("#" + unit).text(data.unit);
                                 $("#" + unitvalue).val(data.unit);
                                 $("#" + itemtax).text(data.taxPercent);
                                 $("#" + itemtaxvalue).val(data.taxPercent);
                                 $("#" + numbertype).val(data.NumberType);
                                 $("#" + discountpercent).val("0");
                                 $("#" + discountrps).val("0.00");
                                 $("#" + barcode).val(data.Barcode);
                             }
                             else {
                                 $("#" + subcat).val(data.subcat);
                                 $("#" + itemName).val(data.itemName);
                                 $("#" + description).val(data.description);
                                 $("#" + color).text(data.colorCode);
                                 $("#" + colorvalue).val(data.colorCode);
                                 $("#" + brandvalue).val(data.brandName);
                                 $("#" + sizevalue).val(data.size);
                                 $("#" + designName).val(data.designName);
                                 $("#" + unit).text(data.unit);
                                 $("#" + unitvalue).val(data.unit);
                                 $("#" + sellingprice).val(data.sellingprice);
                                 $("#" + mrp).val(data.mrp);
                                 $("#" + rate).val(data.costprice);
                                 $("#" + materialvalue).val(data.typeOfMaterial);
                                 $("#" + itemtax).text(data.taxPercent);
                                 $("#" + itemtaxvalue).val(data.taxPercent);
                                 $("#" + numbertype).val(data.NumberType);
                                 $("#" + discountpercent).val("0");
                                 $("#" + discountrps).val("0.00");
                                 $("#" + barcode).val("");
                             }

                             $("#" + quantity).val("");
                             CalculateItemWiseAmount(rowid, "");
                             var select = $("#design" + rowid);
                             select.empty();
                             select.append($('<option/>', {
                                 value: "",
                                 text: "Select"
                             }));
                             $.each(data.select, function (index, itemData) {
                                 select.append($('<option/>', {
                                     value: itemData.Value,
                                     text: itemData.Text
                                 }));
                             });
                             $("#design" + rowid).val(data.designCode).attr("selected", "selected");
                             if (itemtype == "Inventory") {
                                 EventTrigger(data.designCode);
                             }
                             //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                             //on each item which is applied
                             var tax = data.taxPercent;
                             if (tax != '0') {//if tax is '0' no need to add new taxnumber
                                 var taxcount = document.getElementById("ItemTaxCount").value;
                                 if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                     $("#ItemTaxNumber" + taxcount).val(tax);
                                     document.getElementById("AddTaxes").style.display = "inline";
                                     $("#AddedTax1").text(tax + "%");
                                 }
                                 else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                     var taxpresent = 0;
                                     for (var i = 1; i <= taxcount; i++) {
                                         var taxno = "ItemTaxNumber" + i;
                                         if (tax == $("#" + taxno).val()) {
                                             taxpresent++;
                                         }
                                     }
                                     if (taxpresent == 0) {
                                         taxcount++;
                                         var taxno = "ItemTaxNumber" + taxcount;
                                         var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                         $("#AllTaxesNumbersValue").append(data);
                                         var addedtaxno = "AddedTax" + taxcount;
                                         var addedtaxamount = "AddedTaxAmount" + taxcount;
                                         var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                         var addedamount = "AddedAmount" + taxcount;
                                         var addedamounthdn = "AddedAmounthdn" + taxcount;
                                         var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                         newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                         newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                         $("#AddTaxes").append(newlabel);
                                         $("#ItemTaxCount").val(taxcount);
                                     }
                                 }
                             }
                             var CostPrice = +$("#" + rate).val();
                             var Tax = +$("#" + itemtaxvalue).val();
                             var MRP = +$("#" + mrp).val();
                             taxoncostprice = (CostPrice * Tax) / 100;
                             var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                             var Sellingprice = MRP - (MRP * +taxpercentoncostprice / 100);
                             $("#sellingprice" + rowid).val(Sellingprice.toFixed(2));
                             function EventTrigger(designCode) {
                                 window.open("/Inward/PopUpPage?code=" + designCode, "_target", "width=1000,height=150,top=280px,left=200px");
                             }
                         });
            }
            else {
                alertbox("Item Name Already Selected Please change the quantity");
                document.getElementById("quantity" + rowid).value = "0";
                document.getElementById("amount" + rowid).innerHTML = 0.00;
                document.getElementById("proportionatetax" + rowid).innerHTML = 0;
                $("#description" + rowid).val("");
                $("#rate" + rowid).val(0.00);
                $("#color" + rowid).text("---");
                $("#unit" + rowid).text("---");
                $("#ItemTax" + rowid).text("0");
                var designselect = $("#design" + rowid);
                designselect.empty();
                designselect.append($('<option/>', {
                    value: "",
                    text: "Select"
                }));
                CalculateItemWiseAmount(rowid);
                CalculateTaxSummary(totalrows);
            }
        }
        else {
            alertbox("Please Select Item First");
            document.getElementById("quantity" + rowid).value = "0";
            document.getElementById("amount" + rowid).innerHTML = 0.00;
            document.getElementById("proportionatetax" + rowid).innerHTML = 0;
            $("#description" + rowid).val("");
            $("#rate" + rowid).val(0.00);
            $("#color" + rowid).text("---");
            $("#unit" + rowid).text("---");
            $("#ItemTax" + rowid).text("0");
            var designselect = $("#design" + rowid);
            designselect.empty();
            designselect.append($('<option/>', {
                value: "",
                text: "Select"
            }));
            CalculateItemWiseAmount(rowid);
            CalculateTaxSummary(totalrows);
        }
    }

    function openDesignPopUp(rowid, type) {
        var design = $("#design" + rowid).val();
        if (design != "") {
            $.getJSON("/Inward/GetDesignNameByCode", { code: $("#design" + rowid).val() },
                               function (data) {
                                   $("#designName" + rowid).val(data);
                               });
            if (type == "Inventory") {
                window.open("/Inward/PopUpPage?code=" + design, "_blank", "width=1000,height=150,top=280px,left=200px");
            }
        }
    }
</script>



@using (Html.BeginForm("InwardWithoutPOEditDetails", "Inward", FormMethod.Post))
{
    <input type="hidden" id="hdnRowCount" name="hdnRowCount" value="1" />
    <input type="hidden" id="AlreadyPresentItems" value="@Model.InwardItemsFromSupplierList.Count()" />
    <input type="hidden" id="discountType" /> 
    <input type="hidden" id="CalculateTaxForAlreadyPresentRows" value="Yes" />
    <div id="AllTaxesNumbersValue">
        @if (Model.PurchaseInventoryTaxList.Count() == 0)
        {
            <input type="hidden" id="ItemTaxCount" name="ItemTaxCount" value="1" />
            <input type="hidden" id="ItemTaxNumber1" name="ItemTaxNumber1" value="0" />
        }
        else
        {
            <input type="hidden" id="ItemTaxCount" name="ItemTaxCount" value="@Model.PurchaseInventoryTaxList.Count()" />
        }
    </div>
    <input type="hidden" id="transportname" value="@Model.InwardFromSupplierDetails.TransportName" />
    <input type="hidden" id="godowncode" value="@Model.InwardFromSupplierDetails.GodownCode" />
    <input type="hidden" id="godownarea" value="@Model.InwardFromSupplierDetails.GodownArea" />
    
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.InwardId)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierAddress)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierEmail)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.InwardNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.SupplierState)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.Registered)
    @Html.HiddenFor(model => model.PerformaCode)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.TransportContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ReceivedAt);
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownContactPerson)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownEmail)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.GodownArea)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopName)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopContactNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopContactPerson)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.ShopEmail)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.TotalReceivedQuantity)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.TotalRemainingQuantity)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.TotalExtraQuantity)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PaymentStatus)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PaymentAmount)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PaymentBalance)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.DebitNotesAmount)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PurchaseReturn)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.PurchaseReturnNo)
    @Html.HiddenFor(model => model.InwardFromSupplierDetails.Editable)
    <audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
        <source src="" type="audio/ogg" />
    </audio>
    <table style="border: 1px double; width: 100%">
        <tr>
            <td>
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="row">
                            <div style="height: 6px"></div>
                            <div class="col-md-4 col-lg-4">
                                <div class="col-md-12 col-lg-12">
                                    <label>Supplier Name:<i style="color: red">*</i></label>
                                    @Html.TextBoxFor(model => model.InwardFromSupplierDetails.SupplierName, new { @placeholder = "Supplier Name", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.InwardFromSupplierDetails.SupplierName, null, new { style = "color:red" })

                                    <div id="SupplierDetails">
                                        <label>State: &nbsp</label><label style="font-weight: normal" id="SupplierState">@Model.InwardFromSupplierDetails.SupplierState</label><br />
                                        <label>Dealer: &nbsp</label>
                                        <input type="radio" id="Registered" name="Registered" onclick="CheckRegistered('yes')" />
                                        Registered
                                                                            <input type="radio" id="NonRegistered" name="Registered" onclick="CheckRegistered('no')" />
                                        Non-Registered<br />
                                        @{
                                            <input type="hidden" id="suppliertype" value="@Model.InwardFromSupplierDetails.Registered" />
                                            <script>
                                                var suppliertype = document.getElementById("suppliertype").value;
                                                if (suppliertype == "Yes") {
                                                    $("#Registered").attr("checked", true);
                                                }
                                                else {
                                                    $("#NonRegistered").attr("checked", true);
                                                }
                                            </script>
                                        }
                                        @{ 
                                                                        if (Model.InwardFromSupplierDetails.FormType != null)
                                                                        {
                                            <script type="text/javascript">
                                                document.getElementById("YesRadioButton").checked = true;
                                                document.getElementById("formtypeid").style.display = "inline";
                                            </script> 
                                                                        }
                                                                        else
                                                                        {
                                            <script type="text/javascript">
                                                document.getElementById("NoRadioButton").checked = true;
                                                document.getElementById("formtypeid").style.display = "none";
                                            </script>
                                                        
                                                                            if (Model.InwardFromSupplierDetails.SupplierState == "Maharashtra")
                                                                            {
                                            <script type="text/javascript">
                                                document.getElementById("YesRadioButton").disabled = true;
                                                document.getElementById("NoRadioButton").disabled = true;
                                            </script>
                                                                            }
                                                                        }
                                        }
                                        <div class="row">
                                            <div class="col-md-5 col-lg-5">
                                                <label for="exampleInputSalesTax">Form Applicable</label><br />
                                                <input type="radio" id="YesRadioButton" name="RadioButton" onclick="DisplayForm('yes')" />Yes
                                                <input type="radio" id="NoRadioButton" name="RadioButton" onclick="DisplayForm('no')" />No                                   
                                            </div>
                                            <div id="formtypeid" class="col-md-6 col-lg-6">
                                                <div class="row">
                                                    <label for="exampleInputFormType">Form Type</label>
                                                    @Html.DropDownListFor(model => model.InwardFromSupplierDetails.FormType, new List<SelectListItem> { new SelectListItem { Text = "C-Form" }, new SelectListItem { Text = "E1-Form" }, new SelectListItem { Text = "E2-Form" } }, "Select Type", new { id = "ddlformtypes", @class = "form-control" })<br />
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div id="TransportDetails">
                                        <div style="min-width: 320px; height: 2px; background-color: lightgrey"></div>
                                        <div class="row">

                                            <div class="col-md-6 col-lg-6">
                                                <br />
                                                <label>Transport Mode <i style="color: red">*</i></label>
                                                @Html.DropDownListFor(model => model.InwardFromSupplierDetails.ModeOfTransport, new List<SelectListItem> { new SelectListItem { Text = "Road" }, new SelectListItem { Text = "Train" }, new SelectListItem { Text = "Air" } }, "Select Mode", new { id = "ddltypeofmode", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.InwardFromSupplierDetails.ModeOfTransport, null, new { style = "color:red" })
                                            </div>
                                            <br />
                                            <div class="col-md-6 col-lg-6">
                                                <label>Transport Name <i style="color: red">*</i></label>
                                                @Html.DropDownListFor(model => model.InwardFromSupplierDetails.TransportName, Enumerable.Empty<SelectListItem>(), "Select Name", new { id = "ddltransportnames", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.InwardFromSupplierDetails.TransportName, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4 col-lg-4">
                                <div style="float: left; min-height: 240px; width: 1px; background-color: GrayText;"></div>
                                <div class="col-md-11 col-lg-11">
                                    @{
                                                                        if (Model.InwardFromSupplierDetails.GodownCode != null)
                                                                        {
                                        <div class="row" id="Godown_Details">
                                            <div class="col-md-6 col-lg-6">
                                                <label>Godown Name</label>
                                                @Html.DropDownListFor(model => model.InwardFromSupplierDetails.GodownCode, new SelectList(Model.GodownMasterList, "GdCode", "GodownName"), "Godown Name", new { id = "ddlgodownnames", @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(model => model.InwardFromSupplierDetails.GodownCode, null, new { style = "color:red" })
                                            </div>
                                            <div class="col-md-6 col-lg-6" id="Godown_Addresses">
                                                <label>Godown Area </label>
                                                @Html.DropDownListFor(model => model.GodownAddressDetails.AreaName, Enumerable.Empty<SelectListItem>(), "Addresses", new { id = "ddlgodownaddresses", @class = "form-control" })
                                            </div>
                                        </div>
                                    
                                        <div id="Delivery_Details">
                                            <label>Delivery At: &nbsp</label><label id="Godown_Address" style="font-weight: normal">@Model.InwardFromSupplierDetails.ReceivedAt</label><br />
                                            <label>Contact Person: &nbsp</label><label id="Godown_Person" style="font-weight: normal">@Model.InwardFromSupplierDetails.GodownContactPerson</label><br />
                                            <label>Contact Number: &nbsp</label><label id="Godown_Contact" style="font-weight: normal">@Model.InwardFromSupplierDetails.GodownContactNo</label><br />
                                            <label>Email: &nbsp</label><label id="Godown_Email" style="font-weight: normal">@Model.InwardFromSupplierDetails.GodownEmail</label>
                                        </div>
                                                                        }

                                        <div id="ShopDetails">
                                            @if (Model.InwardFromSupplierDetails.ShopCode != null)
                                            {
                                                <div class="row">
                                                    <div class="col-md-8 col-lg-8">
                                                        <label>Shop Name</label>
                                                        @Html.DropDownListFor(model => model.InwardFromSupplierDetails.ShopCode, new SelectList(Model.ShopList, "ShopCode", "ShopName"), "Select Shop Name", new { id = "shopname", @class = "form-control", @disabled = "disabled" })
                                                        @Html.ValidationMessageFor(model => model.InwardFromSupplierDetails.ShopCode, null, new { style = "color:red" })
                                                    </div>
                                                    <br />
                                                </div>
                                                <div id="ShopInfo">
                                                    <label>Contact Person: &nbsp</label><label id="ShopPerson" style="font-weight: normal">@Model.InwardFromSupplierDetails.ShopContactPerson</label><br />
                                                    <label>No: &nbsp</label><label id="ShopContact" style="font-weight: normal">@Model.InwardFromSupplierDetails.ShopContactNo</label><br />
                                                    <label>Email: &nbsp</label><label id="ShopEmail" style="font-weight: normal">@Model.InwardFromSupplierDetails.ShopEmail</label>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>

                            <div class="col-md-4 col-lg-4">
                                <div style="float: left; min-height: 240px; width: 1px; background-color: GrayText;"></div>
                                <div class="row">
                                    <div class="col-md-11 col-lg-11">

                                        <table>
                                            <tr>
                                                <td style="width: 35%">
                                                    <div style="height: 2px"></div>
                                                    <label>Date</label>
                                                </td>
                                                <td>
                                                    @{
                                            var date = Convert.ToDateTime(Model.InwardFromSupplierDetails.InwardDate).ToShortDateString();
                                                    }
                                                    <label id="date" style="font-size: small; font-weight: normal">&nbsp @date</label></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div style="height: 2px"></div>
                                                    <label>Inward No</label>
                                                </td>
                                                <td>
                                                    <label id="pono" style="font-size: small; font-weight: normal">@Model.InwardFromSupplierDetails.InwardNo</label>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td colspan="2">
                                                    <table id="ReceivedAt" style="border-spacing: 0px; padding: 0px;" cellspacing="0" cellpadding="0">
                                                        <tr>
                                                            <td style="border-spacing: 0px; padding: 0px; width: 37%">
                                                                <div style="height: 8px"></div>
                                                                <label>Challan No</label>
                                                            </td>
                                                            <td>
                                                                <input type="text" name="InwardFromSupplierDetails.ChallanNo" id="InwardFromSupplierDetails_ChallanNo" style="text-align:center" placeholder="Challan No" value="@Model.InwardFromSupplierDetails.ChallanNo" class="form-control" autocomplete="off" />
                                                            </td>
                                                        </tr>
                                                        <tr style="height: 11px"></tr>
                                                        <tr>
                                                            <td style="border-spacing: 0px; padding: 0px;">
                                                                <div style="height: 8px"></div>
                                                                <label>Challan Date</label>
                                                            </td>
                                                            <td>
                                                                @{
                                            var challandate = string.Empty;
                                            if (Model.InwardFromSupplierDetails.ChallanDate != null)
                                            {
                                                challandate = Convert.ToDateTime(Model.InwardFromSupplierDetails.ChallanDate).ToShortDateString();
                                            }
                                                                    <input type="text"  id="InwardFromSupplierDetails_ChallanDate" name="InwardFromSupplierDetails.ChallanDate" style="text-align:center" placeholder="Challan Date" class="form-control" value="@challandate" onkeypress="return false" autocomplete="off"/>
                                                                }
                                                            </td>
                                                        </tr>
                                                        <tr style="height: 11px"></tr>
                                                        <tr>
                                                            <td style="border-spacing: 0px; padding: 0px;">
                                                                <div style="height: 8px"></div>
                                                                <label for="exampleInputname">Bill No.</label>
                                                            </td>
                                                            <td>
                                                                <input type="text" name="InwardFromSupplierDetails.BillNo" id="InwardFromSupplierDetails_BillNo" style="text-align:center" placeholder="Bill No" value="@Model.InwardFromSupplierDetails.BillNo" class="form-control" autocomplete="off" />
                                                            </td>
                                                        </tr>
                                                        <tr style="height: 11px"></tr>
                                                        <tr>
                                                            <td style="border-spacing: 0px; padding: 0px;">
                                                                <div style="height: 8px"></div>
                                                                <label for="exampleInputname">Bill Date </label>
                                                            </td>
                                                            @{
                                            var billdate = string.Empty;
                                            if (Model.InwardFromSupplierDetails.BillDate != null)
                                            {
                                                billdate = Convert.ToDateTime(Model.InwardFromSupplierDetails.BillDate).ToShortDateString();
                                            }
                                                                <td>
                                                                    <input type="text" name="InwardFromSupplierDetails.BillDate" id="InwardFromSupplierDetails_BillDate" style="text-align:center" placeholder="Bill Date" value="@billdate" class="form-control" onkeypress="return false" autocomplete="off"/>
                                                                </td>
                                                            }
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-12 col-md-12">
                                <table class="table" id="AddingRows" style="border-color: #d2d2d2; border: outset">
                                    <thead>
                                        <tr>
                                            <th class="col-md-2 col-lg-2">
                                                <label class="CenterText">Item<i style="color: red">*</i></label></th>
                                            <th class="col-md-2 col-lg-2">
                                                <label class="CenterText">Description</label></th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">Colour</label></th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">Design</label></th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">Qty<i style="color: red">*</i></label></th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">Unit</label></th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">
                                                    Rate<br />
                                                    (<i class="fa fa-rupee"></i>)<i style="color: red">*</i></label></th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">
                                                    Disc<br />
                                                    (%)</label>
                                            </th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">
                                                    Disc<br />
                                                    (<i class="fa fa-rupee"></i>)</label>
                                            </th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">
                                                    Tax<br />
                                                    (%)</label>
                                            </th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">
                                                    Amt<br />
                                                    (<i class="fa fa-rupee"></i>)</label></th>
                                            <th class="col-md-1 col-lg-1">
                                                <label class="CenterText">
                                                    PropTax<br />
                                                    (%)</label></th>
                                            <th class="col-md-1 col-lg-1"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model.InwardItemsFromSupplierList != null && Model.InwardItemsFromSupplierList.Any())
                                            {
                                                int count = 1;
                                                foreach (var data in Model.InwardItemsFromSupplierList)
                                                {
                                                    string row = "row" + count;
                                                    string quantity = "quantity" + count;
                                                    string subcat = "SubCat" + count;
                                                    string itemCode = "itemCode" + count;
                                                    string itemtype = "ItemType" + count;
                                                    string itemName = "itemName" + count;
                                                    string barcode = "barcode" + count;
                                                    string brandvalue = "brandvalue" + count;
                                                    string sizevalue = "sizevalue" + count;
                                                    string description = "description" + count;
                                                    string materialvalue = "materialvalue" + count;
                                                    string color = "color" + count;
                                                    string colorvalue = "colorvalue" + count;
                                                    string design = "design" + count;
                                                    string designName = "designName" + count;
                                                    string discountrps = "discountrps" + count;
                                                    string rate = "rate" + count;
                                                    string mrp = "MRP" + count;
                                                    string sellingprice = "sellingprice" + count;
                                                    string discountpercent = "discountpercent" + count;
                                                    string itemtax = "ItemTax" + count;
                                                    string itemtaxvalue = "ItemTaxValue" + count;
                                                    string amount = "amount" + count;
                                                    string amountvalue = "amountvalue" + count;
                                                    string unit = "unit" + count;
                                                    string unitvalue = "unitvalue" + count;
                                                    string numbertype = "numberType" + count;
                                                    string proportionatetax = "proportionatetax" + count;
                                                    string proportionatetaxamount = "proportionatetaxamount" + count;
                                                    string proportionatetaxvalue = "proportionatetaxvalue" + count;
                                        
                                            <tr id="@row">
                                                <input type="hidden" id="@subcat" name="@subcat" value="@data.SubCategory" />
                                                <td class="col-md-2 col-lg-2">
                                                    <select id="@itemCode" name="@itemCode" class="form-control" onchange="GetItemsDetails(@count)">
                                                        <option>Select Item</option>
                                                    </select>
                                                    <script type="text/javascript">
                                                        GetSelectedItemsAndDesign("@data.SubCategory", "@count", "@data.itemCode", "@data.Design", "@data.ItemType");
                                                    </script>
                                                    <input type="hidden" id="@itemName" name="@itemName" value="@data.Item" />
                                                    <input type="hidden" id="@itemtype" name="@itemtype" value="@data.ItemType" />
                                                    <input type="hidden" id="@barcode" name="@barcode" value="@data.Barcode" />
                                                    <input type="hidden" id="@brandvalue" name="@brandvalue" value="@data.Brand" />
                                                    <input type="hidden" id="@sizevalue" name="@sizevalue" value="@data.Size" />
                                                </td>
                                                <td class="col-md-2 col-lg-2">
                                                    <textarea id="@description" name="@description" class="form-control">@data.Description</textarea></td>
                                                <td class="col-md-1 col-lg-1">
                                                    <label id="@color" class="CenterText" style="font-weight: normal">@data.Color</label>
                                                    <input type="hidden" id="@materialvalue" name="@materialvalue" value="@data.Material" />
                                                    <input type="hidden" id="@colorvalue" name="@colorvalue" value="@data.Color" />
                                                </td>
                                                <td class="col-md-1 col-lg-1">
                                                    <select id="@design" class="form-control" name="@design" onchange="openDesignPopUp(@count,'@data.ItemType')">
                                                        <option value="@data.Design">@data.Design</option>
                                                    </select>
                                                    <input type="hidden" id="@designName" name="@designName" value="@data.DesignName" />
                                                </td>
                                                <td class="col-md-1 col-lg-1">
                                                    <input type="text" id="@quantity" name="@quantity" value="@data.ReceivedQuantity" autocomplete="off" class="form-control" style="text-align: center; width: 100%" onchange="CalculateItemWiseAmount(@count,'')" onkeypress="return AllowDecimal(event,@count)" /></td>
                                                <td class="col-md-1 col-lg-1">
                                                    <label id="@unit" class="CenterText" style="font-weight: normal">@data.Unit</label>
                                                    <input type="hidden" id="@unitvalue" name="@unitvalue" value="@data.Unit" />
                                                    <input type="hidden" id="@numbertype" name="@numbertype" value="@data.NumberType" />
                                                </td>
                                                <td class="col-md-1 col-lg-1">
                                                    @if (data.ItemType == "Inventory")
                                                    {
                                                        <input type="text" id="@rate" name="@rate" autocomplete="off" disabled="disabled" class="form-control" style="text-align: center; width: 100%" onchange="CalculateItemWiseAmount(@count,'')" onkeypress="return AllowNumbers(event)" value="@data.CostPrice"/>
                                                    }
                                                    else
                                                    {
                                                        <input type="text" id="@rate" name="@rate" autocomplete="off" class="form-control" style="text-align: center; width: 100%" onchange="CalculateItemWiseAmount(@count,'')" onkeypress="return AllowNumbers(event)" value="@data.CostPrice"/>
                                                    }
                                                    <input type="hidden" id="@mrp" name="@mrp" value="@Convert.ToDouble(data.MRP).ToString("#,###.00##")" style="text-align: right" />
                                                    <input type="hidden" id="@sellingprice" name="@sellingprice" value="@Convert.ToDouble(data.SellingPrice).ToString("#,###.00##")" style="text-align: right" />
                                                </td>
                                                <td class="col-md-1 col-lg-1">
                                                    <input type="text" id="@discountpercent" name="@discountpercent" autocomplete="off" class="form-control" style="text-align: center; width: 100%" onchange="CalculateItemWiseAmount(@count,'percent')" onkeypress="return AllowNumbers(event)" value="@data.Discount"/>
                                                </td>
                                                <td class="col-md-1 col-lg-1">
                                                    <input type="text" id="@discountrps" name="@discountrps" autocomplete="off" class="form-control" style="text-align: center; width: 100%" onchange="CalculateItemWiseAmount(@count,'rps')" onkeypress="return AllowNumbers(event)" value="@data.DiscountRPS" />
                                                </td>
                                                <td style="text-align: center">
                                                    <label id="@itemtax">@data.ItemTax</label><input type="hidden" id="@itemtaxvalue" name="@itemtaxvalue" value="@data.ItemTax" /></td>
                                                <td class="col-md-1 col-lg-1" style="text-align: right">
                                                    <label id="@amount">@Convert.ToDouble(data.Amount).ToString("#,###.00##")</label>
                                                    <input type="hidden" id="@amountvalue" name="@amountvalue" value="@Convert.ToDouble(data.Amount).ToString("#,###.00##")" style="text-align: right" />
                                                </td>
                                                <td class="col-md-1 col-lg-1" style="text-align: right">
                                                    <label id="@proportionatetax">@data.ProportionateTax</label>
                                                    <input type="hidden" id="@proportionatetaxvalue" name="@proportionatetaxvalue" value="@data.ProportionateTax" />
                                                    <input type="hidden" id="@proportionatetaxamount" name="@proportionatetaxamount" value="@data.ProportionateTaxAmt" />
                                                </td>
                                                <td>
                                                    <a href='#' onclick="DeleteRow(@count)" class='fa fa-trash fa-lg' style='color:red;' />
                                                </td>
                                            </tr>   
                                                    count++;
                                            <script>
                                                $("#hdnRowCount").val(@Model.InwardItemsFromSupplierList.Count());</script>
                                                }
                                            }
                                        }

                                    </tbody>
                                </table>
                                <button class="btn btn-link" id="NonInvButton" type="button" style="float: right; text-align: right; color: orangered; font-size: small;">Non-Inventory Item</button>
                                <div style="height: 4px"></div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12 col-lg-12">
                                <div class="col-md-5 col-lg-5">
                                    <div id="AddTaxes" style="display: none">
                                        <div class="row">
                                            <div class="col-lg-12 col-md-12">
                                                <label style="font-size: 14px">Tax Summary:</label>
                                            </div>
                                        </div>
                                        @{
                                            if (Model.PurchaseInventoryTaxList.Count() == 0)
                                            {
                                            <div class="row">
                                                <div class="col-md-3 col-lg-3">
                                                    <label id="AddedAmount1">0</label>
                                                    <input type="hidden" id="AddedAmounthdn1" name="AddedAmounthdn1" value="0" />
                                                </div>
                                                <div class="col-md-2 col-lg-2">
                                                    <label id="AddedTax1"></label>
                                                </div>
                                                <div class="col-md-7 col-lg-7">
                                                    <label id="AddedTaxAmount1">0</label>
                                                    <input type="hidden" id="AddedTaxAmounthdn1" name="AddedTaxAmounthdn1" value="0" />
                                                </div>
                                            </div>
                                            }
                                            else
                                            {
                                                int taxcount = 1;
                                                foreach (var tax in Model.PurchaseInventoryTaxList)
                                                {
                                                    string addedtax = "AddedTax" + taxcount;
                                                    string taxnumber = "ItemTaxNumber" + taxcount;
                                                    string addedtaxamount = "AddedTaxAmount" + taxcount;
                                                    string addedtaxhdn = "AddedTaxAmounthdn" + taxcount;
                                                    string addedamount = "AddedAmount" + taxcount;
                                                    string addedamounthdn = "AddedAmounthdn" + taxcount;
                                                    string itemtax = tax.Tax + "%";
                                            <div class="row">
                                                <div class="col-md-3 col-lg-3">
                                                    <label id="@addedamount">@tax.Amount</label>
                                                    <input type="hidden" id="@addedamounthdn" name="@addedamounthdn" value="@tax.Amount" />
                                                </div>
                                                <div class="col-md-2 col-lg-2">
                                                    <label id="@addedtax">@itemtax</label>
                                                    <input type="hidden" id="@taxnumber" name="@taxnumber" value="@tax.Tax" />
                                                </div>
                                                <div class="col-md-7 col-lg-7">
                                                    <label id="@addedtaxamount"><i class="fa fa-inr"></i>@tax.TaxAmount</label>
                                                    <input type="hidden" id="@addedtaxhdn" name="@addedtaxhdn" value="@tax.TaxAmount" />
                                                </div>
                                            </div>
                                                    taxcount++;
                                                }
                                            <script type="text/javascript">
                                                document.getElementById("AddTaxes").style.display = "inline";
                                            </script>
                                            }
                                        }
                                    </div>
                                </div>

                                <div class="col-md-7 col-lg-7">
                                    <div class="row">
                                        <div class="col-md-12 col-lg-12">
                                            <div class="col-md-3 col-lg-3"></div>
                                            <div class="col-md-5 col-lg-5">
                                                <label style="font-size: 14px;">Total Amount</label>
                                            </div>
                                            <div class="col-md-4 col-lg-4" style="text-align: right">
                                                <div class="row">
                                                    @{
                                            var totalamount = Convert.ToDouble(Model.InwardFromSupplierDetails.TotalAmount).ToString("#,###.00##");
                                                    }
                                                    <i class="fa fa-inr" style="font-size: 14px"></i>
                                                    <label id="Total_Amount" style="font-size: 14px">@totalamount</label>
                                                    <input type="hidden" id="Total_Amount_Value" name="Total_Amount_Value" value="@Model.InwardFromSupplierDetails.TotalAmount" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div style="height: 5px"></div>
                                    <div class="row">
                                        <div class="col-md-12 col-lg-12">
                                            <div class="col-md-3 col-lg-3"></div>
                                            <div class="col-md-5 col-lg-5">
                                                <label style="font-size: 14px;">Packing and Forwarding</label>
                                            </div>
                                            <div class="col-md-1 col-lg-1"></div>
                                            <div class="col-md-3 col-lg-3">
                                                <div class="row">
                                                    @Html.TextBoxFor(model => model.InwardFromSupplierDetails.PackAndForwd, new { @class = "form-control", @autocomplete = "off", @placeholder = "0", @style = "text-align:right", @onchange = "CalculatePackAndForwd()" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div style="height: 5px"></div>
                                    <div class="row">
                                        <div class="col-md-12 col-lg-12">
                                            <div class="col-md-3 col-lg-3"></div>
                                            <div class="col-md-5 col-lg-5">
                                                <label style="font-size: 14px;">Tax Amount</label>
                                            </div>
                                            <div class="col-md-4 col-lg-4" style="text-align: right">
                                                <div class="row">
                                                    @{
                                            var taxamount = Convert.ToDouble(Model.InwardFromSupplierDetails.TotalTaxAmount).ToString("#,###.00##");
                                                    }
                                                    <label id="TotalTaxAmount" style="font-size: 14px">@taxamount</label>
                                                    <input type="hidden" id="TotalTaxAmountValue" name="TotalTaxAmountValue" value="@Model.InwardFromSupplierDetails.TotalTaxAmount" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div style="width: 100%; height: 1px; background-color: lightgrey;"></div>

                        <div style="height: 5px"></div>

                        <div class="row">
                            <div class="col-md-12 col-lg-12">
                                <div class="col-md-5 col-lg-5"></div>
                                <div class="col-md-7 col-lg-7">
                                    <div class="col-md-3 col-lg-3"></div>
                                    <div class="col-md-5 col-lg-5">
                                        <label style="font-size: 14px;">Grand Total</label>
                                    </div>
                                    <div class="col-md-4 col-lg-4" style="text-align: right">
                                        <div class="row">
                                            @{
                                            var grandtotal = Convert.ToDouble(Model.InwardFromSupplierDetails.GrandTotal).ToString("#,###.00##");
                                            }
                                            <i class="fa fa-inr" style="font-size: 14px"></i>
                                            <label id="Grand_Total" style="font-size: 14px">@grandtotal</label>
                                            <input type="hidden" id="Grand_Total_Value" name="Grand_Total_Value" value="@Model.InwardFromSupplierDetails.GrandTotal" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12 col-lg-12">
                                <div class="col-md-2 col-lg-2">
                                    <label style="font-size: 14px">In Words</label>
                                </div>
                                <div class="col-md-5 col-lg-5">
                                    <label id="In_Words" style="font-size: 14px"></label>
                                </div>
                            </div>
                        </div>

                        <div style="width: 100%; height: 1px; background-color: lightgrey;"></div>
                        <div style="height: 5px"></div>
                        <div class="row">
                            <div class="col-md-12 col-lg-12 form-group">
                                <div class="col-md-1 col-lg-1">
                                    <label style="font-size: 14px">Narration:</label>
                                </div>
                                <div class="col-md-11 col-lg-11">
                                    @Html.TextBoxFor(model => model.InwardFromSupplierDetails.Narration, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
    <div style="height: 5px"></div>
    <input type="submit" id="Submit" value="Update" class="col-md-offset-6 col-lg-offset-6 btn btn-success" />
}