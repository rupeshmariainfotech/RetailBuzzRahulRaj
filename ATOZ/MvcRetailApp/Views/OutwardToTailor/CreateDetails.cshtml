@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "CreateDetails";
}

<!-- Meta, title, CSS, favicons, etc. -->
<meta charset="utf-8" />
<title>Retail Managment Software</title>
<meta name="keywords" content="Retail Software" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<!-- Font CSS  -->
<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700" />
<link href="~/Content/style.default.css" rel="stylesheet" />
<link href="~/Content/style.default.blue.css" rel="stylesheet" />
<!-- Core CSS  -->
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.min.css" />
<link rel="stylesheet" type="text/css" href="~/Content/sb-admin-2.css" />
<link rel="stylesheet" type="text/css" href="~/Content/metisMenu.min.css" />
<link rel="stylesheet" type="text/css" href="~/Content/font-awesome.css" />
<link rel="stylesheet" type="text/css" href="~/fonts/glyphicons.min.css" />

<!-- Plugin CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/fullcalendar.css" />
<link rel="stylesheet" type="text/css" href="~/Content/datatables.min.css" />

<!-- Theme CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/theme.css" />
<link rel="stylesheet" type="text/css" href="~/Content/pages.css" />
<link rel="stylesheet" type="text/css" href="~/Content/plugins.css" />
<link rel="stylesheet" type="text/css" href="~/Content/responsive.css" />

<!-- Demonstration CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/demo.css" />

<!-- Your Custom CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/custom.css" />

<!-- Favicon -->
<link rel="shortcut icon" href="~/Images/favicon.ico" />

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

<!-- Plugins - Via CDN -->
<script type="text/javascript" src="~/Scripts/jquery.flot.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.sparkline.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="~/Scripts/fullcalendar.min.js"></script>
<script type="text/javascript" src="~/Scripts/bootstrap.js"></script>


<script type="text/javascript" src="~/Scripts/jquery.scrollTo-1.4.3.1-min.js"></script>

<!-- Theme Javascript -->
<script type="text/javascript" src="~/Scripts/uniform.min.js"></script>
<script type="text/javascript" src="~/Scripts/main.js"></script>
<script type="text/javascript" src="~/Scripts/custom.js"></script>
<script type="text/javascript" src="~/Scripts/sb-admin-2.js"></script>
<script type="text/javascript" src="~/vendor/plugins/metisMenu/metisMenu.min.js"></script>

<link href="~/Content/customAlerts.css" rel="stylesheet" />
<script src="~/Scripts/bootbox.js"></script>

<script type="text/javascript">
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }

    function confirmbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone2.ogg';
        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('confirmClass');
        bootbox.confirm('<i class="fa fa-2x fa-question-circle"></i><br>' + message + '<hr>',
		 function (result) {
		     if (result) {
		         var id = document.getElementById("OutwardToTailorDetails_Id").value;
		         window.open("/OutwardToTailor/PrintOutwardToTailor?id=" + id, "_target", "width=770,height=842,top=200px,left=300px");
		     }
		     else {
		         window.location.assign("/OutwardToTailor/Create");
		     }
		 });
    }
</script>

<script>
    function addCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function removeCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, '');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }
    function NumberToWords() {
        var junkVal = (+removeCommas(document.getElementById('GrandTotal').innerHTML));
        junkVal = Math.floor(junkVal);
        var obStr = new String(junkVal);
        numReversed = obStr.split("");
        actnumber = numReversed.reverse();
        if (Number(junkVal) > 0) {
            //do nothing
        }
        else if (Number(junkVal) == 0) {
            //document.getElementById('container').innerHTML = obStr + '' + 'Rupees Zero Only';
            return 'Rupees Zero Only';
        }
        else {
            alertbox('wrong Number cannot be converted');
            return false;
        }

        if (actnumber.length > 9) {
            alertbox('Oops!!!! the Number is too big to covertes');
            return false;
        }

        var iWords = ["Zero", " One", " Two", " Three", " Four", " Five", " Six", " Seven", " Eight", " Nine"];
        var ePlace = ['Ten', ' Eleven', ' Twelve', ' Thirteen', ' Fourteen', ' Fifteen', ' Sixteen', ' Seventeen', ' Eighteen', ' Nineteen'];
        var tensPlace = ['dummy', ' Ten', ' Twenty', ' Thirty', ' Forty', ' Fifty', ' Sixty', ' Seventy', ' Eighty', ' Ninety'];

        var iWordsLength = numReversed.length;
        var totalWords = "";
        var inWords = new Array();
        var finalWord = "";
        j = 0;
        for (i = 0; i < iWordsLength; i++) {
            switch (i) {
                case 0:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + ' Only';
                    break;
                case 1:
                    tens_complication();
                    break;
                case 2:
                    if (actnumber[i] == 0) {
                        inWords[j] = '';
                    }
                    else if (actnumber[i - 1] != 0 && actnumber[i - 2] != 0) {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred and';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred';
                    }
                    break;
                case 3:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Thousand";
                    }
                    break;
                case 4:
                    tens_complication();
                    break;
                case 5:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Lakh";
                    }
                    break;
                case 6:
                    tens_complication();
                    break;
                case 7:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + " Crore";
                    break;
                case 8:
                    tens_complication();
                    break;
                default:
                    break;
            }
            j++;
        }

        function tens_complication() {
            if (actnumber[i] == 0) {
                inWords[j] = '';
            }
            else if (actnumber[i] == 1) {
                inWords[j] = ePlace[actnumber[i - 1]];
            }
            else {
                inWords[j] = tensPlace[actnumber[i]];
            }
        }
        inWords.reverse();
        for (i = 0; i < inWords.length; i++) {
            finalWord += inWords[i];
        }
        // obStr + '  '+ finalWord;
        return finalWord;
    }
</script>

<script>
    $(function () {
        $("#Print").click(function () {
            confirmbox("Do You Want To Print Outward To Tailor..");
        });
    });

</script>

@Html.HiddenFor(model => model.OutwardToTailorDetails.Id)
<!-- Start: Header -->
@Html.Partial("../Shared/Header")
<!-- End: Header -->
<!-- Start: Main -->
<section>
    <div class="mainwrapper">
        <!-- End: Sidebar -->
        @Html.Partial("../Shared/LeftMenu")
        <!-- Start: Content -->
        <div class="mainpanel">
            <div class="col-lg-12 col-md-12">
                <br />
                <h2>Outward To Tailor Details</h2>
                <audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
                    <source src="" type="audio/ogg" />
                </audio>
                <div class="col-lg-12 col-md-12">
                    <table style="border: 1px double; width: 100%">
                        <tr>
                            <td>
                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <div style="height: 10px"></div>
                                    <div class="col-lg-3 col-md-3 col-sm-3">
                                        <div class="row">
                                            <label style="font-size:14px">Tailor Name:</label>
                                        </div>
                                        <div class="row">
                                            @Html.DisplayFor(model => Model.OutwardToTailorDetails.TailorName)
                                        </div>
                                        <div class="row">
                                            <div style="height: 7px"></div>
                                        </div>
                                        <div class="row">
                                            <label style="font-size:14px">Client Name:</label>
                                        </div>
                                        <div class="row">
                                            @Html.DisplayFor(model => model.OutwardToTailorDetails.ClientName)
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-3">
                                        <div class="col-lg-12 col-md-12 col-sm-12">
                                            <div class="row">
                                                <label style="font-size:14px">Retail Bill No.</label>
                                            </div>
                                            <div class="row">
                                                @Html.DisplayFor(model => Model.OutwardToTailorDetails.RetailBills)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-3" style="border-right: 1px solid #999; height: 115px;">
                                        <div class="col-lg-12 col-md-12 col-sm-12">
                                            <div class="row">
                                                <label style="font-size:14px">Sales Bill No.</label>
                                            </div>
                                            <div class="row">
                                                @Html.DisplayFor(model => Model.OutwardToTailorDetails.SalesBills)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-3">
                                        <div class="col-lg-12 col-md-12 col-sm-12">
                                            <div class="row">
                                                <div class="col-lg-6 col-md-6">
                                                    <div class="row">
                                                        <label style="font-size: 14px;">Date</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-md-6">
                                                    <div class="row">
                                                        @Html.DisplayFor(model => Model.OutwardToTailorDetails.Date)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-6 col-md-6">
                                                    <div class="row">
                                                        <label style="font-size: 14px;">Outward No.</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-md-6">
                                                    <div class="row">
                                                        @Html.DisplayFor(model => Model.OutwardToTailorDetails.OutwardCode)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-12 col-md-12 col-sm-12">
                                        <div style="height: 10px"></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label style="font-size: large">&nbsp Item Details</label>
                                    <table border="1" style="border-collapse: collapse; width: 100%" cellpadding="0" cellspacing="0">
                                        <thead>
                                            <tr>
                                                <th style="text-align: center">
                                                    <label>S.No.</label></th>
                                                <th style="text-align: center">
                                                    <label>Bill No.</label></th>
                                                <th style="text-align: center">
                                                    <label>Item<br />Name</label></th>
                                                <th style="text-align: center">
                                                    <label>Item<br />
                                                        Code</label></th>
                                                <th style="text-align: center">
                                                    <label>JobWork<br />
                                                        Type</label></th>
                                                <th style="text-align: center">
                                                    <label>Quantity</label></th>
                                                <th style="text-align: center">
                                                    <label>Narration</label></th>
                                                <th style="text-align: center">
                                                    <label>Tailor<br />
                                                        Amount</label></th>
                                                <th style="text-align: center">
                                                    <label>Accessories<br />
                                                        Amount</label></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                            
                                                int count = 1;
                                                if (Model.OutwardToTailorItemList.Count() != 0 || Model.OutwardToTailorItemList.Any())
                                                {
                                                    foreach (var item in Model.OutwardToTailorItemList)
                                                    {
                                                        var tailoramt = Convert.ToDouble(@item.TailorAmount);
                                                        var TailorAmount = tailoramt.ToString("#,###.00##");
                                                        var accessoriesamt = Convert.ToDouble(@item.AccessoriesAmount);
                                                        var AccessoriesAmount = accessoriesamt.ToString("#,###.00##");
                                                <tr id="row1">
                                                    <td style="text-align: center">@count</td>

                                                    <td style="text-align: left">&nbsp;@item.BillNo</td>

                                                    <td style="text-align: left">&nbsp;@item.ItemName</td>

                                                    <td style="text-align: left">&nbsp;@item.ItemCode</td>

                                                    <td style="text-align: left">&nbsp;@item.JobWorktype</td>

                                                    <td style="text-align: left">&nbsp;@item.Quantity</td>

                                                    <td style="text-align: left">&nbsp;@item.NarrationForTailor</td>

                                                    <td style="text-align: right">@TailorAmount&nbsp;</td>

                                                    <td style="text-align: right">@AccessoriesAmount&nbsp;</td>
                                                </tr>
                                                        count++;
                                                    }
                                                }
                                            
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                <div class="col-md-12 col-lg-12">


                                    <div class="row">
                                        <div class="col-md-5 col-lg-5"></div>
                                        <div class="col-md-7 col-lg-7">
                                            <div class="col-md-4 col-lg-4"></div>
                                            <div class="col-md-4 col-lg-4" style="text-align: left">
                                                <div class="row">
                                                    <label style="font-size: 14px">Grand Total</label>
                                                </div>
                                            </div>
                                            <div class="col-md-4 col-lg-4" style="text-align: right">
                                                <div class="row">
                                                    @{
                                                        var grandtotal = Convert.ToDouble(@Model.OutwardToTailorDetails.GrandTotal).ToString("#,###.00##");   
                                                    }
                                                    <i class="fa fa-rupee" style="font-size: 14px"></i>
                                                    <label style="font-size: 14px" id="GrandTotal">@grandtotal</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-5 col-lg-5"></div>
                                        <div class="col-md-7 col-lg-7">
                                            <div class="col-md-4 col-lg-4"></div>
                                            <div class="col-md-4 col-lg-4" style="text-align: left">
                                                <div class="row">
                                                    <label style="font-size: 14px">Advance Payment</label>
                                                </div>
                                            </div>
                                            <div class="col-md-4 col-lg-4" style="text-align: right">
                                                <div class="row">
                                                    @{
                                                        var advpay = Convert.ToDouble(@Model.OutwardToTailorDetails.AdvancePayment).ToString("#,###.00##");   
                                                    }
                                                    <i class="fa fa-rupee" style="font-size: 14px"></i>
                                                    <label style="font-size: 14px" id="AdvancePayment">@advpay</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-5 col-lg-5"></div>
                                        <div class="col-md-7 col-lg-7">
                                            <div class="col-md-4 col-lg-4"></div>
                                            <div class="col-md-4 col-lg-4" style="text-align: left">
                                                <div class="row">
                                                    <label style="font-size: 14px">Balance</label>
                                                </div>
                                            </div>
                                            <div class="col-md-4 col-lg-4" style="text-align: right">
                                                <div class="row">
                                                    @{
                                                        var bal = Convert.ToDouble(@Model.OutwardToTailorDetails.Balance).ToString("#,###.00##");   
                                                    }
                                                    <i class="fa fa-rupee" style="font-size: 14px"></i>
                                                    <label style="font-size: 14px" id="Balance">@bal</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-ld-12 col-md-12">
                                    <div style="width: 100%; height: 1px; background-color: black"></div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 col-md-12">
                                        <div class="col-md-10 col-lg-10"></div>
                                        <div class="col-md-2 col-lg-2">
                                            <label style="font-size: 14px; float: right">Prepared By,</label><br />
                                            <span style="float: right">@Html.DisplayFor(model => model.OutwardToTailorDetails.PreparedBy)</span>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </table>

                    <div style="height: 10px"></div>
                    <div style="text-align: center">
                        <button id="Print" class="btn btn-success" type="button">Print</button>
                    </div>

                </div>
            </div>

        </div>
        }
    </div>
</section>

@{
    if (ViewData["OutwardToTailorChanged"] != null)
    {
        string prevtailor = ViewData["OutwardToTailorChanged"].ToString();
    <input type="hidden" id="TailorChanged" value="@prevtailor" />
    <script type="text/javascript">
        alertbox(document.getElementById("TailorChanged").value);
    </script>
    }
}
