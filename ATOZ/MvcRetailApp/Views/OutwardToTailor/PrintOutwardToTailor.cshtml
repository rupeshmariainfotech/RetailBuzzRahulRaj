@model CodeFirstEntities.MainApplication

@{
    ViewBag.Title = "PrintOutwardToTailor";
}

<link rel="stylesheet" type="text/css" href="~/Content/font-awesome.css" />

<script type="text/javascript">
    $(function () {
        document.getElementById("Inwords").innerHTML = NumberToWords();
    });
</script>

<script type="text/javascript">
    function addCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function removeCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, '');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function NumberToWords() {
        var junkVal = (+removeCommas(document.getElementById('Grand_Total').innerHTML));
        junkVal = Math.floor(junkVal);
        var obStr = new String(junkVal);
        numReversed = obStr.split("");
        actnumber = numReversed.reverse();
        if (Number(junkVal) > 0) {
            //do nothing
        }
        else if (Number(junkVal) == 0) {
            //document.getElementById('container').innerHTML = obStr + '' + 'Rupees Zero Only';
            return 'Rupees Zero Only';
        }
        else {
            alert('wrong Number cannot be converted');
            return false;
        }

        if (actnumber.length > 9) {
            alert('Oops!!!! the Number is too big to covertes');
            return false;
        }

        var iWords = ["Zero", " One", " Two", " Three", " Four", " Five", " Six", " Seven", " Eight", " Nine"];
        var ePlace = ['Ten', ' Eleven', ' Twelve', ' Thirteen', ' Fourteen', ' Fifteen', ' Sixteen', ' Seventeen', ' Eighteen', ' Nineteen'];
        var tensPlace = ['dummy', ' Ten', ' Twenty', ' Thirty', ' Forty', ' Fifty', ' Sixty', ' Seventy', ' Eighty', ' Ninety'];

        var iWordsLength = numReversed.length;
        var totalWords = "";
        var inWords = new Array();
        var finalWord = "";
        j = 0;
        for (i = 0; i < iWordsLength; i++) {
            switch (i) {
                case 0:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + ' Only';
                    break;
                case 1:
                    tens_complication();
                    break;
                case 2:
                    if (actnumber[i] == 0) {
                        inWords[j] = '';
                    }
                    else if (actnumber[i - 1] != 0 && actnumber[i - 2] != 0) {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred and';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred';
                    }
                    break;
                case 3:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Thousand";
                    }
                    break;
                case 4:
                    tens_complication();
                    break;
                case 5:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Lakh";
                    }
                    break;
                case 6:
                    tens_complication();
                    break;
                case 7:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + " Crore";
                    break;
                case 8:
                    tens_complication();
                    break;
                default:
                    break;
            }
            j++;
        }

        function tens_complication() {
            if (actnumber[i] == 0) {
                inWords[j] = '';
            }
            else if (actnumber[i] == 1) {
                inWords[j] = ePlace[actnumber[i - 1]];
            }
            else {
                inWords[j] = tensPlace[actnumber[i]];
            }
        }
        inWords.reverse();
        for (i = 0; i < inWords.length; i++) {
            finalWord += inWords[i];
        }
        // obStr + '  '+ finalWord;
        return finalWord;
    }
</script>

<script>
    $(function () {
        var temp = $("#date").text();
        var dat = new Date(temp);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('date').innerHTML = data;

        var temp = $("#delivery_date").text();
        var dat = new Date(temp);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('delivery_date').innerHTML = data;

        if (document.getElementById("quotation_date") != null) {
            var temp = $("#quotation_date").text();
            var dat = new Date(temp);
            var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
            var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
            document.getElementById('quotation_date').innerHTML = data;
        }
    });
</script>

<table style="border: 1px double; width: 100%;">
    <tr>
        <td>
            <table style="width: 100%">
                <tr>
                    <td colspan="8" style="text-align: center;">
                        <img src="~/Images/retail-logo.png" class="img-responsive" alt="logo" style="max-width: 100px;" />
                    </td>
                </tr>
                <tr>
                    <td colspan="8" style="text-align: center;">
                        <label><b>A To Z DADAR T.T.</b></label><br />
                        <label>Shopping Centre, Dadar T.T., Dadar East,Mumbai - 400014</label>
                    </td>
                </tr>
                <tr>
                    <td colspan="8" style="text-align: center;">
                        <label style="font-size: x-large;"><b>Outward To Tailor</b></label>
                    </td>
                </tr>
            </table>
        </td>
    </tr>

    <tr>
        <td>
            <table style="border: 1px double; width: 100%">
                <tr>
                    <td>
                        <table class="" style="width: 100%; top: 0px">
                            <tr>
                                <td style="width: 70%"></td>
                                <td>
                                    <b>Date: &nbsp</b><label id="date" style="font-weight: normal">@Html.DisplayFor(model => model.OutwardToTailorDetails.Date)</label><br />
                                    <b>Outward No.: &nbsp</b><label style="font-weight: normal">@Html.DisplayFor(model => model.OutwardToTailorDetails.OutwardCode)</label>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>


                <tr>
                    <td style="width: 100%;">
                        <label style="font-size: 14px; font-weight: bold">Tailor Name:</label>&nbsp;&nbsp;@Html.DisplayFor(model => model.OutwardToTailorDetails.TailorName)<br />
                        <label style="font-size: 14px; font-weight: bold">Client Name:</label>&nbsp;&nbsp;@Html.DisplayFor(model => model.OutwardToTailorDetails.ClientName)<br />
                        <label style="font-size: 14px; font-weight: bold">Retail Bill Nos:</label>&nbsp;&nbsp;@Html.DisplayFor(model => model.OutwardToTailorDetails.RetailBills)<br />
                        <label style="font-size: 14px; font-weight: bold">Sales Bill Nos:</label>&nbsp;&nbsp;@Html.DisplayFor(model => model.OutwardToTailorDetails.SalesBills)<br />
                    </td>
                </tr>

            </table>
        </td>
    </tr>

    <tr>
        <td>
            <div style="height: 15px"></div>
        </td>
    </tr>

    <tr>
        <td>
            <label style="font-size: large"><b>Item Details</b></label>
            <div class="form-group row">
                <table border="1" style="border-collapse: collapse; width: 100%;" cellpadding="0" cellspacing="0">
                    <thead>
                        <tr>
                                                <th style="text-align: center">
                                                    <label>S.No.</label></th>
                                                <th style="text-align: center">
                                                    <label>Bill No.</label></th>
                                                <th style="text-align: center">
                                                    <label>Item<br />Name</label></th>
                                                <th style="text-align: center">
                                                    <label>Item<br />
                                                        Code</label></th>
                                                
                                                <th style="text-align: center">
                                                    <label>JobWork<br />
                                                        Type</label></th>
                            <th style="text-align: center">
                                                    <label>Quantity</label></th>
                            <th style="text-align: center">
                                                    <label>Narration</label></th>
                                                <th style="text-align: center">
                                                    <label>Tailor<br />
                                                        Amount</label></th>
                                                <th style="text-align: center">
                                                    <label>Accessories<br />
                                                        Amount</label></th>
                                            </tr>
                    </thead>
                    <tbody>
                        @{
                                            
                                                int count = 1;
                                                if (Model.OutwardToTailorItemList.Count() != 0 || Model.OutwardToTailorItemList.Any())
                                                {
                                                    foreach (var item in Model.OutwardToTailorItemList)
                                                    {
                                                        var tailoramt = Convert.ToDouble(@item.TailorAmount);
                                                        var TailorAmount = tailoramt.ToString("#,###.00##");
                                                        var accessoriesamt = Convert.ToDouble(@item.AccessoriesAmount);
                                                        var AccessoriesAmount = accessoriesamt.ToString("#,###.00##");
                                                <tr id="row1">
                                                    <td style="text-align: center">@count</td>

                                                    <td style="text-align: left">&nbsp;@item.BillNo</td>

                                                    <td style="text-align: left">&nbsp;@item.ItemName</td>

                                                    <td style="text-align: left">&nbsp;@item.ItemCode</td>

                                                    <td style="text-align: left">&nbsp;@item.JobWorktype</td>

                                                    <td style="text-align: left">&nbsp;@item.Quantity</td>

                                                    <td style="text-align: left">&nbsp;@item.NarrationForTailor</td>

                                                    <td style="text-align: right">@TailorAmount&nbsp;</td>

                                                    <td style="text-align: right">@AccessoriesAmount&nbsp;</td>
                                                </tr>
                                                        count++;
                                                    }
                                                }
                                            
                                            }
                    </tbody>
                </table>
            </div>
        </td>
    </tr>

    <tr>
        <td>
            <table style="width: 100%">
                 @{
                     var grandttl = Convert.ToDouble(Model.OutwardToTailorDetails.GrandTotal);
                    var GrandTotal = grandttl.ToString("#,###.00##");
                    var advpay = Convert.ToDouble(Model.OutwardToTailorDetails.AdvancePayment);
                    var AdvancePayment = advpay.ToString("#,###.00##");
                    var bal = Convert.ToDouble(Model.OutwardToTailorDetails.Balance);
                    var Balance = bal.ToString("#,###.00##");
                    }
                <tr>
                    <td style="width: 64%;"></td>
                    <td>
                        <table style="float: right">
                            <tr>
                                <td></td>
                                <td style="width: 80%; text-align: right">
                                    <label style="font-size: 17px"><b>Grand Total : &nbsp</b></label></td>
                                <td style="float: right;"><i class="fa fa-inr"></i><b>@GrandTotal</b></td>
                            </tr>
                            <tr>
                                <td></td>
                                <td style="width: 80%; text-align: right">
                                    <label style="font-size: 17px"><b>Advance Payment : &nbsp</b></label></td>
                                <td style="float: right;"><i class="fa fa-inr"></i><b>@AdvancePayment</b></td>
                            </tr>

                            <tr>
                                <td></td>
                                <td style="text-align: right">
                                    <label style="font-size: 17px;"><b>Balance : &nbsp</b></label></td>
                                <td style="float: right;"><i class="fa fa-inr"></i><b>@Balance</b></td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        </td>
    </tr>

    <tr>
        <td>
            <div style="float: right; text-align: right">
                <label style="font-size: 18px; font-weight: bold; margin-right: 10px">Prepared By,</label><br />
                <div style="margin-right: 10px">@Html.DisplayFor(model => model.OutwardToTailorDetails.PreparedBy)</div>
                <br />
            </div>
        </td>
    </tr>

    <tr>
        <td>
            <div style="background-color: GrayText; width: 100%; height: 1px"></div>
            <br />
            <label style="font-size: large"><b>Remarks:</b></label>
        </td>
    </tr>

    <tr>
        <td><b>Company's CST No.&nbsp;:</b>
            27170291194C w.e.f 1.04.2006</td>
    </tr>

    <tr>
        <td><b>Company's Service Tax No.&nbsp;:</b>
            AAACO4131DST001</td>
    </tr>
    <tr>
        <td><b>Company's PAN&nbsp;:</b>
            AAACO4131D</td>
    </tr>

    <tr>
        <td>
            <table border="0">
                <tr>
                    <td style="width: 70%">
                        <label style="font-weight: normal"><b>Declaration:</b></label><br />
                        <label style="font-size: small">This PO is made in response to a written proposal or other form of offer from Seller, and if Seller’s proposal or other form of offer contains terms additional to or different from this PO, then BUYER’S ACCEPTANCE OF SELLER’S PROPOSAL OR OFFER IS HEREBY EXPRESSLY CONDITIONED UPON SELLER’S ASSENT TO ALL THE TERMS AND CONDITIONS CONTAINED IN THIS PO.</label>
                    </td>
                    <td style="width: 30%">
                        <table style="border: 1px double; width: 100%; padding-top: 12px">
                            <tr style="height: 40px; float: left; font-size: small">
                                <td>Authorised Signatory: </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>


