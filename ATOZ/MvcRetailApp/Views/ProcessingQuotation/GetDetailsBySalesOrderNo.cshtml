@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "GetDetailsBySalesOrderNo";
}

<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }

    function confirmbox(message, row) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone2.ogg';
        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('confirmClass');
        bootbox.confirm('<i class="fa fa-2x fa-question-circle"></i><br>' + message + '<hr>',
		 function (result) {
		     if (result) {
		         $("#" + row).remove();
		         var rowid = document.getElementById("hdnRowCount").value;
		         CalculateAmount(rowid, '');
		         CalculateTotalDiscount();
		         CalcGrandTotal();
		     }
		 });
    }
</script>

<script type="text/javascript">
    function addCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function removeCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, '');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function NumberToWords() {
        var junkVal = (+removeCommas(document.getElementById('GrandTotal').innerHTML));
        junkVal = Math.floor(junkVal);
        var obStr = new String(junkVal);
        numReversed = obStr.split("");
        actnumber = numReversed.reverse();
        if (Number(junkVal) > 0) {
        }
        else if (Number(junkVal) == 0) {
            return 'Rupees Zero Only';
        }
        else {
            alertbox('wrong Number cannot be converted');
            return false;
        }

        if (actnumber.length > 9) {
            alertbox('Oops!!!! the Number is too big to covertes');
            return false;
        }

        var iWords = ["Zero", " One", " Two", " Three", " Four", " Five", " Six", " Seven", " Eight", " Nine"];
        var ePlace = ['Ten', ' Eleven', ' Twelve', ' Thirteen', ' Fourteen', ' Fifteen', ' Sixteen', ' Seventeen', ' Eighteen', ' Nineteen'];
        var tensPlace = ['dummy', ' Ten', ' Twenty', ' Thirty', ' Forty', ' Fifty', ' Sixty', ' Seventy', ' Eighty', ' Ninety'];

        var iWordsLength = numReversed.length;
        var totalWords = "";
        var inWords = new Array();
        var finalWord = "";
        j = 0;
        for (i = 0; i < iWordsLength; i++) {
            switch (i) {
                case 0:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + ' Only';
                    break;
                case 1:
                    tens_complication();
                    break;
                case 2:
                    if (actnumber[i] == 0) {
                        inWords[j] = '';
                    }
                    else if (actnumber[i - 1] != 0 && actnumber[i - 2] != 0) {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred and';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred';
                    }
                    break;
                case 3:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Thousand";
                    }
                    break;
                case 4:
                    tens_complication();
                    break;
                case 5:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Lakh";
                    }
                    break;
                case 6:
                    tens_complication();
                    break;
                case 7:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + " Crore";
                    break;
                case 8:
                    tens_complication();
                    break;
                default:
                    break;
            }
            j++;
        }

        function tens_complication() {
            if (actnumber[i] == 0) {
                inWords[j] = '';
            }
            else if (actnumber[i] == 1) {
                inWords[j] = ePlace[actnumber[i - 1]];
            }
            else {
                inWords[j] = tensPlace[actnumber[i]];
            }
        }
        inWords.reverse();
        for (i = 0; i < inWords.length; i++) {
            finalWord += inWords[i];
        }
        return finalWord;
    }

</script>

@*VALIDATION ON UNIT AND RATE*@
<script type="text/javascript">
    function AllowNumbers(key) {
        var keycode = (key.which) ? key.which : key.keyCode;
        //comparing pressed keycodes
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
    }

    function AllowDecimal(key, rowid) {
        var numbertype = $("#NumberType" + rowid).val();
        var quantity = $("#Quantity" + rowid).val();
        var pointposition = quantity.indexOf(".");
        var digitupto = 0;
        if (pointposition != -1) {
            digitupto = quantity.substr(pointposition, quantity.length).length;
        }
        var keycode = (key.which) ? key.which : key.keyCode;
        //comparing pressed keycodes
        if (numbertype == 'Whole') { //if unit type is whole number then don't allow point
            if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                return false;
            }
        }
        else if (quantity.length == 0) {
            if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                return false;
            }
        }
        else if (keycode == 46) { //if decimal point is inserted
            if (pointFoundCount > 0 && pointFoundCount < 2) { // more than one decimal point is inserted then don't allow to insert it
                return false;
            }
        }
        else if (digitupto != 0) { // if unit type is decimal then wait for decimal point to be insert then execute this condition 
            if (numbertype == '2Digit') { // if unit type is 2 digit the then allow 2 digits after decimal not the characters in between
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 3) {
                    return false;
                }
            }
            else { // if unit type is 2 digit the then allow 3 digits after decimal not the characters in between
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 4) {
                    return false;
                }
            }
        }
        else { //don't allow any decimal point or character until first digit occurs
            if (quantity.length == 0) // if first digit is point in quantity field then don't allow it and characters too
            {
                if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
            else { //don't allow any character until the above else if condition meets
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
        }
    }
</script>

<script>
    $(function () {
        var temp = $("#date").text();
        var dat = new Date(temp);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('date').innerHTML = data;

        var temp = $("#deldate").text();
        var dat = new Date(temp);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('deldate').innerHTML = data;

        if (document.getElementById("quotdate") != null) {
            var temp = $("#quotdate").text();
            var dat = new Date(temp);
            var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
            var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
            document.getElementById('quotdate').innerHTML = data;
        }
    });
</script>


@*GET SELECTED ITEMS IN ITEM DDL*@
<script type="text/javascript">
    function GetSelectedItems(id, item, type) {
        id = +id;
        //FILL ITEM DDL
        $.getJSON("/ProcessingQuotation/GetItemsFromShopStockAndStkDistrbtn", { ItemType: type, LoginShop: $("#SalesOrderDetails_ShopCode").val() },
        function (data) {
            var select = $("#ItemCode" + id);
            select.empty();
            select.append($('<option/>', {
                text: "Select Item",
                value: "",
            }));
            $.each(data, function (index, itemdata) {
                select.append($('<option/>', {
                    text: itemdata.Text + " " + itemdata.Value,
                    value: itemdata.Value,
                }));
            });
            $("#ItemCode" + id).val(item).attr("selected", true);
        });
    }

    function GetStockQuantity(id, item) {
        id = +id;
        $.getJSON("/ProcessingQuotation/GetStockQuantity", { ItemCode: item },
        function (data) {
            $("#StkQty" + id).text(data);
        });
    }

</script>


@*CLIENT NAME AUTO COMPLETE*@
<script type="text/javascript">
    $(function () {
        $("#ClientName").autocomplete({
            source: "/ProcessingQuotation/GetActiveAndMaharashtraClients",
            minLength: 1,
            select: function (event, ui) {
                if (ui.item) {
                    $("#ClientName").val(ui.item.value);

                    var clientname = document.getElementById("ClientName").value;
                    $.getJSON("/ProcessingQuotation/GetClientDetails", { name: clientname },
                    function (data) {

                        document.getElementById("Client_Address").innerHTML = data.Address;
                        document.getElementById("Client_State").innerHTML = data.State;
                        document.getElementById("Client_Contact").innerHTML = data.ContactNo1;
                        document.getElementById("Client_Email").innerHTML = data.Email;

                        document.getElementById("SalesOrderDetails_ClientAddress").value = data.Address;
                        document.getElementById("SalesOrderDetails_ClientState").value = data.State;
                        document.getElementById("SalesOrderDetails_ClientContactNo").value = data.ContactNo1;
                        document.getElementById("SalesOrderDetails_ClientEmail").value = data.Email;
                        document.getElementById("SalesOrderDetails_ClientType").value = data.ClientType;
                        document.getElementById("SalesOrderDetails_ConsumeResell").value = data.ConsumeResell;
                        document.getElementById("ddlformtypes").value = data.FormType;

                        //SELECT RADIO BUTTON CLIENT BASED
                        if (data.State == "Maharashtra") {
                            document.getElementById("formtypeid").style.display = "none";
                            document.getElementById("YesRadioButton").disabled = 'true';
                            document.getElementById("NoRadioButton").disabled = 'true';
                            document.getElementById("NoRadioButton").checked = true;
                        }
                        else {
                            document.getElementById("YesRadioButton").disabled = false;
                            document.getElementById("NoRadioButton").disabled = false;
                        }
                        if (data.ClientType == "Registered") {
                            $("#Registered").attr("checked", true);
                        }
                        else {
                            $("#NonRegistered").attr("checked", true);
                        }
                        if (data.ConsumeResell == "Consumer") {
                            $("#Consumer").attr("checked", true);
                        }
                        else {
                            $("#Reseller").attr("checked", true);
                        }
                        if (data.FormType != null) {
                            document.getElementById("formtypeid").style.display = "inline";
                            $("#ddlformtypes").val(data.FormType).attr("selected", true);
                            $("#YesRadioButton").attr("checked", true);
                        }
                        else {
                            document.getElementById("formtypeid").style.display = "none";
                            $("#NoRadioButton").attr("checked", true);
                        }

                    });
                }
            }
        });

        //GET TRANSPORT NAME BY TRANSPORT MODE DDL CHANGE EVENT
        $("#ddltypeofmode").change(function () {
            var mode = document.getElementById("ddltypeofmode").value;
            document.getElementById("TrnsprtName").style.display = 'inline';
            if (mode != "") {
                $.getJSON("/ProcessingQuotation/GetTransportNames", { mode: mode },
                function (data) {
                    var select = $("#ddltransportnames");
                    select.empty();
                    select.append($('<option/>', {
                        text: "Select Name",
                        value: "",
                    }));
                    $.each(data, function (index, itemdata) {
                        select.append($('<option/>', {
                            text: itemdata.Text,
                            value: itemdata.Value,
                        }));
                    });
                });
            }
            else {
                var select = $("#ddltransportnames");
                select.empty();
                select.append($('<option/>', {
                    text: "Select Name",
                    value: "",
                }));
            }
        });

        //GET TRANSPORT DETAILS BY TRANSPORT NAME DDL CHANGE EVENT
        $("#ddltransportnames").change(function () {
            var name = document.getElementById("ddltransportnames").value;
            if (name != "") {
                $.getJSON("/ProcessingQuotation/GetTransportDetails", { name: name },
                    function (data) {
                        document.getElementById("SalesOrderDetails_TransportMode").value = document.getElementById("ddltypeofmode").value;
                        document.getElementById("SalesOrderDetails_TransportName").value = data.name;
                    });
            }

        });

    });
</script>

@*TRANSPORT NAME SELECTED ON ONLOAD FUNCTION*@
<script type="text/javascript">
    $(function () {
        var transportmode = document.getElementById("ddltypeofmode").value;
        var transportname = document.getElementById("transportname").value;
        $.getJSON("/Inward/GetTransportNames", { mode: transportmode },
                    function (data) {
                        var select = $("#ddltransportnames");
                        select.empty();
                        select.append($('<option/>', {
                            text: "Select Name",
                            value: "",
                        }));
                        $.each(data, function (index, itemdata) {
                            select.append($('<option/>', {
                                text: itemdata.Text,
                                value: itemdata.Value,
                            }));
                        });
                        $("#ddltransportnames").val(transportname).attr("selected", true);
                    });
    });
</script>


@*CALCULATE AMOUNT + CALCULATE AMOUNT USING DISCOUNT IN RS OR PERCENT*@
<script type="text/javascript">
    function CalculateAmount(count, type) {
        if (type == "rps") {
            document.getElementById("discountType").value = "rps";
        }
        else if (type == "percent") {
            document.getElementById("discountType").value = "percent"
        }
        else { document.getElementById("discountType").value = "" }

        //CALCUALTE PROPOTIONATE TAX
        var packandforwd = (+document.getElementById("SalesOrderDetails_PackAndForwd").value);
        if (packandforwd != 0 || packandforwd != "") {
            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var quantity = "Quantity" + i;
                var quotquantity = "QuotQty" + i;
                var stockquantity = "StkQty" + i;
                var sellingprice = "SellingPrice" + i;
                var mrp = "MRP" + i;
                var costprice = "CostPrice" + i;
                var amount = "Amount" + i;
                var amountvalue = "AmountValue" + i;
                var disper = "DisPer" + i;
                var disrs = "DisRs" + i;
                var itemtaxval = "ItemTaxValue" + i;

                if (document.getElementById(quantity) != null) {
                    var percent = (+document.getElementById(disper).value) / 100;
                    var rupees = (+document.getElementById(disrs).value);

                    if (type == "mrp") {
                        var taxoncostprice = +$("#" + costprice).val() * +$("#" + itemtaxval).val() / 100;
                        var taxpercentoncostprice = +$("#" + costprice).val() / (+$("#" + costprice).val() + taxoncostprice) * +$("#" + itemtaxval).val();
                        var sellingpriceval = (+$("#" + mrp).val()) - (+$("#" + mrp).val() * +taxpercentoncostprice / 100);
                        $("#" + sellingprice).val(sellingpriceval.toFixed(2));
                    }
                    else if (type == "sellingprice") {
                        var calculatedmrpfromsellprice = +$("#" + sellingprice).val() * +$("#" + itemtaxval).val() / 100;
                        calculatedmrpfromsellprice = +$("#" + sellingprice).val() + calculatedmrpfromsellprice;
                        $("#" + mrp).val(calculatedmrpfromsellprice.toFixed(2));
                    }

                    if (document.getElementById(stockquantity) != null) {
                        var stkqty = +document.getElementById(stockquantity).innerHTML;
                        var qty = +document.getElementById(quantity).value;

                        // calculate extra quantity for without quotation (with Packing and forwarding)....
                        if (document.getElementById("QuotQty" + i) == null) {
                            if ($("#QuotQty" + i).html() != '----') {
                                if (stkqty != "") {
                                    if (count == i) {
                                        if (qty > stkqty) {
                                            if (type == "quantity") {
                                                alertbox("Cannot Exceed Stock Quantity");
                                                document.getElementById(quantity).value = "";
                                            }
                                        }
                                    }
                                }
                            }
                        }
                            // calculate extra quantity for with quotation (with Packing and forwarding)....
                        else {
                            var tempquotquan = "QuotQty" + count;
                            var tempquantity = "Quantity" + count;
                            if (document.getElementById(tempquotquan) != null) {
                                var quotquan = +(document.getElementById(tempquotquan).innerHTML);
                                var quan = +document.getElementById(tempquantity).value;
                                var bal;
                                if (count == i) {
                                    if (quan > quotquan) {
                                        if (type == "quantity") {
                                            bal = quan - quotquan;
                                            alertbox(bal + " Extra Quantity Sent..");
                                        }
                                    }
                                }
                            }
                        }
                    }

                    var dynamicamount = (+document.getElementById(quantity).value) * (+document.getElementById(sellingprice).value);

                    //CALCULATE AMOUNT USING DISCOUNT
                    var discounttype = document.getElementById("discountType").value;
                    if (discounttype == "percent") {
                        if (percent != 0) {
                            var valueafterdiscount = dynamicamount * percent;
                            document.getElementById(disrs).value = valueafterdiscount.toFixed(2);
                            dynamicamount = dynamicamount - valueafterdiscount;

                        }
                        else { document.getElementById(disrs).value = "0.00"; }
                    }
                    else {
                        if (rupees != 0) {
                            var valueafterdiscount = rupees / dynamicamount * 100;
                            document.getElementById(disper).value = valueafterdiscount.toFixed(1);
                            dynamicamount = dynamicamount - rupees;
                        }
                        else { document.getElementById(disper).value = 0; }
                    }
                    document.getElementById(amount).innerHTML = dynamicamount.toFixed(2);
                    document.getElementById(amountvalue).value = dynamicamount.toFixed(2);
                }
            }

            var totalamount = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "Amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            document.getElementById("TotalAmount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("SalesOrderDetails_TotalAmount").value = totalamount.toFixed(2);

            var totalamountwithpackandforwd = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "Amount" + i;
                var amountvalue = "AmountValue" + i;
                var proportionate = "proportionatetax" + i;
                var proportionatehdn = "proportionatetaxvalue" + i;
                var proportionateamount = "proportionatetaxamount" + i;

                if (document.getElementById(amount) != null) {
                    var propotaxpercent = (+removeCommas(document.getElementById(amount).innerHTML)) / (+document.getElementById("SalesOrderDetails_TotalAmount").value);
                    document.getElementById(proportionate).innerHTML = (propotaxpercent * 100).toFixed(2);
                    document.getElementById(proportionatehdn).value = (propotaxpercent * 100).toFixed(2);
                    var packandforwdpropoamount = propotaxpercent * packandforwd;
                    document.getElementById(proportionateamount).value = packandforwdpropoamount.toFixed(2);
                    if (document.getElementById(proportionate).innerHTML.toString() == "NaN") {
                        document.getElementById(proportionate).innerHTML = "0";
                    }
                    CalculateTaxSummary(i);
                }
            }

            CalculateTotalDiscount();
            CalcGrandTotal();
            CalcBal(count, type);
        }
        else {
            var proportionatecount = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= proportionatecount; i++) {
                var proportionate = "proportionatetax" + i;
                var proporamount = "proportionatetaxamount" + i;
                if (document.getElementById(proportionate) != null) {
                    document.getElementById(proportionate).innerHTML = "0";
                    document.getElementById(proporamount).value = 0;
                }
            }
            var quantity = "Quantity" + count;
            var stockquantity = "StkQty" + count;
            var sellingprice = "SellingPrice" + count;
            var mrp = "MRP" + count;
            var costprice = "CostPrice" + count;
            var amount = "Amount" + count;
            var amountvalue = "AmountValue" + count;
            var disper = "DisPer" + count;
            var disrs = "DisRs" + count;
            var itemtaxval = "ItemTaxValue" + count;

            if (document.getElementById(quantity) != null) {
                var percent = (+document.getElementById(disper).value) / 100;
                var rupees = (+document.getElementById(disrs).value);

                if (type == "mrp") {
                    var taxoncostprice = +$("#" + costprice).val() * +$("#" + itemtaxval).val() / 100;
                    var taxpercentoncostprice = +$("#" + costprice).val() / (+$("#" + costprice).val() + taxoncostprice) * +$("#" + itemtaxval).val();
                    var sellingpriceval = (+$("#" + mrp).val()) - (+$("#" + mrp).val() * +taxpercentoncostprice / 100);
                    $("#" + sellingprice).val(sellingpriceval.toFixed(2));
                }
                else if (type == "sellingprice") {
                    var calculatedmrpfromsellprice = +$("#" + sellingprice).val() * +$("#" + itemtaxval).val() / 100;
                    calculatedmrpfromsellprice = +$("#" + sellingprice).val() + calculatedmrpfromsellprice;
                    $("#" + mrp).val(calculatedmrpfromsellprice.toFixed(2));
                }

                if (document.getElementById(stockquantity) != null) {
                    var stkqty = +document.getElementById(stockquantity).innerHTML;
                    var qty = +document.getElementById(quantity).value;

                    // calculate extra quantity for without quotation (without Packing and forwarding)..
                    if (document.getElementById("QuotQty" + count) == null) {
                        if ($("#QuotQty" + count).text() != '----') {
                            if (stkqty != "") {
                                if (qty > stkqty) {
                                    if (type == "quantity") {
                                        alertbox("Cannot Exceed Stock Quantity");
                                        document.getElementById(quantity).value = "";
                                    }
                                }
                            }
                        }
                    }
                        // calculate extra quantity for with quotation (without Packing and forwarding)..
                    else {
                        if (document.getElementById("QuotQty" + count) != null) {
                            if (qty > +($("#QuotyQty" + count).text())) {
                                if (type == "quantity") {
                                    alertbox((qty - +($("#QuotyQty" + count).text())) + " Extra Quantity Sent..");
                                }
                            }
                        }
                    }
                }

                var dynamicamount = (+document.getElementById(quantity).value) * (+document.getElementById(sellingprice).value);

                //CALCULATE AMOUNT USING DISCOUNT
                var discounttype = document.getElementById("discountType").value;
                if (discounttype == "percent") {
                    if (percent != 0) {
                        var valueafterdiscount = dynamicamount * percent;
                        document.getElementById(disrs).value = valueafterdiscount.toFixed(2);
                        dynamicamount = dynamicamount - valueafterdiscount;

                    }
                    else { document.getElementById(disrs).value = "0.00"; }
                }
                else {
                    if (rupees != 0) {
                        var valueafterdiscount = rupees / dynamicamount * 100;
                        document.getElementById(disper).value = valueafterdiscount.toFixed(1);
                        dynamicamount = dynamicamount - rupees;
                    }
                    else { document.getElementById(disper).value = 0; }
                }
                document.getElementById(amount).innerHTML = dynamicamount.toFixed(2);
                document.getElementById(amountvalue).value = dynamicamount.toFixed(2);
            }

            CalculateTotalAmount();
            CalculateTotalDiscount();
            CalculateTaxSummary(proportionatecount);
            CalcGrandTotal();
            CalcBal(count, type);
        }
    }
</script>

@*CALCULATE AMOUNT + CALCULATE AMOUNT USING DISCOUNT IN RS OR PERCENT*@
<script type="text/javascript">
    function CalculateSOAmount(count, type) {

        if (type == "rps") {
            document.getElementById("discountType").value = "rps";
        }
        else if (type == "percent") {
            document.getElementById("discountType").value = "percent"
        }
        else { document.getElementById("discountType").value = "" }

        //CALCUALTE PROPOTIONATE TAX
        var packandforwd = (+document.getElementById("SalesOrderDetails_PackAndForwd").value);
        if (packandforwd != 0 || packandforwd != "") {
            var rowid = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= rowid; i++) {
                var quantity = "Quantity" + i;
                var quotquantity = "QuotQty" + i;
                var stockquantity = "StkQty" + i;
                var sellingprice = "SellingPrice" + i;
                var mrp = "MRP" + i;
                var costprice = "CostPrice" + i;
                var amount = "Amount" + i;
                var amountvalue = "AmountValue" + i;
                var disper = "DisPer" + i;
                var disrs = "DisRs" + i;
                var itemtaxval = "ItemTaxValue" + i;

                if (document.getElementById(quantity) != null) {
                    var percent = (+document.getElementById(disper).value) / 100;
                    var rupees = (+document.getElementById(disrs).value);

                    if (type == "mrp") {
                        var taxoncostprice = +$("#" + costprice).val() * +$("#" + itemtaxval).val() / 100;
                        var taxpercentoncostprice = +$("#" + costprice).val() / (+$("#" + costprice).val() + taxoncostprice) * +$("#" + itemtaxval).val();
                        var sellingpriceval = (+$("#" + mrp).val()) - (+$("#" + mrp).val() * +taxpercentoncostprice / 100);
                        $("#" + sellingprice).val(sellingpriceval.toFixed(2));
                    }
                    else if (type == "sellingprice") {
                        var calculatedmrpfromsellprice = +$("#" + sellingprice).val() * +$("#" + itemtaxval).val() / 100;
                        calculatedmrpfromsellprice = +$("#" + sellingprice).val() + calculatedmrpfromsellprice;
                        $("#" + mrp).val(calculatedmrpfromsellprice.toFixed(2));
                    }

                    if (document.getElementById(stockquantity) != null) {
                        var stkqty = +document.getElementById(stockquantity).innerHTML;
                        var qty = +document.getElementById(quantity).value;

                        // calculate extra quantity for without quotation (with Packing and forwarding)....
                        if (document.getElementById("QuotQty" + i) == null) {
                            if ($("#QuotQty" + i).html() != '----') {
                                if (stkqty != "") {
                                    if (count == i) {
                                        if (qty > stkqty) {
                                            if (type == "quantity") {
                                                alertbox("Cannot Exceed Stock Quantity");
                                                document.getElementById(quantity).value = "";
                                            }
                                        }
                                    }
                                }
                            }
                        }
                            // calculate extra quantity for with quotation (with Packing and forwarding)....
                        else {
                            var currentbalance = "Balance" + i;
                            var currentbalanceval = "BalanceVal" + i;
                            var tempbal = "PrevBalance" + i;
                            var tempprevqty = "PrevQuantity" + i;
                            var tempquantity = "Quantity" + i;
                            if (document.getElementById(tempbal) != null) {
                                var bal = +(document.getElementById(tempbal).value);
                                var quan = +document.getElementById(tempquantity).value;
                                var prevqty = +document.getElementById(tempprevqty).value;
                                if (count == i) {
                                    if (type == "quantity") {
                                        if (+$("#QuotQty" + count).html() != 0) {
                                            balance = prevqty - quan + bal;
                                            if (balance == 0) {
                                                alertbox("All Quantity Sent..");
                                                document.getElementById(currentbalance).innerHTML = 0;
                                                document.getElementById(currentbalanceval).value = 0;
                                            }
                                            else if (balance < 0) {
                                                alertbox((0 - balance) + " Extra Quantity Sent..");
                                                alertbox("All Quantity Sent..");
                                                document.getElementById(currentbalance).innerHTML = 0;
                                                document.getElementById(currentbalanceval).value = 0;
                                            }
                                            else {
                                                document.getElementById(currentbalance).innerHTML = balance;
                                                document.getElementById(currentbalanceval).value = balance;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    var dynamicamount = (+document.getElementById(quantity).value) * (+document.getElementById(sellingprice).value);

                    //CALCULATE AMOUNT USING DISCOUNT
                    var discounttype = document.getElementById("discountType").value;
                    if (discounttype == "percent") {
                        if (percent != 0) {
                            var valueafterdiscount = dynamicamount * percent;
                            document.getElementById(disrs).value = valueafterdiscount.toFixed(2);
                            dynamicamount = dynamicamount - valueafterdiscount;

                        }
                        else { document.getElementById(disrs).value = "0.00"; }
                    }
                    else {
                        if (rupees != 0) {
                            var valueafterdiscount = rupees / dynamicamount * 100;
                            document.getElementById(disper).value = valueafterdiscount.toFixed(1);
                            dynamicamount = dynamicamount - rupees;
                        }
                        else { document.getElementById(disper).value = 0; }
                    }
                    document.getElementById(amount).innerHTML = dynamicamount.toFixed(2);
                    document.getElementById(amountvalue).value = dynamicamount.toFixed(2);
                }
            }

            var totalamount = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "Amount" + i;
                if (document.getElementById(amount) != null) {
                    totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
                }
            }
            document.getElementById("TotalAmount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
            document.getElementById("SalesOrderDetails_TotalAmount").value = totalamount.toFixed(2);

            var totalamountwithpackandforwd = 0;
            for (var i = 1; i <= rowid; i++) {
                var amount = "Amount" + i;
                var amountvalue = "AmountValue" + i;
                var proportionate = "proportionatetax" + i;
                var proportionatehdn = "proportionatetaxvalue" + i;
                var proportionateamount = "proportionatetaxamount" + i;

                if (document.getElementById(amount) != null) {
                    var propotaxpercent = (+removeCommas(document.getElementById(amount).innerHTML)) / (+document.getElementById("SalesOrderDetails_TotalAmount").value);
                    document.getElementById(proportionate).innerHTML = (propotaxpercent * 100).toFixed(2);
                    document.getElementById(proportionatehdn).value = (propotaxpercent * 100).toFixed(2);
                    var packandforwdpropoamount = propotaxpercent * packandforwd;
                    document.getElementById(proportionateamount).value = packandforwdpropoamount.toFixed(2);

                    CalculateTaxSummary(i);
                }
            }

            CalculateTotalDiscount();
            CalcGrandTotal();

        }
        else {
            var proportionatecount = document.getElementById("hdnRowCount").value;
            for (var i = 1; i <= proportionatecount; i++) {
                var proportionate = "proportionate" + i;
                var proporamount = "proportionatetaxamount" + i;
                if (document.getElementById(proportionate) != null) {
                    document.getElementById(proportionate).innerHTML = "0";
                    document.getElementById(proporamount).value = 0;
                }
            }
            var quantity = "Quantity" + count;
            var stockquantity = "StkQty" + count;
            var sellingprice = "SellingPrice" + count;
            var mrp = "MRP" + count;
            var costprice = "CostPrice" + count;
            var amount = "Amount" + count;
            var amountvalue = "AmountValue" + count;
            var disper = "DisPer" + count;
            var disrs = "DisRs" + count;
            var balance = "Balance" + count;
            var balanceval = "BalanceVal" + count;
            var prevbal = "PrevBalance" + count;
            var prevqty = "PrevQuantity" + count;
            var itemtaxval = "ItemTaxValue" + count;

            if (document.getElementById(quantity) != null) {
                var percent = (+document.getElementById(disper).value) / 100;
                var rupees = (+document.getElementById(disrs).value);

                if (type == "mrp") {
                    var taxoncostprice = +$("#" + costprice).val() * +$("#" + itemtaxval).val() / 100;
                    var taxpercentoncostprice = +$("#" + costprice).val() / (+$("#" + costprice).val() + taxoncostprice) * +$("#" + itemtaxval).val();
                    var sellingpriceval = (+$("#" + mrp).val()) - (+$("#" + mrp).val() * +taxpercentoncostprice / 100);
                    $("#" + sellingprice).val(sellingpriceval.toFixed(2));
                }
                else if (type == "sellingprice") {
                    var calculatedmrpfromsellprice = +$("#" + sellingprice).val() * +$("#" + itemtaxval).val() / 100;
                    calculatedmrpfromsellprice = +$("#" + sellingprice).val() + calculatedmrpfromsellprice;
                    $("#" + mrp).val(calculatedmrpfromsellprice.toFixed(2));
                }

                if (document.getElementById(stockquantity) != null) {
                    var stkqty = +document.getElementById(stockquantity).innerHTML;
                    var qty = +document.getElementById(quantity).value;


                    // calculate extra quantity for without quotation (without Packing and forwarding)..
                    if (document.getElementById("QuotQty" + count) == null) {
                        if ($("#QuotQty" + count).text() != '----') {
                            if (stkqty != "") {
                                if (qty > stkqty) {
                                    if (type == "quantity") {
                                        alertbox("Cannot Exceed Stock Quantity");
                                        document.getElementById(quantity).value = "";
                                    }
                                }
                            }
                        }
                    }
                        // calculate extra quantity for with quotation (without Packing and forwarding)..
                    else {
                        if (document.getElementById("PrevBalance" + count) != null) {
                            if (type == "quantity") {
                                var calcprevbalance = +document.getElementById(prevbal).value;
                                var calcprevqty = +document.getElementById(prevqty).value;
                                if (+$("#QuotQty" + count).html() != 0) {
                                    calcbalance = calcprevqty - qty + calcprevbalance;
                                    if (calcbalance == 0) {
                                        alertbox("All Quantity Sent..");
                                        document.getElementById(balance).innerHTML = 0;
                                        document.getElementById(balanceval).value = 0;
                                    }
                                    else if (calcbalance < 0) {
                                        alertbox((0 - calcbalance) + " Extra Quantity Sent..");
                                        alertbox("All Quantity Sent..");
                                        document.getElementById(balance).innerHTML = 0;
                                        document.getElementById(balanceval).value = 0;
                                    }
                                    else {
                                        document.getElementById(balance).innerHTML = calcbalance;
                                        document.getElementById(balanceval).value = calcbalance;
                                    }
                                }
                            }
                        }
                    }

                    var dynamicamount = (+document.getElementById(quantity).value) * (+document.getElementById(sellingprice).value);

                    //CALCULATE AMOUNT USING DISCOUNT
                    var discounttype = document.getElementById("discountType").value;
                    if (discounttype == "percent") {
                        if (percent != 0) {
                            var valueafterdiscount = dynamicamount * percent;
                            document.getElementById(disrs).value = valueafterdiscount.toFixed(2);
                            dynamicamount = dynamicamount - valueafterdiscount;

                        }
                        else { document.getElementById(disrs).value = "0.00"; }
                    }
                    else {
                        if (rupees != 0) {
                            var valueafterdiscount = rupees / dynamicamount * 100;
                            document.getElementById(disper).value = valueafterdiscount.toFixed(1);
                            dynamicamount = dynamicamount - rupees;
                        }
                        else { document.getElementById(disper).value = 0; }
                    }
                    document.getElementById(amount).innerHTML = dynamicamount.toFixed(2);
                    document.getElementById(amountvalue).value = dynamicamount.toFixed(2);
                }

                CalculateTotalAmount();
                CalculateTotalDiscount();
                CalculateTaxSummary(count);
                CalcGrandTotal();
            }
        }
    }
</script>


<script type="text/javascript">
    //CALCULATE TOTAL AMOUNT
    function CalculateTotalAmount() {
        var count = document.getElementById("hdnRowCount").value;
        var totalamount = 0;
        for (i = 1; i <= count; i++) {
            amount = "Amount" + i;
            if (document.getElementById(amount) != null) {
                var AMOUNT = +document.getElementById(amount).innerHTML;
                totalamount = totalamount + AMOUNT;
            }
        }
        document.getElementById("TotalAmount").innerHTML = "<i class='fa fa-rupee'></i>" + " " + addCommas(totalamount.toFixed(2));
        document.getElementById("SalesOrderDetails_TotalAmount").value = totalamount.toFixed(2);
        totalamount = Math.round(totalamount.toFixed(2));
        document.getElementById("GrandTotal").innerHTML = "<i class='fa fa-rupee'></i>" + " " + addCommas(totalamount.toFixed(2));
        document.getElementById("Inwords").innerHTML = NumberToWords();
        document.getElementById("SalesOrderDetails_GrandTotal").value = totalamount.toFixed(2);
    }

    //CALCULATE GRAND TOTAL
    function CalcGrandTotal() {
        var payment = +document.getElementById("AdvancePayment").value;
        document.getElementById("AdvPayVal").innerHTML = "<i class='fa fa-rupee'></i>" + " " + payment.toFixed(2);
        var ttlamt = 0;
        var amt = +removeCommas(document.getElementById("TotalAmount").innerHTML);
        amt = amt + (+document.getElementById("SalesOrderDetails_PackAndForwd").value);
        var totaltaxamt = 0;
        var TaxCount = (+document.getElementById("ItemTaxCount").value);
        if (+($("#ItemTaxNumber1").val()) != 0) {
            for (var i = 1; i <= TaxCount; i++) {
                var addedtaxamount = "AddedTaxAmount" + i;
                amt = amt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
            }
            document.getElementById("TotalTaxAmount").innerHTML = addCommas(totaltaxamt.toFixed(2));
            document.getElementById("SalesOrderDetails_TotalTaxAmount").value = totaltaxamt.toFixed(2);
        }
        amt = Math.round(amt.toFixed(2));
        document.getElementById("GrandTotal").innerHTML = "<i class='fa fa-rupee'></i>" + " " + addCommas(amt.toFixed(2));
        document.getElementById("Inwords").innerHTML = NumberToWords();
        document.getElementById("SalesOrderDetails_GrandTotal").value = amt.toFixed(2);
    }

    //DELETE ROW
    function DeleteRow(id) {
        var row = "row" + id;
        confirmbox("Are you sure you wish to delete this row?", row);

    }
</script>

@*CALCULATE TAX VALUE AND TAX AMOUNT*@
<script type="text/javascript">
    function CalculateTaxSummary(rowid) {
        var TaxCount = document.getElementById("ItemTaxCount").value;

        var currentitemtaxvalue = "ItemTaxValue" + rowid;
        var currentamount = "Amount" + rowid;
        var currentproporamount = "proportionatetaxamount" + rowid;
        var currenttaxamount = "ItemTaxAmount" + rowid;

        if (document.getElementById(currentamount) != null) {
            document.getElementById(currenttaxamount).value = (((+removeCommas(document.getElementById(currentamount).innerHTML)) + (+document.getElementById(currentproporamount).value)) * (+document.getElementById(currentitemtaxvalue).value / 100)).toFixed(2);
        }

        for (var i = 1; i <= TaxCount; i++) {
            var TotalTaxAmount = 0;
            var itemtaxno = "ItemTaxNumber" + i;
            var addedtaxamount = "AddedTaxAmount" + i;
            var addedtaxamounthdn = "AddedTaxAmounthdn" + i;
            var addedamount = "AddedAmount" + i;
            var addedamounthdn = "AddedAmounthdn" + i;
            for (var j = 1; j <= rowid; j++) {
                var itemtaxvalue = "ItemTaxValue" + j;
                var amount = "Amount" + j;
                var proporamount = "proportionatetaxamount" + j;
                if (document.getElementById(amount) != null) {
                    if ($("#" + itemtaxno).val() == $("#" + itemtaxvalue).val()) {
                        TotalTaxAmount = (+TotalTaxAmount) + (+removeCommas(document.getElementById(amount).innerHTML)) + (+document.getElementById(proporamount).value);
                    }
                }
            }
            document.getElementById(addedamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedamounthdn).value = TotalTaxAmount.toFixed(2);
            TotalTaxAmount = TotalTaxAmount * (+document.getElementById(itemtaxno).value / 100);
            document.getElementById(addedtaxamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedtaxamounthdn).value = TotalTaxAmount.toFixed(2);
        }
    }
</script>

@*CALCULATE PACKAGING AND FORWQARDING PROPOTIONATE TAX*@
<script type="text/javascript">
    function CalculatePackAndForwd(type) {

        var packford = +(document.getElementById("SalesOrderDetails_PackAndForwd").value);
        document.getElementById("PackFordVal").innerHTML = "<i class='fa fa-rupee'></i>" + " " + packford.toFixed(2);
        var rowid = document.getElementById("hdnRowCount").value;
        var totalamount = 0;
        var valueaftertax = 0;
        for (var i = 1; i <= rowid; i++) {
            var amount = "Amount" + i;
            if (document.getElementById(amount) != null) {
                totalamount = (+totalamount) + (+removeCommas(document.getElementById(amount).innerHTML));
            }
        }
        var finaltotalamount = totalamount;
        totalamount = totalamount + (+document.getElementById("SalesOrderDetails_PackAndForwd").value);
        var packandforwd = (+document.getElementById("SalesOrderDetails_PackAndForwd").value);
        for (var i = 1; i <= rowid; i++) {
            CalculateAmount(i, '');
        }

        CalcGrandTotal();

    }
</script>

@*CALCULATE TRADE DISCOUNT*@
<script type="text/javascript">
    function CalculateTotalDiscount() {

        var rowid = document.getElementById("hdnRowCount").value;
        var totalamount = 0;
        for (var i = 1; i <= rowid; i++) {
            var disinrs = "DisRs" + i;
            if (document.getElementById(disinrs) != null) {
                totalamount = (+totalamount) + (+removeCommas(document.getElementById(disinrs).value));
            }
        }
        document.getElementById("TotalDiscountValue").innerHTML = addCommas(totalamount.toFixed(2));
        document.getElementById("SalesOrderDetails_TotalDiscount").value = totalamount.toFixed(2);

    };
</script>

<script type="text/javascript">

    function CalcBal(count, type) {
        balance = "Balance" + count;
        balanceval = "BalanceVal" + count;
        quotqty = "QuotQty" + count;
        qty = "Quantity" + count;

        if (document.getElementById(balanceval) != null) {
            bal = (+document.getElementById(quotqty).innerHTML) - (+document.getElementById(qty).value);
            if (bal > 0) {
                document.getElementById(balance).innerHTML = bal;
                document.getElementById(balanceval).value = bal;
            }
            else {
                if (type == 'quantity') {
                    alertbox("All Quantity Sent..");
                    document.getElementById(balance).innerHTML = 0;
                    document.getElementById(balanceval).value = 0;
                }
            }
        }
    }

    //function CalcSOBal(count, type) {
    //    balance = "Balance" + count;
    //    balanceval = "BalanceVal" + count;
    //    quotqty = "QuotQty" + count;
    //    quantity = "Quantity" + count;
    //    prevbalance = "PrevBalance" + count;

    //    prevbal = (+document.getElementById(prevbalance).value);
    //    document.getElementById(balance).innerHTML = prevbal;

    //    if (document.getElementById(quantity) != null) {
    //        bal = (+document.getElementById(quotqty).innerHTML) - (+document.getElementById(quantity).value);
    //        if (bal > 0) {
    //            document.getElementById(balance).innerHTML = bal;
    //            document.getElementById(balanceval).value = bal;
    //        }
    //        else {
    //            if (type == 'quantity') {
    //                alertbox("All Quantity Sent..");
    //                document.getElementById(balance).innerHTML = 0;
    //                document.getElementById(balanceval).value = 0;
    //            }
    //        }
    //    }
    //}
</script>

<script type="text/javascript">
    //GET ITEM DETAILS FROM ITEMNAME
    function GetItemDetails(id) {
        id = +id;
        //GET ITEM TAX AND ITEM DETAILS ON ITEM DDL CHANGE EVENT
        var clientstate = document.getElementById("SalesOrderDetails_ClientState").value;
        var clienttype = document.getElementById("SalesOrderDetails_ClientType").value;
        var formtype = document.getElementById("ddlformtypes").value;
        var consumeresell = document.getElementById("SalesOrderDetails_ConsumeResell").value;

        if (document.getElementById("formtypeid").style.display == "none") {
            formtype = "";
        }
        else {
            if (document.getElementById("ddlformtypes").value == "") {
                formtype = "";
            }
            else {
                formtype = $("#ddlformtypes").val();
            }
        }

        itemname = "ItemName" + id;
        designcode = "DesignCode" + id;
        descriptionvalue = "DescriptionValue" + id;
        color = "Color" + id;
        colorvalue = "ColorValue" + id;
        unit = "Unit" + id;
        unitvalue = "UnitValue" + id;
        sellingprice = "SellingPrice" + id;
        mrp = "MRP" + id;
        costprice = "CostPrice" + id;
        materialvalue = "MaterialValue" + id;
        stkqty = "StkQty" + id;
        itemtax = "ItemTax" + id;
        itemtaxvalue = "ItemTaxValue" + id;

        narration = "Narration" + id;
        quantity = "Quantity" + id;
        disper = "DisPer" + id;
        disrs = "DisRs" + id;
        amount = "Amount" + id;
        proptax = "PropTax" + id;

        var itemcode = document.getElementById("ItemCode" + id).value;

        if (itemcode != "") {
            $.getJSON("/ProcessingQuotation/GetItemdetailsByItemCode", { ItemCode: itemcode, ClientState: clientstate, ClientType: clienttype, FormType: formtype, ConsumeResell: consumeresell },
               function (data) {
                   $("#" + itemname).val(data.ItemName);
                   $("#" + designcode).val(data.DesignName);
                   $("#" + descriptionvalue).val(data.Description);
                   $("#" + color).text(data.Color);
                   $("#" + colorvalue).val(data.Color);
                   $("#" + unit).text(data.Unit);
                   $("#" + unitvalue).val(data.Unit);
                   $("#" + sellingprice).val(data.SellingPrice);
                   $("#" + mrp).val(data.MRP);
                   $("#" + costprice).val(data.costprice);
                   $("#" + materialvalue).val(data.Material);
                   $("#" + stkqty).text(data.Qty);
                   $("#" + itemtax).text(data.taxPercent);
                   $("#" + itemtaxvalue).val(data.taxPercent);
                   $("#" + disper).val(data.discount);

                   $("#" + narration).val("");
                   $("#" + quantity).val("");
                   $("#" + disrs).val("");
                   $("#" + amount).text(0);
                   $("#" + proptax).text(0);

                   //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                   //on each item which is applied
                   var tax = data.taxPercent;
                   if (tax != '0') {//if tax is '0' no need to add new taxnumber
                       var taxcount = document.getElementById("ItemTaxCount").value;
                       if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                           $("#ItemTaxNumber" + taxcount).val(tax);
                           document.getElementById("AddTaxes").style.display = "inline";
                           $("#AddedTax1").text(tax + "%");
                       }
                       else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                           var taxpresent = 0;
                           for (var i = 1; i <= taxcount; i++) {
                               var taxno = "ItemTaxNumber" + i;
                               //if tax is already present then no need to make other taxnumbers
                               if (tax == $("#" + taxno).val()) {
                                   taxpresent++;
                               }
                           }
                           if (taxpresent == 0) {
                               taxcount++;
                               var taxno = "ItemTaxNumber" + taxcount;
                               var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                               $("#AllTaxesNumbersValue").append(data);
                               var addedtaxno = "AddedTax" + taxcount;
                               var addedtaxamount = "AddedTaxAmount" + taxcount;
                               var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                               var addedamount = "AddedAmount" + taxcount;
                               var addedamounthdn = "AddedAmounthdn" + taxcount;
                               var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                               newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                               newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                               $("#AddTaxes").append(newlabel);
                               $("#ItemTaxCount").val(taxcount);
                           }
                       }
                   }

               });
        }
        else { alertbox("Please Select Item First"); }
    }
</script>


@*CREATE DYNAMIC ROWS ON ENTER BUTTON CLICK*@
<script type="text/javascript">
    $(document).keypress(function (e) {
        if (e.which == 13) {

            //create inventory items in edit sales order without quotation
            if (document.getElementById("QuotationNo") == null) {

                var rowid = document.getElementById("hdnRowCount").value;
                var previousRowValidationCount = 0;
                if (+$("#AlreadyPresentItems").val() == 0) {
                    $("#AlreadyPresentItems").val(rowid);
                    for (var i = 1; i <= rowid; i++) {
                        var allprevitemCode = "ItemCode" + i;
                        var allprevquantity = "Quantity" + i;
                        var allprevsellingprice = "SellingPrice" + i;
                        var allprevmrp = "MRP" + i;
                        if (document.getElementById(allprevitemCode) != null) {
                            if ($("#" + allprevitemCode).val() == "") {
                                alertbox("Please Select The Item");
                                previousRowValidationCount++;
                            }
                            else if ((+$("#" + allprevquantity).val()) == 0 || $("#" + allprevquantity).val() == "") {
                                alertbox("Please Fill The Quantity");
                                previousRowValidationCount++;
                            }
                            else if ($("#" + allprevsellingprice).val() == "" || (+$("#" + allprevsellingprice).val()) == 0) {
                                alertbox("Please Fill The SellingPrice");
                                previousRowValidationCount++;
                            }
                            else if ($("#" + allprevmrp).val() == "" || (+$("#" + allprevmrp).val()) == 0) {
                                alertbox("Please Fill The MRP");
                                previousRowValidationCount++;
                            }
                        }
                    }
                }

                if (previousRowValidationCount == 0) {
                    var presentrows = +$("#AlreadyPresentItems").val();
                    for (var i = 1; i <= presentrows; i++) {
                        var allprevitemCode = "ItemCode" + i;
                        var allprenarration = "Narration" + i;
                        var allprevquantity = "Quantity" + i;
                        var allprevsellingprice = "SellingPrice" + i;
                        var allprevmrp = "MRP" + i;
                        var allprevdiscountpercent = "DisPer" + i;
                        var allprevdiscountrps = "DisRs" + i;
                        if (document.getElementById(allprevitemCode) != null) {
                            document.getElementById(allprevitemCode).disabled = true;
                            document.getElementById(allprenarration).disabled = true;
                            document.getElementById(allprevquantity).disabled = true;
                            document.getElementById(allprevsellingprice).disabled = true;
                            document.getElementById(allprevmrp).disabled = true;
                            document.getElementById(allprevdiscountpercent).disabled = true;
                            document.getElementById(allprevdiscountrps).disabled = true;
                        }
                    }

                    //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                    var preitem = "ItemCode" + rowid;
                    var prenarration = "Narration" + rowid;
                    var prequantity = "Quantity" + rowid;
                    var presellingprice = "SellingPrice" + rowid;
                    var premrp = "MRP" + rowid;
                    var predisper = "DisPer" + rowid;
                    var predisrs = "DisRs" + rowid;
                    var ITEM = $("#" + preitem).val();
                    var QUANTITY = $("#" + prequantity).val();
                    var SELLINGPRICE = $("#" + presellingprice).val();
                    var MRP = $("#" + premrp).val();

                    if (ITEM == "") {
                        alertbox("Please Select The Item");
                    }
                    else if (QUANTITY == "" || +QUANTITY == 0) {
                        alertbox("Please Fill The Quantity");
                    }
                    else if (SELLINGPRICE == "" || +SELLINGPRICE == 0) {
                        alertbox("Please Fill The SellingPrice");
                        ValidationCounter++;
                    }
                    else if (MRP == "" || +MRP == 0) {
                        alertbox("Please Fill The MRP");
                        ValidationCounter++;
                    }
                    else {
                        //DISABLED THE PREVIOUS ROW
                        if (document.getElementById(preitem) != null) {
                            document.getElementById(preitem).disabled = true;
                            document.getElementById(prenarration).disabled = true;
                            document.getElementById(prequantity).disabled = true;
                            document.getElementById(presellingprice).disabled = true;
                            document.getElementById(premrp).disabled = true;
                            document.getElementById(predisrs).disabled = true;
                            document.getElementById(predisper).disabled = true;
                        }

                        rowid = +rowid + 1;
                        row = "row" + rowid;
                        item = "ItemCode" + rowid;
                        narration = "Narration" + rowid;
                        sellingprice = "SellingPrice" + rowid;
                        mrp = "MRP" + rowid;
                        disper = "DisPer" + rowid;
                        disrs = "DisRs" + rowid;
                        stkqty = "StkQty" + rowid;
                        quantity = "Quantity" + rowid;
                        extraqty = "ExtraQty" + rowid;
                        unit = "Unit" + rowid;
                        amount = "Amount" + rowid;
                        itemtax = "ItemTax" + rowid;

                        costprice = "CostPrice" + rowid;
                        barcodevalue = "BarcodeValue" + rowid;
                        itemname = "ItemName" + rowid;
                        itemtype = "ItemType" + rowid;
                        designcode = "DesignCode" + rowid;
                        designname = "DesignName" + rowid;
                        brand = "Brand" + rowid;
                        size = "Size" + rowid;
                        descriptionvalue = "DescriptionValue" + rowid;
                        colorvalue = "ColorValue" + rowid;
                        materialvalue = "MaterialValue" + rowid;
                        unitvalue = "UnitValue" + rowid;
                        numbertype = "NumberType" + rowid;
                        amountvalue = "AmountValue" + rowid;
                        itemtaxvalue = "ItemTaxValue" + rowid;
                        itemtaxamount = "ItemTaxAmount" + rowid;
                        proportionatetax = "proportionatetax" + rowid;
                        proportionatetaxvalue = "proportionatetaxvalue" + rowid;
                        proportionateamount = "proportionatetaxamount" + rowid;

                        var unorderlist = $("#DynamicRows");

                        unorderlist.append(
                            "<tr id='" + row + "'>" +
                            "<td style='text-align:center'>" + rowid + "</td>" +
                            "<td style='text-align:center'><select id='" + item + "' name='" + item + "' class='form-control'><option>Select Item</option></select><input type='hidden' id='" + itemname + "' name='" + itemname + "' /><input type='hidden' id='" + barcodevalue + "' name='" + barcodevalue + "'/><input type='hidden' id='" + designcode + "' name='" + designcode + "' /><input type='hidden' id='" + designname + "' name='" + designname + "' /><input type='hidden' id='" + brand + "' name='" + brand + "' /><input type='hidden' id='" + size + "' name='" + size + "' /><input type='hidden' id='" + colorvalue + "' name='" + colorvalue + "'/></td>" +
                            "<td style='text-align:center'><textarea class='form-control' style='text-align: center' id='" + narration + "' name='" + narration + "' placeholder='Narration' rows='1' ></textarea><input type='hidden' id='" + descriptionvalue + "' name='" + descriptionvalue + "'/></td>" +
                            "<td style='text-align:center'><label id='" + unit + "' name='" + unit + "' style='font-weight:normal'></label><input type='hidden' id='" + unitvalue + "' name='" + unitvalue + "'/><input type='hidden' name='" + numbertype + "' id='" + numbertype + "'><input type='hidden' id='" + materialvalue + "' name='" + materialvalue + "'/></td>" +
                            "<td style='text-align:center'><a id='" + stkqty + "' href='#' onclick='ShowQuantity(" + rowid + ")'></label></td>" +
                            "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' name='" + quantity + "' id='" + quantity + "' autocomplete='off' onchange='CalculateAmount(" + rowid + ',' + '\"quantity\"' + ")' style='text-align:center' placeholder='Qty' onkeypress='return AllowDecimal(event," + rowid + ")'></input></td>" +
                            "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + sellingprice + "' name='" + sellingprice + "' onchange='CalculateAmount(" + rowid + ',' + '\"sellingprice\"' + ")' style='font-weight:normal; text-align:center' placeholder='Sell Price' onkeypress='return AllowNumbers(event)'/></td>" +
                            "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + mrp + "' name='" + mrp + "' onchange='CalculateAmount(" + rowid + ',' + '\"mrp\"' + ")' style='font-weight:normal; text-align:center' placeholder='MRP' onkeypress='return AllowNumbers(event)'/><input type='hidden' id='" + costprice + "' name='" + costprice + "'/></td>" +
                            "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + disper + "' name='" + disper + "' style='font-weight:normal; text-align:center' value='0' placeholder='0%' onchange='CalculateAmount(" + rowid + ',' + '\"percent\"' + ")' onkeypress='return AllowNumbers(event)'/></td>" +
                            "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + disrs + "' name='" + disrs + "' style='font-weight:normal; text-align:center' value='0.00' placeholder='0' onchange='CalculateAmount(" + rowid + ',' + '\"rps\"' + ")' onkeypress='return AllowNumbers(event)'/></td>" +
                            "<td style='text-align:center'><label id='" + itemtax + "' name='" + itemtax + "' style='font-weight:normal'></label><input type='hidden' id='" + itemtaxvalue + "' name='" + itemtaxvalue + "'/><input type='hidden' id='" + itemtaxamount + "' name='" + itemtaxamount + "' value='0'/></td>" +
                            "<td style='text-align:right'><label  id='" + amount + "' name='" + amount + "' style='font-weight:normal'></label><input type='hidden' id='" + amountvalue + "' name='" + amountvalue + "'/><input type='hidden' id='" + itemtype + "' name='" + itemtype + "' value='Inventory'/></td>" +
                            "<td style='text-align:right'><label id='" + proportionatetax + "'>0</label><input type='hidden' id='" + proportionatetaxvalue + "' name='" + proportionatetaxvalue + "' value='0' /><input type='hidden' id='" + proportionateamount + "' name='" + proportionateamount + "' value='0' /></td>" +
                            "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + rowid + ")' class='fa fa-trash fa-lg' style='color:red;' /></td>"
                        );

                        //FILL ITEM DDL ON ENTER CLICK EVENT
                        $.getJSON("/ProcessingQuotation/GetItemsFromShopStockAndStkDistrbtn", { ItemType: "Inventory", LoginShop: $("#SalesOrderDetails_ShopCode").val() },
                        function (data) {

                            var select = $("#" + item);
                            select.empty();
                            select.append($('<option/>', {
                                text: "Select Item",
                                value: "",
                            }));
                            $.each(data, function (index, itemdata) {
                                select.append($('<option/>', {
                                    text: itemdata.Text + " " + itemdata.Value,
                                    value: itemdata.Value,
                                }));
                            });
                        });

                        //GET ITEM TAX AND ITEM DETAILS ON ITEM DDL CHANGE EVENT
                        var clientstate = document.getElementById("SalesOrderDetails_ClientState").value;
                        var clienttype = document.getElementById("SalesOrderDetails_ClientType").value;
                        var formtype = document.getElementById("ddlformtypes").value;
                        var consumeresell = document.getElementById("SalesOrderDetails_ConsumeResell").value;

                        if (document.getElementById("formtypeid").style.display == "none") {
                            formtype = "";
                        }
                        else {
                            if (document.getElementById("ddlformtypes").value == "") {
                                formtype = "";
                            }
                            else {
                                formtype = $("#ddlformtypes").val();
                            }
                        }

                        //GET ITEM DETAILS FROM ITEMNAME
                        $("#" + item).change(function () {
                            var itemcode = document.getElementById(item).value;
                            var rowcount = document.getElementById("hdnRowCount").value;

                            // EMPTY STOCK QUANTITY AND QUANTITY BECOZ IF WE CHANGE ITEM PREVIOUS ROWS STOCK QUANTITY AND QUANTITY IS EMPTY
                            var qty = "Quantity" + rowcount;
                            var amt = "Amount" + rowcount;
                            //IF ROW IS DELETED THEN QUANTITY WON'T GET ENABLED
                            if (document.getElementById(qty) != null) {
                                document.getElementById(qty).value = "";
                                document.getElementById(amt).innerHTML = "";
                            }

                            //CHECK IF SAME ITEM IS ALREADY SELECTED THEN ENABLES PREVIOUS ROW
                            var counter = 0;
                            for (i = 1; i < rowcount; i++) {
                                var ITEM = "ItemCode" + i;
                                var QUANTITY = "Quantity" + i;
                                var SELLINGPRICE = "SellingPrice" + i;
                                var MRP = "MRP" + i;
                                var DISPER = "DisPer" + i;
                                var DISRS = "DisRs" + i;
                                var NARRATION = "Narration" + i;

                                if (document.getElementById(ITEM) != null) {
                                    if ($("#" + ITEM).val() == itemcode) {
                                        alertbox("The Item Is Already Selected Please Change Details..");
                                        document.getElementById(QUANTITY).disabled = false;
                                        document.getElementById(SELLINGPRICE).disabled = false;
                                        document.getElementById(MRP).disabled = false;
                                        document.getElementById(DISPER).disabled = false;
                                        document.getElementById(DISRS).disabled = false;
                                        document.getElementById(NARRATION).disabled = false;
                                        counter = i;
                                        $("#ItemCode" + rowid).val("").attr("selected", true);
                                        $("#Narration" + rowid).val("");
                                        $("#Quantity" + rowid).val("");
                                        $("#DisPer" + rowid).val("");
                                        $("#DisRs" + rowid).val("");
                                        $("#SellingPrice" + rowid).val("");
                                        $("#MRP" + rowid).val("");
                                        $("#StkQty" + rowid).text("");
                                        $("#Unit" + rowid).text("");
                                        $("#ItemTax" + rowid).text("");
                                        break;
                                    }
                                }
                            }

                            //IF COUNTER IS 0 THAT MEANS CURRENT ITEM IS NOT SELECED IN PREVIOUS ROWS
                            if (counter == 0) {
                                var ValidationCounter = 0;
                                //IF PREVIOUS ROW IS ENABLED FOR CHANGE THE QUANTITY BUT WE SELECT AGAIN DDL THEN DISABLED THIS ENABLES QUANTITY
                                for (var i = 1; i < rowcount; i++) {
                                    //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                                    var preitem = "ItemCode" + i;
                                    var prenarration = "Narration" + i;
                                    var prequantity = "Quantity" + i;
                                    var presellingprice = "SellingPrice" + i;
                                    var premrp = "MRP" + i;
                                    var predisper = "DisPer" + i;
                                    var predisrs = "DisRs" + i;
                                    var ITEM = $("#" + preitem).val();
                                    var QUANTITY = $("#" + prequantity).val();
                                    var SELLINGPRICE = $("#" + presellingprice).val();
                                    var MRP = $("#" + premrp).val();

                                    if (ITEM == "") {
                                        alertbox("Please Select The Item");
                                        ValidationCounter++;
                                        break;
                                    }
                                    else if (QUANTITY == "" || +QUANTITY == 0) {
                                        alertbox("Please Fill The Quantity");
                                        ValidationCounter++;
                                        break;
                                    }
                                    else if (SELLINGPRICE == "" || +SELLINGPRICE == 0) {
                                        alertbox("Please Fill The SellingPrice");
                                        ValidationCounter++;
                                        break;
                                    }
                                    else if (MRP == "" || +MRP == 0) {
                                        alertbox("Please Fill The MRP");
                                        ValidationCounter++;
                                        break;
                                    }
                                    else {
                                        //DISABLED THE PREVIOUS ROW
                                        if (document.getElementById(preitem) != null) {
                                            document.getElementById(preitem).disabled = true;
                                            document.getElementById(prenarration).disabled = true;
                                            document.getElementById(prequantity).disabled = true;
                                            document.getElementById(presellingprice).disabled = true;
                                            document.getElementById(premrp).disabled = true;
                                            document.getElementById(predisrs).disabled = true;
                                            document.getElementById(predisper).disabled = true;
                                        }
                                    }
                                }

                                if (ValidationCounter != 0) {
                                    $("#ItemCode" + rowid).val("").attr("selected", true);
                                    $("#Narration" + rowid).val("");
                                    $("#Quantity" + rowid).val("");
                                    $("#DisPer" + rowid).val("");
                                    $("#DisRs" + rowid).val("");
                                    $("#SellingPrice" + rowid).val("");
                                    $("#MRP" + rowid).val("");
                                    $("#StkQty" + rowid).text("");
                                    $("#Unit" + rowid).text("");
                                    $("#ItemTax" + rowid).text("");
                                }

                                if (ValidationCounter == 0) {
                                    if (itemcode != "") {
                                        $.getJSON("/ProcessingQuotation/GetItemdetailsByItemCode", { ItemCode: itemcode, ClientState: clientstate, ClientType: clienttype, FormType: formtype, ConsumeResell: consumeresell },
                                           function (data) {
                                               $("#" + itemname).val(data.ItemName);
                                               $("#" + designcode).val(data.DesignCode);
                                               $("#" + designname).val(data.DesignName);
                                               $("#" + brand).val(data.Brand);
                                               $("#" + size).val(data.Size);
                                               $("#" + descriptionvalue).val(data.Description);
                                               $("#" + barcodevalue).val(data.Barcode);
                                               $("#" + colorvalue).val(data.Color);
                                               $("#" + unit).text(data.Unit);
                                               $("#" + unitvalue).val(data.Unit);
                                               $("#" + numbertype).val(data.NumberType);
                                               $("#" + costprice).val(data.costprice);
                                               $("#" + sellingprice).val(data.SellingPrice);
                                               $("#" + mrp).val(data.MRP);
                                               $("#" + materialvalue).val(data.Material);
                                               $("#" + stkqty).text(data.Qty);
                                               $("#" + itemtax).text(data.taxPercent);
                                               $("#" + itemtaxvalue).val(data.taxPercent);
                                               $("#" + disper).val(data.discount);
                                               $("#" + disrs).val(data.discountrps);
                                               $("#" + amount).text(0);

                                               //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                                               //on each item which is applied
                                               var tax = data.taxPercent;
                                               if (tax != '0') {//if tax is '0' no need to add new taxnumber
                                                   var taxcount = document.getElementById("ItemTaxCount").value;
                                                   if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                                       $("#ItemTaxNumber" + taxcount).val(tax);
                                                       document.getElementById("AddTaxes").style.display = "inline";
                                                       $("#AddedTax1").text(tax + "%");
                                                   }
                                                   else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                                       var taxpresent = 0;
                                                       for (var i = 1; i <= taxcount; i++) {
                                                           var taxno = "ItemTaxNumber" + i;
                                                           //if tax is already present then no need to make other taxnumbers
                                                           if (tax == $("#" + taxno).val()) {
                                                               taxpresent++;
                                                           }
                                                       }
                                                       if (taxpresent == 0) {
                                                           taxcount++;
                                                           var taxno = "ItemTaxNumber" + taxcount;
                                                           var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                                           $("#AllTaxesNumbersValue").append(data);
                                                           var addedtaxno = "AddedTax" + taxcount;
                                                           var addedtaxamount = "AddedTaxAmount" + taxcount;
                                                           var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                                           var addedamount = "AddedAmount" + taxcount;
                                                           var addedamounthdn = "AddedAmounthdn" + taxcount;
                                                           var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                                           newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                                           newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                                           $("#AddTaxes").append(newlabel);
                                                           $("#ItemTaxCount").val(taxcount);
                                                       }
                                                   }
                                               }
                                               var CostPrice = +$("#" + costprice).val();
                                               var Tax = +$("#" + itemtaxvalue).val();
                                               var MRP = +$("#" + mrp).val();
                                               taxoncostprice = (CostPrice * Tax) / 100;
                                               var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                                               var Sellingprice = MRP - (MRP * +taxpercentoncostprice / 100);
                                               $("#SellingPrice" + rowid).val(Sellingprice.toFixed(2));
                                               //DISPLAY ITEM DEATILS POP-UP ON ITEM CHANGE EVENT..
                                               window.open("/ProcessingQuotation/SOItemDetailsPopUp?ItemCode=" + itemcode, "_target", "width=1000,height=200,top=280px,left=200px");
                                           });
                                    }
                                    else { alertbox("Please Select Item First"); }
                                }
                            }

                        });

                        $("#hdnRowCount").val(rowid);
                    }
                }
            }

                //create inventory items in edit sales order with quotation
            else {
                //CREATE DYNAMIC ROWS FOR SALES ORDER WITH QUOTATION

                var rowid = document.getElementById("hdnRowCount").value;
                var ValidationCounter = 0;

                for (var i = 1; i <= rowid; i++) {
                    //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                    var preitem = "ItemCode" + i;
                    var prenarration = "Narration" + i;
                    var prequantity = "Quantity" + i;
                    var presellingprice = "SellingPrice" + i;
                    var premrp = "MRP" + i;
                    var predisper = "DisPer" + i;
                    var predisrs = "DisRs" + i;
                    var ITEM = $("#" + preitem).val();
                    var QUANTITY = $("#" + prequantity).val();
                    var SELLINGPRICE = $("#" + presellingprice).val();
                    var MRP = $("#" + premrp).val();

                    if (ITEM == "") {
                        alertbox("Please Select The Item");
                        ValidationCounter++;
                        break;
                    }
                    else if (QUANTITY == "") {
                        alertbox("Please Fill The Quantity");
                        ValidationCounter++;
                        break;
                    }
                    else if (SELLINGPRICE == "" || +SELLINGPRICE == 0) {
                        alertbox("Please Fill The SellingPrice");
                        ValidationCounter++;
                        break;
                    }
                    else if (MRP == "" || +MRP == 0) {
                        alertbox("Please Fill The MRP");
                        ValidationCounter++;
                        break;
                    }
                    else {
                        //DISABLED THE PREVIOUS ROW
                        if (document.getElementById(preitem) != null) {
                            document.getElementById(preitem).disabled = true;
                            document.getElementById(prenarration).disabled = true;
                            document.getElementById(prequantity).disabled = true;
                            document.getElementById(presellingprice).disabled = true;
                            document.getElementById(premrp).disabled = true;
                            document.getElementById(predisrs).disabled = true;
                            document.getElementById(predisper).disabled = true;
                        }
                    }
                }
                if (ValidationCounter == 0) {
                    rowid = +rowid + 1;
                    row = "row" + rowid;
                    item = "ItemCode" + rowid;
                    narration = "Narration" + rowid;
                    sellingprice = "SellingPrice" + rowid;
                    mrp = "MRP" + rowid;
                    disper = "DisPer" + rowid;
                    disrs = "DisRs" + rowid;
                    stkqty = "StkQty" + rowid;
                    quantity = "Quantity" + rowid;
                    unit = "Unit" + rowid;
                    amount = "Amount" + rowid;
                    itemtax = "ItemTax" + rowid;

                    costprice = "CostPrice" + rowid;
                    itemname = "ItemName" + rowid;
                    itemtype = "ItemType" + rowid;
                    designcode = "DesignCode" + rowid;
                    designname = "DesignName" + rowid;
                    brand = "Brand" + rowid;
                    size = "Size" + rowid;
                    descriptionvalue = "DescriptionValue" + rowid;
                    colorvalue = "ColorValue" + rowid;
                    materialvalue = "MaterialValue" + rowid;
                    unitvalue = "UnitValue" + rowid;
                    numbertype = "NumberType" + rowid;
                    amountvalue = "AmountValue" + rowid;
                    barcodevalue = "BarcodeValue" + rowid;
                    itemtaxvalue = "ItemTaxValue" + rowid;
                    itemtaxamount = "ItemTaxAmount" + rowid;
                    proportionatetax = "proportionatetax" + rowid;
                    proportionatetaxvalue = "proportionatetaxvalue" + rowid;
                    proportionateamount = "proportionatetaxamount" + rowid;
                    type = "Type" + rowid;

                    var proportionateamount = "proportionatetaxamount" + rowid;

                    var unorderlist = $("#DynamicRows");

                    unorderlist.append(
                        "<tr id='" + row + "'>" +
                        "<td style='text-align:center'>" + rowid + "</td>" +
                        "<td style='text-align:center'><select id='" + item + "' name='" + item + "' class='form-control'><option>Select Item</option></select><input type='hidden' id='" + itemname + "' name='" + itemname + "' /><input type='hidden' id='" + barcodevalue + "' name='" + barcodevalue + "'/><input type='hidden' id='" + designcode + "' name='" + designcode + "' /><input type='hidden' id='" + designname + "' name='" + designname + "' /><input type='hidden' id='" + brand + "' name='" + brand + "' /><input type='hidden' id='" + size + "' name='" + size + "' /></td>" +
                        "<td style='text-align:center'><textarea class='form-control' style='text-align: center' id='" + narration + "' name='" + narration + "' placeholder='Narration' rows='1' ></textarea><input type='hidden' id='" + descriptionvalue + "' name='" + descriptionvalue + "'/><input type='hidden' id='" + colorvalue + "' name='" + colorvalue + "'/></td>" +
                        "<td style='text-align:center'><label id='" + unit + "' name='" + unit + "' style='font-weight:normal'></label><input type='hidden' id='" + unitvalue + "' name='" + unitvalue + "'/><input type='hidden' name='" + numbertype + "' id='" + numbertype + "'><input type='hidden' id='" + materialvalue + "' name='" + materialvalue + "'/></td>" +
                        "<td style='text-align:center'><a id='" + stkqty + "' href='#' onclick='ShowQuantity(" + rowid + ")'></label></td>" +
                        "<td style='text-align:center'><label>----</label></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' name='" + quantity + "' id='" + quantity + "' autocomplete='off' onchange='CalculateAmount(" + rowid + ',' + '\"quantity\"' + ")' style='text-align:center' placeholder='Qty' onkeypress='return AllowDecimal(event," + rowid + ")'></input></td>" +
                        "<td style='text-align:center'><label>----</label></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + sellingprice + "' name='" + sellingprice + "' onchange='CalculateAmount(" + rowid + ',' + '\"sellingprice\"' + ")' style='font-weight:normal; text-align:center' placeholder='Sell Price' onkeypress='return AllowNumbers(event)'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + mrp + "' name='" + mrp + "' onchange='CalculateAmount(" + rowid + ',' + '\"mrp\"' + ")' style='font-weight:normal; text-align:center' placeholder='MRP' onkeypress='return AllowNumbers(event)'/><input type='hidden' id='" + costprice + "' name='" + costprice + "'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + disper + "' name='" + disper + "' style='font-weight:normal; text-align:center' value='0' placeholder='0%' onchange='CalculateAmount(" + rowid + ',' + '\"percent\"' + ")' onkeypress='return AllowNumbers(event)'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + disrs + "' name='" + disrs + "' style='font-weight:normal; text-align:center' value='0.00' placeholder='0' onchange='CalculateAmount(" + rowid + ',' + '\"rps\"' + ")' onkeypress='return AllowNumbers(event)'/></td>" +
                        "<td style='text-align:center'><label id='" + itemtax + "' name='" + itemtax + "' style='font-weight:normal'></label><input type='hidden' id='" + itemtaxvalue + "' name='" + itemtaxvalue + "'/><input type='hidden' id='" + itemtaxamount + "' name='" + itemtaxamount + "' value='0'/></td>" +
                        "<td style='text-align:right'><label  id='" + amount + "' name='" + amount + "' style='font-weight:normal'></label><input type='hidden' id='" + amountvalue + "' name='" + amountvalue + "'/><input type='hidden' id='" + itemtype + "' name='" + itemtype + "' value='Inventory'/></td>" +
                        "<td style='text-align:right'><label id='" + proportionatetax + "'>0</label><input type='hidden' id='" + proportionatetaxvalue + "' name='" + proportionatetaxvalue + "' value='0' /><input type='hidden' id='" + proportionateamount + "' name='" + proportionateamount + "' value='0' /></td>" +
                        "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + rowid + ")' class='fa fa-trash fa-lg' style='color:red;' /><input type='hidden' id='" + type + "' name='" + type + "' value='Inventory' /></td>"
                    );

                    //FILL ITEM DDL ON ENTER CLICK EVENT
                    $.getJSON("/ProcessingQuotation/GetItemsFromShopStockAndStkDistrbtn", { ItemType: "Inventory", LoginShop: $("#SalesOrderDetails_ShopCode").val() },
                    function (data) {

                        var select = $("#" + item);
                        select.empty();
                        select.append($('<option/>', {
                            text: "Select Item",
                            value: "",
                        }));
                        $.each(data, function (index, itemdata) {
                            select.append($('<option/>', {
                                text: itemdata.Text + " " + itemdata.Value,
                                value: itemdata.Value,
                            }));
                        });
                    });

                    //GET ITEM TAX AND ITEM DETAILS ON ITEM DDL CHANGE EVENT
                    var clientstate = document.getElementById("SalesOrderDetails_ClientState").value;
                    var clienttype = document.getElementById("SalesOrderDetails_ClientType").value;
                    var formtype = document.getElementById("ddlformtypes").value;
                    var consumeresell = document.getElementById("SalesOrderDetails_ConsumeResell").value;

                    if (document.getElementById("formtypeid").style.display == "none") {
                        formtype = "";
                    }
                    else {
                        if (document.getElementById("ddlformtypes").value == "") {
                            formtype = "";
                        }
                        else {
                            formtype = $("#ddlformtypes").val();
                        }

                    }

                    //GET ITEM DETAILS FROM ITEMNAME
                    $("#" + item).change(function () {
                        var itemcode = document.getElementById(item).value;
                        var rowcount = document.getElementById("hdnRowCount").value;

                        // EMPTY STOCK QUANTITY AND QUANTITY BECOZ IF WE CHANGE ITEM PREVIOUS ROWS STOCK QUANTITY AND QUANTITY IS EMPTY
                        var qty = "Quantity" + rowcount;
                        var amt = "Amount" + rowcount;
                        //IF ROW IS DELETED THEN QUANTITY WON'T GET ENABLED
                        if (document.getElementById(qty) != null) {
                            document.getElementById(qty).value = "";
                            document.getElementById(amt).innerHTML = "";
                            $("#Narration" + rowid).val("");
                            $("#DisPer" + rowid).val("");
                            $("#DisRs" + rowid).val("");
                            $("#SellingPrice" + rowid).val("");
                            $("#MRP" + rowid).val("");
                            $("#StkQty" + rowid).text("");
                            $("#Unit" + rowid).text("");
                            $("#ItemTax" + rowid).text("");
                        }

                        //CHECK IF SAME ITEM IS ALREADY SELECTED THEN ENABLES PREVIOUS ROW
                        var counter = 0;
                        for (i = 1; i < rowcount; i++) {
                            var ITEM = "ItemCode" + i;
                            var QUANTITY = "Quantity" + i;
                            var SELLINGPRICE = "SellingPrice" + i;
                            var MRP = "MRP" + i;
                            var DISPER = "DisPer" + i;
                            var DISRS = "DisRs" + i;
                            var NARRATION = "Narration" + i;

                            //IF ROW IS DELETED THEN CURRENT ITEM WON'T GET COMPARED
                            if (document.getElementById(ITEM) != null) {
                                if ($("#" + ITEM).val() == itemcode) {
                                    alertbox("The Item Is Already Selected Please Change Details..");
                                    document.getElementById(QUANTITY).disabled = false;
                                    document.getElementById(SELLINGPRICE).disabled = false;
                                    document.getElementById(MRP).disabled = false;
                                    document.getElementById(DISPER).disabled = false;
                                    document.getElementById(DISRS).disabled = false;
                                    document.getElementById(NARRATION).disabled = false;
                                    counter = i;
                                    $("#ItemCode" + rowid).val("").attr("selected", true);
                                    break;
                                }
                            }
                        }

                        //IF COUNTER IS 0 THAT MEANS CURRENT ITEM IS NOT SELECED IN PREVIOUS ROWS
                        if (counter == 0) {
                            var ValidationCounter = 0;
                            //IF PREVIOUS ROW IS ENABLED FOR CHANGE THE QUANTITY BUT WE SELECT AGAIN DDL THEN DISABLED THIS ENABLES QUANTITY
                            for (var i = 1; i < rowcount; i++) {
                                //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                                var preitem = "ItemCode" + i;
                                var prenarration = "Narration" + i;
                                var prequantity = "Quantity" + i;
                                var presellingprice = "SellingPrice" + i;
                                var premrp = "MRP" + i;
                                var predisper = "DisPer" + i;
                                var predisrs = "DisRs" + i;
                                var ITEM = $("#" + preitem).val();
                                var QUANTITY = $("#" + prequantity).val();
                                var SELLINGPRICE = $("#" + presellingprice).val();
                                var MRP = $("#" + premrp).val();

                                if (ITEM == "") {
                                    alertbox("Please Fill The Item");
                                    ValidationCounter++;
                                    $("#ItemCode" + rowid).val("").attr("selected", true);
                                    break;
                                }
                                else if (QUANTITY == "") {
                                    alertbox("Please Fill The Quantity");
                                    ValidationCounter++;
                                    $("#ItemCode" + rowid).val("").attr("selected", true);
                                    break;
                                }
                                else if (SELLINGPRICE == "" || +SELLINGPRICE == 0) {
                                    alertbox("Please Fill The SellingPrice");
                                    ValidationCounter++;
                                    $("#ItemCode" + rowid).val("").attr("selected", true);
                                    break;
                                }
                                else if (MRP == "" || +MRP == 0) {
                                    alertbox("Please Fill The MRP");
                                    ValidationCounter++;
                                    $("#ItemCode" + rowid).val("").attr("selected", true);
                                    break;
                                }
                                else {
                                    //DISABLED THE PREVIOUS ROW
                                    if (document.getElementById(preitem) != null) {
                                        document.getElementById(preitem).disabled = true;
                                        document.getElementById(prenarration).disabled = true;
                                        document.getElementById(prequantity).disabled = true;
                                        document.getElementById(presellingprice).disabled = true;
                                        document.getElementById(premrp).disabled = true;
                                        document.getElementById(predisrs).disabled = true;
                                        document.getElementById(predisper).disabled = true;
                                    }
                                }
                            }

                            if (ValidationCounter == 0) {
                                if (itemcode != "") {
                                    $.getJSON("/ProcessingQuotation/GetItemdetailsByItemCode", { ItemCode: itemcode, ClientState: clientstate, ClientType: clienttype, FormType: formtype, ConsumeResell: consumeresell },
                                       function (data) {
                                           $("#" + itemname).val(data.ItemName);
                                           $("#" + designcode).val(data.DesignCode);
                                           $("#" + designname).val(data.DesignName);
                                           $("#" + brand).val(data.Brand);
                                           $("#" + size).val(data.Size);
                                           $("#" + descriptionvalue).val(data.Description);
                                           $("#" + barcodevalue).val(data.Barcode);
                                           $("#" + colorvalue).val(data.Color);
                                           $("#" + unit).text(data.Unit);
                                           $("#" + unitvalue).val(data.Unit);
                                           $("#" + numbertype).val(data.NumberType);
                                           $("#" + costprice).val(data.costprice);
                                           $("#" + sellingprice).val(data.SellingPrice);
                                           $("#" + mrp).val(data.MRP);
                                           $("#" + materialvalue).val(data.Material);
                                           $("#" + stkqty).text(data.Qty);
                                           $("#" + itemtax).text(data.taxPercent);
                                           $("#" + itemtaxvalue).val(data.taxPercent);
                                           $("#" + disper).val(data.discount);

                                           //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                                           //on each item which is applied
                                           var tax = data.taxPercent;
                                           if (tax != '0') {//if tax is '0' no need to add new taxnumber
                                               var taxcount = document.getElementById("ItemTaxCount").value;
                                               if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                                   $("#ItemTaxNumber" + taxcount).val(tax);
                                                   document.getElementById("AddTaxes").style.display = "inline";
                                                   $("#AddedTax1").text(tax + "%");
                                               }
                                               else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                                   var taxpresent = 0;
                                                   for (var i = 1; i <= taxcount; i++) {
                                                       var taxno = "ItemTaxNumber" + i;
                                                       //if tax is already present then no need to make other taxnumbers
                                                       if (tax == $("#" + taxno).val()) {
                                                           taxpresent++;
                                                       }
                                                   }
                                                   if (taxpresent == 0) {
                                                       taxcount++;
                                                       var taxno = "ItemTaxNumber" + taxcount;
                                                       var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                                       $("#AllTaxesNumbersValue").append(data);
                                                       var addedtaxno = "AddedTax" + taxcount;
                                                       var addedtaxamount = "AddedTaxAmount" + taxcount;
                                                       var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                                       var addedamount = "AddedAmount" + taxcount;
                                                       var addedamounthdn = "AddedAmounthdn" + taxcount;
                                                       var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                                       newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                                       newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                                       $("#AddTaxes").append(newlabel);
                                                       $("#ItemTaxCount").val(taxcount);
                                                   }
                                               }
                                           }
                                           var CostPrice = +$("#" + costprice).val();
                                           var Tax = +$("#" + itemtaxvalue).val();
                                           var MRP = +$("#" + mrp).val();
                                           taxoncostprice = (CostPrice * Tax) / 100;
                                           var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                                           var Sellingprice = MRP - (MRP * +taxpercentoncostprice / 100);
                                           $("#SellingPrice" + rowid).val(Sellingprice.toFixed(2));
                                           //DISPLAY ITEM DEATILS POP-UP ON ITEM CHANGE EVENT..
                                           window.open("/ProcessingQuotation/SOItemDetailsPopUp?ItemCode=" + itemcode, "_target", "width=1000,height=200,top=280px,left=200px");
                                       });
                                }
                                else { alertbox("Please Select Item First"); }
                            }
                        }
                    });
                    $("#hdnRowCount").val(rowid);
                }
            }
        }
    })
</script>

<script type="text/javascript">
    function ShowQuantity(row) {
        var itemcode = document.getElementById("ItemCode" + row).value;
        window.open("/Stock/ShowAllQuantity?code=" + itemcode, "_target", "width=500,height=300,top=150px,left=400px");
    }
</script>

@*GET LOGIN EMPLOYEE DETAILS (PREPAID BY)*@
@*<script type="text/javascript">
    $("#AcceptedByDDL").change(function () {
        var empname = $(this).val();
        $.getJSON("/ProcessingQuotation/GetEmployeeDetails", { name: empname },
                function (data) {
                    document.getElementById("emailid").innerHTML = data.Email;
                    document.getElementById("contactnoid").innerHTML = data.MobileNo;

                    document.getElementById("SalesOrderDetails_PrepareEmail").value = data.Email;
                    document.getElementById("SalesOrderDetails_PrepareContact").value = data.MobileNo;
                });
    });
</script>*@

<script type="text/javascript">
    function CheckRegistered(value) {
        if (value == 'yes') {
            document.getElementById("SalesOrderDetails_ClientType").value = "Registered";
            if (document.getElementById("SalesOrderDetails_ConsumeResell").value == "Reseller") {
                if (document.getElementById("SalesBillDetails_ClientState").value != "Maharashtra") {
                    $("#ddlformtypes").val("").attr("selected", "selected");
                    document.getElementById("YesRadioButton").disabled = false;
                    document.getElementById("NoRadioButton").checked = true;
                    document.getElementById("NoRadioButton").disabled = false;
                    document.getElementById("formtypeid").style.display = "none";
                }
            }
            else if (document.getElementById("SalesOrderDetails_ConsumeResell").value == "Consumer") {
                document.getElementById("YesRadioButton").disabled = true;
                document.getElementById("NoRadioButton").disabled = true;
            }
        }
        else if (value == "no") {
            document.getElementById("SalesOrderDetails_ClientType").value = "Non-Registered";
            $("#ddlformtypes").val("").attr("selected", "selected");
            document.getElementById("YesRadioButton").disabled = true;
            document.getElementById("NoRadioButton").checked = true;
            document.getElementById("NoRadioButton").disabled = true;
            document.getElementById("formtypeid").style.display = "none";
        }

        else if (value == "Consumer") {
            document.getElementById("SalesOrderDetails_ConsumeResell").value = "Consumer";
            $("#ddlformtypes").val("").attr("selected", "selected");
            $("#YesRadioButton").attr("disabled", true);
            $("#NoRadioButton").attr("disabled", true);
            document.getElementById("NoRadioButton").checked = true;
            document.getElementById("formtypeid").style.display = "none";
        }
        else {
            document.getElementById("SalesOrderDetails_ConsumeResell").value = "Reseller";
            if (document.getElementById("SalesBillDetails_ClientState").value != "Maharashtra") {
                if (document.getElementById("SalesOrderDetails_ClientType").value == "Registered") {
                    $("#YesRadioButton").attr("disabled", false);
                    $("#NoRadioButton").attr("disabled", false);
                    document.getElementById("formtypeid").style.display = "none";
                }
            }
        }
    }

    function DisplayForm(code) {
        if (code == 'yes') {
            document.getElementById("ddlformtypes").disabled = false;
            document.getElementById("formtypeid").style.display = "inline";
        }
        else {
            document.getElementById("formtypeid").style.display = "none";
            $("#ddlformtypes").val("").attr("selected", true);
            document.getElementById("ddlformtypes").disabled = true;
            document.getElementById("ClientDetails_FormType").value = null;
        }
    }

</script>

@*CREATE NON-INVENTORY ITEMS*@
<script type="text/javascript">
    $(document).ready(function () {
        $("#NonInvButton").click(function () {

            var noninvrowid = document.getElementById("hdnRowCount").value;

            //CREATE NON INENTORY ITEMS IN SALES ORDER EDIT WITHOUT QUOTATION..
            if (document.getElementById("QuotationNo") == null) {
                var validationcounter = 0;
                for (i = 1; i <= noninvrowid; i++) {

                    //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                    var preitem = "ItemCode" + i;
                    var prenarration = "Narration" + i;
                    var prequantity = "Quantity" + i;
                    var presellingprice = "SellingPrice" + i;
                    var premrp = "MRP" + i;
                    var predisper = "DisPer" + i;
                    var predisrs = "DisRs" + i;
                    var ITEM = $("#" + preitem).val();
                    var QUANTITY = $("#" + prequantity).val();
                    var SELLINGPRICE = $("#" + presellingprice).val();
                    var MRP = $("#" + premrp).val();

                    if (ITEM == "") {
                        alertbox("Please Fill The Item");
                    }
                    else if (QUANTITY == "") {
                        alertbox("Please Fill The Quantity");
                    }
                    else if (SELLINGPRICE == "" || +SELLINGPRICE == 0) {
                        alertbox("Please Fill The SellingPrice");
                        return false;
                    }
                    else if (MRP == "" || +MRP == 0) {
                        alertbox("Please Fill The MRP");
                        return false;
                    }
                    else {
                        //DISABLED THE PREVIOUS ROW
                        if (document.getElementById(preitem) != null) {
                            document.getElementById(preitem).disabled = true;
                            document.getElementById(prenarration).disabled = true;
                            document.getElementById(prequantity).disabled = true;
                            document.getElementById(presellingprice).disabled = true;
                            document.getElementById(premrp).disabled = true;
                            document.getElementById(predisrs).disabled = true;
                            document.getElementById(predisper).disabled = true;
                        }
                    }
                }

                //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                if (validationcounter == 0) {

                    noninvrowid = +noninvrowid + 1;
                    row = "row" + noninvrowid;
                    noninvitem = "ItemCode" + noninvrowid;
                    noninvnarration = "Narration" + noninvrowid;
                    noninvsellingprice = "SellingPrice" + noninvrowid;
                    noninvmrp = "MRP" + noninvrowid;
                    noninvquantity = "Quantity" + noninvrowid;
                    noninvdisper = "DisPer" + noninvrowid;
                    noninvdisrs = "DisRs" + noninvrowid;
                    noninvunit = "Unit" + noninvrowid;
                    noninvamount = "Amount" + noninvrowid;
                    noninvitemtax = "ItemTax" + noninvrowid;
                    noninvproportionateamount = "proportionatetaxamount" + noninvrowid;

                    noninvcostprice = "CostPrice" + noninvrowid;
                    noninvitemname = "ItemName" + noninvrowid;
                    noninvdesigncode = "DesignCode" + noninvrowid;
                    noninvdesignname = "DesignName" + noninvrowid;
                    noninvbrand = "Brand" + noninvrowid;
                    noninvsize = "Size" + noninvrowid;
                    noninvdescriptionvalue = "DescriptionValue" + noninvrowid;
                    noninvcolorvalue = "ColorValue" + noninvrowid;
                    noninvmaterialvalue = "MaterialValue" + noninvrowid;
                    noninvunitvalue = "UnitValue" + noninvrowid;
                    noninvnumbertype = "NumberType" + noninvrowid;
                    noninvamountvalue = "AmountValue" + noninvrowid;
                    noninvitemtaxvalue = "ItemTaxValue" + noninvrowid;
                    noninvitemtaxamount = "ItemTaxAmount" + noninvrowid;
                    noninvproportionatetax = "proportionatetax" + noninvrowid;
                    noninvproportionatetaxvalue = "proportionatetaxvalue" + noninvrowid;
                    noninvproportionateamount = "proportionatetaxamount" + noninvrowid;
                    itemtype = "ItemType" + noninvrowid;

                    var unorderlist = $("#DynamicRows");

                    unorderlist.append(

                        "<tr id='" + row + "'>" +
                        "<td style='text-align:center; color:red'>" + noninvrowid + "</td>" +
                        "<td style='text-align:center'><select id='" + noninvitem + "' name='" + noninvitem + "' class='form-control'><option>Select Item</option></select><input type='hidden' id='" + noninvitemname + "' name='" + noninvitemname + "' /><input type='hidden' id='" + noninvdesigncode + "' name='" + noninvdesigncode + "' /><input type='hidden' id='" + noninvdesignname + "' name='" + noninvdesignname + "' /><input type='hidden' id='" + noninvbrand + "' name='" + noninvbrand + "' /><input type='hidden' id='" + noninvsize + "' name='" + noninvsize + "' /></td>" +
                        "<td style='text-align:center'><textarea class='form-control' style='text-align: center' id='" + noninvnarration + "' name='" + noninvnarration + "' placeholder='Narration' rows='1' ></textarea><input type='hidden' id='" + noninvdescriptionvalue + "' name='" + noninvdescriptionvalue + "'/></td>" +
                        "<td style='text-align:center'><label id='" + noninvunit + "' name='" + noninvunit + "' style='font-weight:normal'></label><input type='hidden' id='" + noninvunitvalue + "' name='" + noninvunitvalue + "'/><input type='hidden' name='" + noninvnumbertype + "' id='" + noninvnumbertype + "'><input type='hidden' id='" + noninvmaterialvalue + "' name='" + noninvmaterialvalue + "'/></td>" +
                        "<td style='text-align:center'><label>----</td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' name='" + noninvquantity + "' id='" + noninvquantity + "' autocomplete='off' onchange='CalculateAmount(" + noninvrowid + ',' + '\"quantity\"' + ")' style='text-align:center' placeholder='Qty' onkeypress='return AllowDecimal(event," + noninvrowid + ")'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvsellingprice + "' name='" + noninvsellingprice + "' onchange='CalculateAmount(" + noninvrowid + ',' + '\"sellingprice\"' + ")' style='font-weight:normal; text-align:center;' placeholder='Sell Price' onkeypress='return AllowNumbers(event)'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvmrp + "' name='" + noninvmrp + "' onchange='CalculateAmount(" + noninvrowid + ',' + '\"mrp\"' + ")' style='font-weight:normal; text-align:center;' placeholder='MRP' onkeypress='return AllowNumbers(event)'/><input type='hidden' id='" + noninvcostprice + "' name='" + noninvcostprice + "'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvdisper + "' name='" + noninvdisper + "' style='font-weight:normal; text-align:center' value='0' placeholder='0' onchange='CalculateAmount(" + noninvrowid + ',' + '\"percent\"' + ")' onkeypress='return AllowNumbers(event)' onkeypress='return AllowNumbers(event)'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvdisrs + "' name='" + noninvdisrs + "' style='font-weight:normal; text-align:center' value='0.00' placeholder='0.00' onchange='CalculateAmount(" + noninvrowid + ',' + '\"rps\"' + ")' onkeypress='return AllowNumbers(event)' onkeypress='return AllowNumbers(event)'/></td>" +
                        "<td style='text-align:center'><label id='" + noninvitemtax + "' name='" + noninvitemtax + "' style='font-weight:normal'></label><input type='hidden' id='" + noninvitemtaxvalue + "' name='" + noninvitemtaxvalue + "' value='0'/><input type='hidden' id='" + noninvitemtaxamount + "' name='" + noninvitemtaxamount + "' value='0'/></td>" +
                        "<td style='text-align:right'><label  id='" + noninvamount + "' name='" + noninvamount + "' style='font-weight:normal'></label><input type='hidden' id='" + noninvamountvalue + "' name='" + noninvamountvalue + "'/><input type='hidden' id='" + noninvcolorvalue + "' name='" + noninvcolorvalue + "'/></td>" +
                        "<td style='text-align:right'><label id='" + noninvproportionatetax + "'>0</label><input type='hidden' id='" + noninvproportionatetaxvalue + "' name='" + noninvproportionatetaxvalue + "' value='0' /><input type='hidden' id='" + noninvproportionateamount + "' name='" + noninvproportionateamount + "' value='0' /></td>" +
                        "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + noninvrowid + ")' class='fa fa-trash fa-lg' style='color:red;' /><input type='hidden' id='" + itemtype + "' name='" + itemtype + "' value='NonInventory' /></td>"
                    );

                    //FILL ITEM DDL ON ENTER CLICK EVENT
                    $.getJSON("/ProcessingQuotation/GetNonInventoryItems",
                    function (data) {

                        var select = $("#" + noninvitem);
                        select.empty();
                        select.append($('<option/>', {
                            text: "Select Item",
                            value: "",
                        }));
                        $.each(data, function (index, itemdata) {
                            select.append($('<option/>', {
                                text: itemdata.Text + " " + itemdata.Value,
                                value: itemdata.Value,
                            }));
                        });
                    });

                    //GET ITEM TAX AND ITEM DETAILS ON ITEM DDL CHANGE EVENT
                    var clientstate = document.getElementById("SalesOrderDetails_ClientState").value;
                    var clienttype = document.getElementById("SalesOrderDetails_ClientType").value;
                    var formtype = document.getElementById("ddlformtypes").value;
                    var consumeresell = document.getElementById("SalesOrderDetails_ConsumeResell").value;

                    if (document.getElementById("formtypeid").style.display == "none") {
                        formtype = "";
                    }
                    else {
                        if (document.getElementById("ddlformtypes").value == "") {
                            formtype = "";
                        }
                        else {
                            formtype = $("#ddlformtypes").val();
                        }

                    }

                    //GET ITEM DETAILS FROM ITEMNAME
                    $("#" + noninvitem).change(function () {
                        var noninvitemcode = document.getElementById(noninvitem).value;
                        var rowcount = document.getElementById("hdnRowCount").value;

                        // EMPTY STOCK QUANTITY AND QUANTITY BECOZ IF WE CHANGE ITEM PREVIOUS ROWS STOCK QUANTITY AND QUANTITY IS EMPTY
                        var qty = "Quantity" + rowcount;
                        var amt = "Amount" + rowcount;
                        var narration = "Narration" + rowcount;
                        var disrs = "DisRs" + rowcount;
                        var disper = "DisPer" + rowcount;
                        //IF ROW IS DELETED THEN QUANTITY WON'T GET ENABLED
                        if (document.getElementById(qty) != null) {
                            document.getElementById(qty).value = "";
                            document.getElementById(amt).innerHTML = "";
                            document.getElementById(narration).value = "";
                            document.getElementById(disrs).value = "";
                            document.getElementById(disper).value = "";
                            $("#SellingPrice" + noninvrowid).val("");
                            $("#MRP" + noninvrowid).val("");
                            $("#StkQty" + noninvrowid).text("");
                            $("#Unit" + noninvrowid).text("");
                            $("#ItemTax" + noninvrowid).text("");
                        }

                        //IF COUNTER IS 0 THAT MEANS CURRENT ITEM IS NOT SELECED IN PREVIOUS ROWS
                        var nonvalidationcount = 0;
                        for (i = 1; i < rowcount; i++) {
                            //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                            var preitem = "ItemCode" + i;
                            var prequantity = "Quantity" + i;
                            var presellingprice = "SellingPrice" + i;
                            var premrp = "MRP" + i;
                            var ITEM = $("#" + preitem).val();
                            var QUANTITY = $("#" + prequantity).val();
                            var SELLINGPRICE = $("#" + presellingprice).val();
                            var MRP = $("#" + premrp).val();

                            if (document.getElementById(preitem) != null) {
                                if (ITEM == "") {
                                    alertbox("Please Select The Item");
                                    nonvalidationcount++;
                                    $("#ItemCode" + noninvrowid).val("").attr("selected", true);
                                    break;
                                }
                                else if (QUANTITY == "") {
                                    alertbox("Please Fill The Quantity");
                                    nonvalidationcount++;
                                    $("#ItemCode" + noninvrowid).val("").attr("selected", true);
                                    break;
                                }
                                else if (SELLINGPRICE == "" || +SELLINGPRICE == 0) {
                                    alertbox("Please Fill The SellingPrice");
                                    nonvalidationcount++;
                                    $("#ItemCode" + noninvrowid).val("").attr("selected", true);
                                    break;
                                }
                                else if (MRP == "" || +MRP == 0) {
                                    alertbox("Please Fill The MRP");
                                    nonvalidationcount++;
                                    $("#ItemCode" + noninvrowid).val("").attr("selected", true);
                                    break;
                                }
                            }
                        }

                        if (nonvalidationcount == 0) {
                            //IF PREVIOUS ROW IS ENABLED FOR CHANGE THE QUANTITY BUT WE SELECT AGAIN DDL THEN DISABLED THIS ENABLES QUANTITY
                            for (i = 1; i < rowcount; i++) {
                                var QUANTITY = "Quantity" + i;
                                var SELLINGPRICE = "SellingPrice" + i;
                                var MRP = "MRP" + i;
                                var NARRATION = "Narration" + i;
                                var DISRS = "DisRs" + i;
                                var DISPER = "DisPer" + i;
                                //IF ROW IS DELETED THEN QUANTITY WON'T GET ENABLED
                                if (document.getElementById(QUANTITY) != null) {
                                    document.getElementById(QUANTITY).disabled = true;
                                    document.getElementById(SELLINGPRICE).disabled = true;
                                    document.getElementById(MRP).disabled = true;
                                    document.getElementById(DISPER).disabled = true;
                                    document.getElementById(DISRS).disabled = true;
                                    document.getElementById(NARRATION).disabled = true;
                                }
                            }

                            if (noninvitemcode != "") {
                                $.getJSON("/ProcessingQuotation/GetNonInvItemdetailsByItemCode", { ItemCode: noninvitemcode, ClientState: clientstate, ClientType: clienttype, FormType: formtype, ConsumeResell: consumeresell },
                                   function (data) {
                                       $("#" + noninvitemname).val(data.itemName);
                                       $("#" + noninvdesigncode).val(data.designCode);
                                       $("#" + noninvdesignname).val(data.designName);
                                       $("#" + noninvbrand).val(data.brandName);
                                       $("#" + noninvsize).val(data.size);
                                       $("#" + noninvdescriptionvalue).val(data.description);
                                       $("#" + noninvcolorvalue).val(data.colorCode);
                                       $("#" + noninvunit).text(data.unit);
                                       $("#" + noninvunitvalue).val(data.unit);
                                       $("#" + noninvnumbertype).val(data.NumberType);
                                       $("#" + noninvcostprice).val(data.costprice);
                                       $("#" + noninvsellingprice).val(data.sellingprice);
                                       $("#" + noninvmrp).val(data.mrp);
                                       $("#" + noninvmaterialvalue).val(data.typeOfMaterial);
                                       $("#" + noninvitemtax).text(data.taxPercent);
                                       $("#" + noninvitemtaxvalue).val(data.taxPercent);
                                       $("#" + noninvdisper).val(data.discount);
                                       $("#" + noninvdisrs).val(data.discountrps);

                                       //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                                       //on each item which is applied
                                       var tax = data.taxPercent;
                                       if (tax != '0') {//if tax is '0' no need to add new taxnumber
                                           var taxcount = document.getElementById("ItemTaxCount").value;
                                           if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                               $("#ItemTaxNumber" + taxcount).val(tax);
                                               document.getElementById("AddTaxes").style.display = "inline";
                                               $("#AddedTax1").text(tax + "%");
                                           }
                                           else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                               var taxpresent = 0;
                                               for (var i = 1; i <= taxcount; i++) {
                                                   var taxno = "ItemTaxNumber" + i;
                                                   //if tax is already present then no need to make other taxnumbers
                                                   if (tax == $("#" + taxno).val()) {
                                                       taxpresent++;
                                                   }
                                               }
                                               if (taxpresent == 0) {
                                                   taxcount++;
                                                   var taxno = "ItemTaxNumber" + taxcount;
                                                   var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                                   $("#AllTaxesNumbersValue").append(data);
                                                   var addedtaxno = "AddedTax" + taxcount;
                                                   var addedtaxamount = "AddedTaxAmount" + taxcount;
                                                   var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                                   var addedamount = "AddedAmount" + taxcount;
                                                   var addedamounthdn = "AddedAmounthdn" + taxcount;
                                                   var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                                   newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                                   newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                                   $("#AddTaxes").append(newlabel);
                                                   $("#ItemTaxCount").val(taxcount);
                                               }
                                           }
                                       }
                                       var CostPrice = +$("#" + noninvcostprice).val();
                                       var Tax = +$("#" + noninvitemtaxvalue).val();
                                       var MRP = +$("#" + noninvmrp).val();
                                       taxoncostprice = (CostPrice * Tax) / 100;
                                       var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                                       var Sellingprice = MRP - (MRP * +taxpercentoncostprice / 100);
                                       $("#SellingPrice" + noninvrowid).val(Sellingprice.toFixed(2));
                                   });
                                //DISPLAY ITEM DEATILS POP-UP ON ITEM CHANGE EVENT..
                            }
                            else { alertbox("Please Select Item First"); }
                        }
                    });
                    $("#hdnRowCount").val(noninvrowid);
                }
            }

                //CREATE NON INENTORY ITEMS IN SALES ORDER EDIT WITH QUOTATION..
            else {
                var validationcounter = 0;
                for (i = 1; i <= noninvrowid; i++) {
                    //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                    var preitem = "ItemCode" + i;
                    var prenarration = "Narration" + i;
                    var prequantity = "Quantity" + i;
                    var presellingprice = "SellingPrice" + noninvrowid;
                    var premrp = "MRP" + noninvrowid;
                    var predisper = "DisPer" + i;
                    var predisrs = "DisRs" + i;
                    var ITEM = $("#" + preitem).val();
                    var SELLINGPRICE = $("#" + presellingprice).val();
                    var MRP = $("#" + premrp).val();

                    if (document.getElementById(preitem) != null) {
                        if (ITEM == "") {
                            alertbox("Please Fill The Item");
                            validationcounter++;
                        }
                        else if (QUANTITY == "") {
                            alertbox("Please Fill The Quantity");
                            validationcounter++;
                        }
                        else if (SELLINGPRICE == "" || +SELLINGPRICE == 0) {
                            alertbox("Please Fill The SellingPrice");
                            return false;
                        }
                        else if (MRP == "" || +MRP == 0) {
                            alertbox("Please Fill The MRP");
                            return false;
                        }
                    }
                }

                //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                if (validationcounter == 0) {

                    //DISABLED THE PREVIOUS ROW
                    for (i = 1; i <= noninvrowid; i++) {
                        //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                        var preitem = "ItemCode" + i;
                        var prenarration = "Narration" + i;
                        var prequantity = "Quantity" + i;
                        var presellingprice = "SellingPrice" + i;
                        var premrp = "MRP" + i;
                        var predisper = "DisPer" + i;
                        var predisrs = "DisRs" + i;

                        if (document.getElementById(preitem) != null) {
                            document.getElementById(preitem).disabled = true;
                            document.getElementById(prenarration).disabled = true;
                            document.getElementById(prequantity).disabled = true;
                            document.getElementById(presellingprice).disabled = true;
                            document.getElementById(premrp).disabled = true;
                            document.getElementById(predisrs).disabled = true;
                            document.getElementById(predisper).disabled = true;
                        }
                    }

                    noninvrowid = +noninvrowid + 1;
                    row = "row" + noninvrowid;
                    noninvitem = "ItemCode" + noninvrowid;
                    noninvitemname = "ItemName" + noninvrowid;
                    noninvnarration = "Narration" + noninvrowid;
                    noninvsellingprice = "SellingPrice" + noninvrowid;
                    noninvmrp = "MRP" + noninvrowid;
                    noninvdisper = "DisPer" + noninvrowid;
                    noninvdisrs = "DisRs" + noninvrowid;
                    noninvquotquantity = "QuotQty" + noninvrowid;
                    noninvquantity = "Quantity" + noninvrowid;
                    noninvunit = "Unit" + noninvrowid;
                    noninvamount = "Amount" + noninvrowid;
                    noninvitemtax = "ItemTax" + noninvrowid;
                    noninvdesigncode = "DesignCode" + noninvrowid;
                    noninvbalance = "Balance" + noninvrowid;
                    noninvproportionateamount = "proportionatetaxamount" + noninvrowid;

                    noninvcostprice = "CostPrice" + noninvrowid;
                    noninvitemcodevalue = "ItemCodeValue" + noninvrowid;
                    noninvdescriptionvalue = "DescriptionValue" + noninvrowid;
                    noninvdesigncode = "DesignCode" + noninvrowid;
                    noninvdesignname = "DesignName" + noninvrowid;
                    noninvbrand = "Brand" + noninvrowid;
                    noninvsize = "Size" + noninvrowid;
                    noninvcolorvalue = "ColorValue" + noninvrowid;
                    noninvmaterialvalue = "MaterialValue" + noninvrowid;
                    noninvunitvalue = "UnitValue" + noninvrowid;
                    noninvnumbertype = "NumberType" + noninvrowid;
                    noninvamountvalue = "AmountValue" + noninvrowid;
                    noninvitemtaxvalue = "ItemTaxValue" + noninvrowid;
                    noninvitemtaxamount = "ItemTaxAmount" + noninvrowid;
                    noninvproportionatetax = "proportionatetax" + noninvrowid;
                    noninvproportionatetaxvalue = "proportionatetaxvalue" + noninvrowid;
                    noninvproportionateamount = "proportionatetaxamount" + noninvrowid;
                    itemtype = "ItemType" + noninvrowid;

                    var unorderlist = $("#DynamicRows");

                    unorderlist.append(

                        "<tr id='" + row + "'>" +
                        "<td style='text-align:center; color:red'>" + noninvrowid + "</td>" +
                        "<td style='text-align:center'><select id='" + noninvitem + "' name='" + noninvitem + "' class='form-control'><option>Select Item</option></select><input type='hidden' id='" + noninvitemname + "' name='" + noninvitemname + "' /><input type='hidden' id='" + noninvdesigncode + "' name='" + noninvdesigncode + "' /><input type='hidden' id='" + noninvdesignname + "' name='" + noninvdesignname + "' /><input type='hidden' id='" + noninvbrand + "' name='" + noninvbrand + "' /><input type='hidden' id='" + noninvsize + "' name='" + noninvsize + "' /></td>" +
                        "<td style='text-align:center'><textarea class='form-control' style='text-align: center' id='" + noninvnarration + "' name='" + noninvnarration + "' placeholder='Narration' rows='1' ></textarea><input type='hidden' id='" + noninvdescriptionvalue + "' name='" + noninvdescriptionvalue + "'/></td>" +
                        "<td style='text-align:center'><label id='" + noninvunit + "' name='" + noninvunit + "' style='font-weight:normal'></label><input type='hidden' id='" + noninvunitvalue + "' name='" + noninvunitvalue + "'/><input type='hidden' name='" + noninvnumbertype + "' id='" + noninvnumbertype + "'><input type='hidden' id='" + noninvmaterialvalue + "' name='" + noninvmaterialvalue + "'/></td>" +
                        "<td><label>----</label><input type='hidden' id='" + noninvcolorvalue + "' name='" + noninvcolorvalue + "'/></td>" +
                        "<td style='text-align:center'><label id='" + noninvquotquantity + "'>----</label></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input  style='text-align:center' type='text' class='form-control' name='" + noninvquantity + "' id='" + noninvquantity + "' autocomplete='off' onchange='CalculateAmount(" + noninvrowid + ',' + '\"quantity\"' + ")' style='text-align:center' placeholder='Qty' onkeypress='return AllowDecimal(event," + noninvrowid + ")' /></td>" +
                        "<td style='text-align:center'><label id='" + noninvbalance + "' style='font-weight:normal'>----</label></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvsellingprice + "' name='" + noninvsellingprice + "' onchange='CalculateAmount(" + noninvrowid + ',' + '\"sellingprice\"' + ")' style='font-weight:normal; text-align:center;' placeholder='Sell Price' onkeypress='return AllowNumbers(event)'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvmrp + "' name='" + noninvmrp + "' onchange='CalculateAmount(" + noninvrowid + ',' + '\"mrp\"' + ")' style='font-weight:normal; text-align:center;' placeholder='MRP' onkeypress='return AllowNumbers(event)'/><input type='hidden' id='" + noninvcostprice + "' name='" + noninvcostprice + "'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvdisper + "' name='" + noninvdisper + "' style='font-weight:normal; text-align:center' value='0' placeholder='0%' onchange='CalculateAmount(" + noninvrowid + ',' + '\"percent\"' + ")' onkeypress='return AllowNumbers(event)' onkeypress='return AllowNumbers(event)'/></td>" +
                        "<td style='text-align:center' class='col-lg-1 col-md-1'><input type='text' class='form-control' id='" + noninvdisrs + "' name='" + noninvdisrs + "' style='font-weight:normal; text-align:center' value='0' placeholder='0' onchange='CalculateAmount(" + noninvrowid + ',' + '\"rps\"' + ")' onkeypress='return AllowNumbers(event)' onkeypress='return AllowNumbers(event)'/></td>" +
                        "<td style='text-align:center'><label id='" + noninvitemtax + "' name='" + noninvitemtax + "' style='font-weight:normal'></label><input type='hidden' id='" + noninvitemtaxvalue + "' name='" + noninvitemtaxvalue + "' value='0'/><input type='hidden' id='" + noninvitemtaxamount + "' name='" + noninvitemtaxamount + "' value='0'/></td>" +
                        "<td style='text-align:right'><label  id='" + noninvamount + "' name='" + noninvamount + "' style='font-weight:normal'>0</label><input type='hidden' id='" + noninvamountvalue + "' name='" + noninvamountvalue + "'/></td>" +
                        "<td style='text-align:right'><label id='" + noninvproportionatetax + "'>0</label><input type='hidden' id='" + noninvproportionatetaxvalue + "' name='" + noninvproportionatetaxvalue + "' value='0' /><input type='hidden' id='" + noninvproportionateamount + "' name='" + noninvproportionateamount + "' value='0' /></td>" +
                        "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + noninvrowid + ")' class='fa fa-trash fa-lg' style='color:red;' /><input type='hidden' id='" + itemtype + "' name='" + itemtype + "' value='NonInventory' /></td>"
                    );

                    //FILL ITEM DDL ON ENTER CLICK EVENT
                    $.getJSON("/ProcessingQuotation/GetNonInventoryItems",
                    function (data) {

                        var select = $("#" + noninvitem);
                        select.empty();
                        select.append($('<option/>', {
                            text: "Select Item",
                            value: "",
                        }));
                        $.each(data, function (index, itemdata) {
                            select.append($('<option/>', {
                                text: itemdata.Value + " " + itemdata.Text,
                                value: itemdata.Value,
                            }));
                        });
                    });

                    //GET ITEM TAX AND ITEM DETAILS ON ITEM DDL CHANGE EVENT
                    var clientstate = document.getElementById("SalesOrderDetails_ClientState").value;
                    var clienttype = document.getElementById("SalesOrderDetails_ClientType").value;
                    var formtype = document.getElementById("ddlformtypes").value;
                    var consumeresell = document.getElementById("SalesOrderDetails_ConsumeResell").value;

                    if (document.getElementById("formtypeid").style.display == "none") {
                        formtype = "";
                    }
                    else {
                        if (document.getElementById("ddlformtypes").value == "") {
                            formtype = "";
                        }
                        else {
                            formtype = $("#ddlformtypes").val();
                        }
                    }

                    //GET ITEM DETAILS FROM ITEMNAME
                    $("#" + noninvitem).change(function () {
                        var noninvitemcode = document.getElementById(noninvitem).value;
                        var rowcount = document.getElementById("hdnRowCount").value;

                        // EMPTY STOCK QUANTITY AND QUANTITY BECOZ IF WE CHANGE ITEM PREVIOUS ROWS STOCK QUANTITY AND QUANTITY IS EMPTY
                        var qty = "Quantity" + rowcount;
                        var amt = "Amount" + rowcount;
                        var narration = "Narration" + rowcount;
                        var disrs = "DisRs" + rowcount;
                        var disper = "DisPer" + rowcount;
                        //IF ROW IS DELETED THEN QUANTITY WON'T GET ENABLED
                        if (document.getElementById(qty) != null) {
                            document.getElementById(qty).value = "";
                            document.getElementById(amt).innerHTML = "";
                            document.getElementById(narration).value = "";
                            document.getElementById(disrs).value = "";
                            document.getElementById(disper).value = "";
                            $("#SellingPrice" + noninvrowid).val("");
                            $("#MRP" + noninvrowid).val("");
                            $("#Color" + noninvrowid).text("");
                            $("#Unit" + noninvrowid).text("");
                            $("#ItemTax" + noninvrowid).text("");
                        }

                        //IF COUNTER IS 0 THAT MEANS CURRENT ITEM IS NOT SELECED IN PREVIOUS ROWS
                        var nonvalidationcount = 0;
                        for (i = 1; i < rowcount; i++) {
                            //VALIDATIONS ON QUANTITY OR ITEM IS EMPTY
                            var preitem = "ItemCode" + i;
                            var prequantity = "Quantity" + i;
                            var presellingprice = "SellingPrice" + i;
                            var premrp = "MRP" + i;
                            var ITEM = $("#" + preitem).val();
                            var QUANTITY = $("#" + prequantity).val();
                            var SELLINGPRICE = $("#" + presellingprice).val();
                            var MRP = $("#" + premrp).val();

                            if (document.getElementById(preitem) != null) {
                                if (ITEM == "") {
                                    alertbox("Please Fill The Item");
                                    nonvalidationcount++;
                                    $("#ItemCode" + noninvrowid).val("").attr("selected", true);
                                    break;
                                }
                                else if (QUANTITY == "") {
                                    alertbox("Please Fill The Quantity");
                                    nonvalidationcount++;
                                    $("#ItemCode" + noninvrowid).val("").attr("selected", true);
                                    break;
                                }
                                else if (SELLINGPRICE == "" || +SELLINGPRICE == 0) {
                                    alertbox("Please Fill The SellingPrice");
                                    nonvalidationcount++;
                                    $("#ItemCode" + noninvrowid).val("").attr("selected", true);
                                    break;
                                }
                                else if (MRP == "" || +MRP == 0) {
                                    alertbox("Please Fill The MRP");
                                    nonvalidationcount++;
                                    $("#ItemCode" + noninvrowid).val("").attr("selected", true);
                                    break;
                                }
                            }
                        }

                        if (nonvalidationcount == 0) {
                            //IF PREVIOUS ROW IS ENABLED FOR CHANGE THE QUANTITY BUT WE SELECT AGAIN DDL THEN DISABLED THIS ENABLES QUANTITY
                            for (i = 1; i < rowcount; i++) {
                                var QUANTITY = "Quantity" + i;
                                var SELLINGPRICE = "SellingPrice" + i;
                                var MRP = "MRP" + i;
                                var NARRATION = "Narration" + i;
                                var DISRS = "DisRs" + i;
                                var DISPER = "DisPer" + i;
                                //IF ROW IS DELETED THEN QUANTITY WON'T GET ENABLED
                                if (document.getElementById(QUANTITY) != null) {
                                    document.getElementById(QUANTITY).disabled = true;
                                    document.getElementById(SELLINGPRICE).disabled = true;
                                    document.getElementById(MRP).disabled = true;
                                    document.getElementById(DISPER).disabled = true;
                                    document.getElementById(DISRS).disabled = true;
                                    document.getElementById(NARRATION).disabled = true;
                                }
                            }
                            if (noninvitemcode != "") {
                                $.getJSON("/ProcessingQuotation/GetNonInvItemdetailsByItemCode", { ItemCode: noninvitemcode, ClientState: clientstate, ClientType: clienttype, FormType: formtype, ConsumeResell: consumeresell },
                                   function (data) {
                                       $("#" + noninvitemname).val(data.itemName);
                                       $("#" + noninvdesigncode).val(data.designCode);
                                       $("#" + noninvdesignname).val(data.designName);
                                       $("#" + noninvbrand).val(data.brandName);
                                       $("#" + noninvsize).val(data.size);
                                       $("#" + noninvdescriptionvalue).val(data.description);
                                       $("#" + noninvcolorvalue).val(data.colorCode);
                                       $("#" + noninvunit).text(data.unit);
                                       $("#" + noninvunitvalue).val(data.unit);
                                       $("#" + noninvnumbertype).val(data.NumberType);
                                       $("#" + noninvcostprice).val(data.costprice);
                                       $("#" + noninvsellingprice).val(data.sellingprice);
                                       $("#" + noninvmrp).val(data.mrp);
                                       $("#" + noninvmaterialvalue).val(data.typeOfMaterial);
                                       $("#" + noninvitemtax).text(data.taxPercent);
                                       $("#" + noninvitemtaxvalue).val(data.taxPercent);
                                       $("#" + noninvdisper).val(data.discount);
                                       $("#" + noninvdisrs).val(data.discountrps);

                                       //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                                       //on each item which is applied
                                       var tax = data.taxPercent;
                                       if (tax != '0') {//if tax is '0' no need to add new taxnumber
                                           var taxcount = document.getElementById("ItemTaxCount").value;
                                           if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                               $("#ItemTaxNumber" + taxcount).val(tax);
                                               document.getElementById("AddTaxes").style.display = "inline";
                                               $("#AddedTax1").text(tax + "%");
                                           }
                                           else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                               var taxpresent = 0;
                                               for (var i = 1; i <= taxcount; i++) {
                                                   var taxno = "ItemTaxNumber" + i;
                                                   //if tax is already present then no need to make other taxnumbers
                                                   if (tax == $("#" + taxno).val()) {
                                                       taxpresent++;
                                                   }
                                               }
                                               if (taxpresent == 0) {
                                                   taxcount++;
                                                   var taxno = "ItemTaxNumber" + taxcount;
                                                   var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                                   $("#AllTaxesNumbersValue").append(data);
                                                   var addedtaxno = "AddedTax" + taxcount;
                                                   var addedtaxamount = "AddedTaxAmount" + taxcount;
                                                   var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                                   var addedamount = "AddedAmount" + taxcount;
                                                   var addedamounthdn = "AddedAmounthdn" + taxcount;
                                                   var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                                   newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                                   newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                                   $("#AddTaxes").append(newlabel);
                                                   $("#ItemTaxCount").val(taxcount);
                                               }
                                           }
                                       }
                                       var CostPrice = +$("#" + noninvcostprice).val();
                                       var Tax = +$("#" + noninvitemtaxvalue).val();
                                       var MRP = +$("#" + noninvmrp).val();
                                       taxoncostprice = (CostPrice * Tax) / 100;
                                       var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                                       var Sellingprice = MRP - (MRP * +taxpercentoncostprice / 100);
                                       $("#SellingPrice" + noninvrowid).val(Sellingprice.toFixed(2));
                                   });
                            }
                            else { alertbox("Please Select Item First"); }
                        }
                    });
                    $("#hdnRowCount").val(noninvrowid);
                }
            }
        });
    });
</script>
@*ENABLED DYNAMIC ROWS*@
<script type="text/javascript">
    $(document).ready(function () {
        $("#Submit").click(function () {

            var advpay = document.getElementById("AdvancePayment").value;
            var validationcounter = 0;
            if (advpay == 0 || advpay == "") {
                alertbox("Advance Payment Can Not Be Zero Or Empty..");
                validationcounter++;
                return false;
            }

            if ($("#ClientName").val() == "" || $("#ddltypeofmode").val() == "" || $("#ddltransportnames").val() == "") {
                validationcounter++;
            }

            document.getElementById("ClientName").disabled = false;
            if (document.getElementById("ddlformtypes").style.display != "none") {
                $("#ddlformtypes").attr("disabled", false);
            }

            @*VALIDATIONS ON WITH QUOTATION SALES ORDER*@
            var count = document.getElementById("hdnRowCount").value;
            var lastitem = "ItemCode" + count;
            var lastquantity = "Quantity" + count;
            var lastsellingprice = "SellingPrice" + count;
            var lastmrp = "MRP" + count;

            if (document.getElementById(lastitem) != null) {
                //VALIDATIONS ON IF LAST ROW DATA IS EMPTY AND CLICK ON SAVE BUTTON..
                if ($("#" + lastitem).text() == "") {
                    alertbox("Please Select The Item");
                    validationcounter++;
                    return false;
                }
                else if ($("#" + lastquantity).val() == "") {
                    alertbox("Please Fill The Quantity");
                    validationcounter++;
                    return false;
                }
                else if ($("#" + lastsellingprice).val() == "" || (+$("#" + lastsellingprice).val()) == 0) {
                    alertbox("Please Fill The SellingPrice");
                    validationcounter++;
                    return false;
                }
                else if ($("#" + lastmrp).val() == "" || (+$("#" + lastmrp).val()) == 0) {
                    alertbox("Please Fill The MRP");
                    validationcounter++;
                    return false;
                }
                    // IF ALL DATA IS FILLED PROPERLY THEN SAVE ROWS..
                else {
                    var emptyrowcount = 0;
                    var emptyrowqty = 0;
                    for (var i = 1; i <= count; i++) {
                        var item = "ItemCode" + i;
                        var narration = "Narration" + i;
                        var quantity = "Quantity" + i;
                        var sellingprice = "SellingPrice" + i;
                        var mrp = "MRP" + i;
                        var disrs = "DisRs" + i;
                        var disper = "DisPer" + i;
                        if (document.getElementById(item) != null) {
                            document.getElementById(item).disabled = false;
                            document.getElementById(narration).disabled = false;
                            document.getElementById(quantity).disabled = false;
                            document.getElementById(sellingprice).disabled = false;
                            document.getElementById(mrp).disabled = false;
                            document.getElementById(disrs).disabled = false;
                            document.getElementById(disper).disabled = false;
                            if (+$("#" + quantity).val() == 0) {
                                emptyrowqty++;
                            }
                        }
                        else {
                            emptyrowcount++;
                        }
                    }
                    if (emptyrowcount == count) {
                        alertbox("Please Insert At Least One Item..");
                        validationcounter++;
                        return false;
                    }
                    else if (emptyrowqty == count) {
                        alertbox("Quantity Of All Items Cannot Be 0");
                        validationcounter++;
                        return false;
                    }
                }
            }
                // IF LAST ROW IS DELETED THEN SAVE ROWS AS IT IS..
            else {
                var emptyrowcount = 0;
                var emptyrowqty = 0;
                for (var i = 1; i <= count; i++) {
                    var item = "ItemCode" + i;
                    var narration = "Narration" + i;
                    var outquantity = "Quantity" + i;
                    var sellingprice = "SellingPrice" + i;
                    var mrp = "MRP" + i;
                    var disrs = "DisRs" + i;
                    var disper = "DisPer" + i;
                    if (document.getElementById(item) != null) {
                        document.getElementById(item).disabled = false;
                        document.getElementById(narration).disabled = false;
                        document.getElementById(outquantity).disabled = false;
                        document.getElementById(sellingprice).disabled = false;
                        document.getElementById(mrp).disabled = false;
                        document.getElementById(disrs).disabled = false;
                        document.getElementById(disper).disabled = false;
                        if (+$("#" + quantity).val() == 0) {
                            emptyrowqty++;
                        }
                    }
                    else {
                        emptyrowcount++;
                    }
                }
                if (emptyrowcount == count) {
                    alertbox("Please Insert At Least One Item..");
                    validationcounter++;
                    return false;
                }
                else if (emptyrowqty == count) {
                    alertbox("Quantity Of All Items Cannot Be 0");
                    validationcounter++;
                    return false;
                }
            }

            if (validationcounter == 0) {
                setTimeout(function () {
                    document.getElementById("Submit").disabled = true;
                });
            }
        });
    });
</script>

@*SALESMAN NAME AUTO COMPLETE*@
<script type="text/javascript">
    $(document).ready(function () {
        $("#SalesMan").autocomplete({
            source: "/ProcessingQuotation/GetSalesManName",
            minLength: 1,
            select: function (event, ui) {
                if (ui.item) {
                    $("#SalesMan").val(ui.item.value);
                    var empname = document.getElementById("SalesMan").value;

                    $.getJSON("/SalesBill/GetEmployeeDetails", { name: empname },
                   function (data) {
                       document.getElementById("SalesOrderDetails_SalesPersonContact").value = data.MobileNo;
                       document.getElementById("SalesOrderDetails_SalesPersonEmail").value = data.Email;
                       document.getElementById("SalesOrderDetails_SalesPersonAddress").value = data.Address;
                       document.getElementById("SalesOrderDetails_SalesPersonDesignation").value = data.Designation;
                   });
                }
            }
        });
    })
</script>

@using (Html.BeginForm("GetDetailsBySalesOrderNo", "ProcessingQuotation", FormMethod.Post))
{
    @Html.HiddenFor(model => model.SalesOrderDetails.Date)
    @Html.HiddenFor(model => model.SalesOrderDetails.ShopCode)
    @Html.HiddenFor(model => model.SalesOrderDetails.ShopName)
    @Html.HiddenFor(model => model.SalesOrderDetails.ShopAddress)
    @Html.HiddenFor(model => model.SalesOrderDetails.ShopContactPerson)
    @Html.HiddenFor(model => model.SalesOrderDetails.ShopEmail)
    @Html.HiddenFor(model => model.SalesOrderDetails.DeliveryDate)
    @Html.HiddenFor(model => model.SalesOrderDetails.Id)
    @Html.HiddenFor(model => model.SalesOrderDetails.Status)
    @Html.HiddenFor(model => model.SalesOrderDetails.ModifiedOn) 
    @Html.HiddenFor(model => model.SalesOrderDetails.OrderNo)
    @Html.HiddenFor(model => model.SalesOrderDetails.ClientAddress)
    @Html.HiddenFor(model => model.SalesOrderDetails.ClientContactNo)
    @Html.HiddenFor(model => model.SalesOrderDetails.ClientEmail)
    @Html.HiddenFor(model => model.SalesOrderDetails.ClientState)
    @Html.HiddenFor(model => model.SalesOrderDetails.ClientType)
    @Html.HiddenFor(model => model.SalesOrderDetails.ConsumeResell)
    @Html.HiddenFor(model => model.SalesOrderDetails.TransportName)
    @Html.HiddenFor(model => model.SalesOrderDetails.TransportMode)
    @Html.HiddenFor(model => model.SalesOrderDetails.GrandTotal)
    @Html.HiddenFor(model => model.SalesOrderDetails.TotalDiscount)
    @Html.HiddenFor(model => model.SalesOrderDetails.TotalAmount)
    @Html.HiddenFor(model => model.SalesOrderDetails.TotalTaxAmount)
    @Html.HiddenFor(model => model.SalesOrderDetails.QuotationDate)
    @Html.HiddenFor(model => model.SalesOrderDetails.QuotationNo)
    @Html.HiddenFor(model => model.SalesOrderDetails.PreparedBy)
    @Html.HiddenFor(model => model.SalesOrderDetails.PreparedEmail)
    @Html.HiddenFor(model => model.SalesOrderDetails.PreparedContact)
    @Html.HiddenFor(model => model.SalesOrderDetails.ProcessedIn)
    @Html.HiddenFor(model => model.SalesOrderDetails.SendingStatus)
    @Html.HiddenFor(model => model.SalesOrderDetails.SalesPersonAddress)
    @Html.HiddenFor(model => model.SalesOrderDetails.SalesPersonDesignation)
    @Html.HiddenFor(model => model.SalesOrderDetails.SalesPersonContact)
    @Html.HiddenFor(model => model.SalesOrderDetails.SalesPersonEmail)
    @Html.HiddenFor(model => model.SalesOrderDetails.RefundToClient)
    @Html.HiddenFor(model => model.SalesOrderDetails.AdjustedAmount)
    @Html.HiddenFor(model => model.SalesOrderDetails.RefundAmount)
   
    <input type="hidden" id="transportname" value="@Model.SalesOrderDetails.TransportName" /> 
    <input type="hidden" id="discountType" value="percent" />
    <input type="hidden" id="hdnRowCount" name="hdnRowCount" value="@Model.SalesOrderItemList.Count()" /> 
    <input type="hidden" id="AlreadyPresentItems" value="0" />
    <div id="AllTaxesNumbersValue">
        @if (Model.InventoryTaxList.Count() == 0)
        {
            <input type="hidden" id="ItemTaxCount" name="ItemTaxCount" value="1" />
            <input type="hidden" id="ItemTaxNumber1" name="ItemTaxNumber1" value="0" />
        }
        else
        {
            <input type="hidden" id="ItemTaxCount" name="ItemTaxCount" value="@Model.InventoryTaxList.Count()" />
        }
    </div>
    <audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
        <source src="" type="audio/ogg" />
    </audio>
    <table style="border: 1px double; width: 100%">
        <tr>
            <td>
                <div class="col-lg-12 col-md-12">

                    <div class="col-lg-4 col-md-4" style="border-right: 1px solid #999; height: 230px;">
                        <div style="height: 10px"></div>
                        <div class="row">
                            <label>Client Name<label style="color: red">*</label></label><br />
                            <div class="col-lg-10 col-md-10">
                                <div class="row">
                                    @Html.TextBoxFor(model => model.SalesOrderDetails.ClientName, new { id = "ClientName", @placeholder = "Client Name", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SalesOrderDetails.ClientName, null, new { style = "color:red" })
                                     @if (Model.SalesOrderDetails.ClientState != "Maharashtra")
                                    {
                                        <script type="text/javascript">
                                            document.getElementById("ClientName").disabled = true;
                                        </script>
                                    }
                                </div>
                            </div>
                        </div>
                        <div style="height: 7px"></div>
                        <div class="row">
                            <label>Address: &nbsp</label><label id="Client_Address" style="font-weight: normal">@Model.SalesOrderDetails.ClientAddress</label><br />
                            <label>Contact Number: &nbsp</label><label id="Client_Contact" style="font-weight: normal">@Model.SalesOrderDetails.ClientContactNo</label><br />
                            <label>Email: &nbsp</label><label id="Client_Email" style="font-weight: normal">@Model.SalesOrderDetails.ClientEmail</label><br />
                            <label>State: &nbsp</label><label id="Client_State" style="font-weight: normal">@Model.SalesOrderDetails.ClientState</label><br />
                        </div>
                    </div>

                    <div class="col-lg-4 col-md-4" style="border-right: 1px solid #999; height: 230px;">
                        <div>
                            <div class="row" style="height: 55%">
                                <div class="col-lg-12 col-md-12">
                                    <div style="height: 10px"></div>

                                    <div>
                                        <div class="col-lg-4 col-md-4">
                                            <div class="row">
                                                <label>Client Type</label>
                                            </div>
                                        </div>
                                        <div class="col-lg-8 col-md-8">
                                            <div class="row">
                                                <input type="radio" id="Registered" name="Registered" onclick="CheckRegistered('yes')" />
                                                Registered
                                                    <input type="radio" id="NonRegistered" name="Registered" onclick="CheckRegistered('no')" />
                                                NonRegistered
                                                    <br />

                                                @{
                                                    <input type="hidden" id="clienttype" value="@Model.SalesOrderDetails.ClientType" />
                                                    <script>
                                                        var clientype = document.getElementById("clienttype").value;
                                                        if (clientype == "Registered") {
                                                            $("#Registered").attr("checked", true);
                                                        }
                                                        else {
                                                            $("#NonRegistered").attr("checked", true);
                                                        }
                                                    </script>
                                                }

                                                <input type="radio" id="Consumer" name="ConsumeResell" onclick="CheckRegistered('Consumer')" />
                                                Consumer
                                                    <input type="radio" id="Reseller" name="ConsumeResell" onclick="CheckRegistered('Reseller')" />
                                                Reseller
                                            
                                             @{
                                                 <input type="hidden" id="consumeresell" value="@Model.SalesOrderDetails.ConsumeResell" />
                                                 <script>
                                                     var clientype = document.getElementById("consumeresell").value;
                                                     if (clientype == "Consumer") {
                                                         $("#Consumer").attr("checked", true);
                                                     }
                                                     else {
                                                         $("#Reseller").attr("checked", true);
                                                     }
                                                 </script>
                                             }

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-12 col-md-12">
                                        <div style="height: 5px"></div>
                                    </div>

                                    <div>
                                        <div class="col-lg-5 col-md-5">
                                            <div class="row">
                                                <label for="exampleInputSalesTax">Form Applicable</label>
                                            </div>
                                        </div>
                                        <div class="col-lg-2 col-md-2">
                                            <div class="row">
                                                <input type="radio" id="YesRadioButton" name="RadioButton" onclick="DisplayForm('yes')" />Yes
                                            </div>
                                        </div>
                                        <div class="col-lg-3 col-md-3">
                                            <input type="radio" id="NoRadioButton" name="RadioButton" onclick="DisplayForm('no')" />No                                   
                                        </div>
                                        <div class="col-lg-2 col-md-2"></div>
                                        @{ 
        if (Model.SalesOrderDetails.FormType != null)
        {
                                            <script type="text/javascript">
                                                document.getElementById("YesRadioButton").checked = true;
                                                document.getElementById("formtypeid").style.display = "inline";
                                            </script> 
        }
        else
        {
                                            <script type="text/javascript">
                                                document.getElementById("NoRadioButton").checked = true;
                                                document.getElementById("formtypeid").style.display = "none";
                                            </script>
                                                        
            if (Model.SalesOrderDetails.ClientState == "Maharashtra")
            {
                                            <script type="text/javascript">
                                                document.getElementById("YesRadioButton").disabled = true;
                                                document.getElementById("NoRadioButton").disabled = true;
                                            </script>
            }
        }
                                        }
                                    </div>

                                    <div class="col-lg-12 col-md-12">
                                        <div style="height: 5px"></div>
                                    </div>

                                    <div class="col-lg-12 col-md-12" id="formtypeid">
                                        <div class="row">
                                            <div class="col-lg-4 col-md-4">
                                                <div class="row">
                                                    <label for="exampleInputFormType">Form Type</label>
                                                </div>
                                            </div>
                                            <div class="col-lg-8 col-md-8">
                                                @Html.DropDownListFor(model => model.SalesOrderDetails.FormType, new List<SelectListItem> { new SelectListItem { Text = "C-Form" }, new SelectListItem { Text = "E1-Form" }, new SelectListItem { Text = "E2-Form" } }, "Select Type", new { id = "ddlformtypes", @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>



                            <div class="row" id="TransDetailsWithoutQuot">
                                <div class="col-lg-12 col-md-12">
                                    <div style="height: 10px"></div>
                                    <div style="width: 100%; height: 1px; background-color: lightgrey;"></div>
                                    <div style="height: 10px"></div>
                                    <div class="row" id="TrnsprtMode">
                                        <div class="col-md-12 col-lg-12">
                                            <label>Transport Details</label>
                                        </div>
                                        <br />
                                        <div class="col-md-6 col-lg-6">
                                            <label>Mode <i style="color: red">*</i></label>
                                            @Html.DropDownListFor(model => model.SalesOrderDetails.TransportMode, new List<SelectListItem> { new SelectListItem { Text = "Road" }, new SelectListItem { Text = "Train" }, new SelectListItem { Text = "Air" } }, "Select Mode", new { id = "ddltypeofmode", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SalesOrderDetails.TransportMode, null, new { style = "color:red" })
                                        </div>
                                        <div class="col-md-6 col-lg-6" id="TrnsprtName">
                                            <label>Name <i style="color: red">*</i></label>
                                            @Html.DropDownListFor(model => model.SalesOrderDetails.TransportName, Enumerable.Empty<SelectListItem>(), "Select Name", new { id = "ddltransportnames", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SalesOrderDetails.TransportName, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="col-lg-4 col-md-4">
                        <div class="col-md-12 col-lg-12" style="height: 55%">
                            @{
        string date = Convert.ToDateTime(Model.SalesOrderDetails.Date).ToShortDateString();
        string deldate = Convert.ToDateTime(Model.SalesOrderDetails.DeliveryDate).ToShortDateString();
        string quotdate = Convert.ToDateTime(Model.SalesOrderDetails.QuotationDate).ToShortDateString();
                            }
                            <div style="height: 10px"></div>
                            <div class="row">
                                <div class="col-lg-5 col-md-5">
                                    <div class="row">
                                        <label style="font-size: 14px;">SalesOrder Date:</label>
                                    </div>
                                </div>
                                <div class="col-lg-7 col-md-7">
                                    <div class="row">
                                        <label style="font-size: 14px; font-weight: normal" id="date">@date</label>
                                    </div>
                                </div>
                            </div>

                            <div style="height: 7px"></div>
                            <div class="row">
                                <div class="col-lg-5 col-md-5">
                                    <div class="row">
                                        <label style="font-size: 14px;">Delivery Date:</label>
                                    </div>
                                </div>
                                <div class="col-lg-7 col-md-7">
                                    <div class="row">
                                        <label style="font-size: 14px; font-weight: normal" id="deldate">@deldate</label>
                                        <input type="hidden" id="DeliveryDate" name="DeliveryDate" value="@deldate"/>
                                    </div>
                                </div>
                            </div>

                            @{
        if (Model.SalesOrderDetails.QuotationNo != null)
        {
                                <div style="height: 7px"></div>
                                <div class="row">
                                    <div class="col-lg-5 col-md-5">
                                        <div class="row">
                                            <label style="font-size: 14px;">Quotation No:</label>
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-md-7">
                                        <div class="row">
                                            @{
            var quotno = Model.SalesOrderDetails.QuotationNo;
                                            }
                                            <label style="font-size: 14px; font-weight: normal">@Html.DisplayFor(model => model.SalesOrderDetails.QuotationNo)</label>
                                            <input type="hidden" id="QuotationNo" name="QuotationNo" value="@quotno"/>
                                        </div>
                                    </div>
                                </div>

                                <div style="height: 7px"></div>
                                <div class="row">
                                    <div class="col-lg-5 col-md-5">
                                        <div class="row">
                                            <label style="font-size: 14px;">Quotation Date:</label>
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-md-7">
                                        <div class="row">
                                            <label style="font-size: 14px; font-weight: normal" id="quotdate">@quotdate</label>
                                            <input type="hidden" id="QuotationDate" name="QuotationDate" value="@quotdate"/>
                                        </div>
                                    </div>
                                </div>
        }
                            }

                            <div style="height: 7px"></div>
                            <div class="row">
                                <div class="col-lg-5 col-md-5">
                                    <div class="row">
                                        <label style="font-size: 14px;">Sales Man:<i style="color: red">*</i></label>
                                    </div>
                                </div>
                                <div class="col-lg-7 col-md-7">
                                    <div class="row">
                                        @Html.TextBoxFor(model => model.SalesOrderDetails.SalesPersonName, new { id = "SalesMan", @placeholder = "Sales Man", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SalesOrderDetails.SalesPersonName, null, new { style = "color:red" })
                                    </div>
                                </div>
                            </div>

                            <div style="height: 10px"></div>

                        </div>
                    </div>
                </div>
            </td>
        </tr>


        <tr id="DynamicRowsDiv">
            <td>
                @{
        // sales order edit without quotation
        if (Model.SalesOrderDetails.QuotationNo == null)
        {
                    <table class="table" id="DynamicRows" style="border-color: #d2d2d2; border: outset">
                        <thead>
                            <tr>
                                <th>
                                    <label style="text-align: center; width: 100%">S.No.</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Item<label style="color: red">*</label></label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Narration</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Unit</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Stk Qty</label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">Qty<label style="color: red">*</label></label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">
                                        Sell
                                        <br />
                                        Price<label style="color: red">*</label></label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">MRP<label style="color: red">*</label></label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">
                                        Disc<br />
                                        (%)</label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">
                                        Disc<br />
                                        (<i class="fa fa-rupee"></i>)</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">
                                        Tax<br />
                                        (%)</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">
                                        Amt<br />
                                        (<i class="fa fa-rupee"></i>)</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">
                                        PropTax<br />
                                        (%)</label></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>

                            @{
            int count = 1;
            if (Model.SalesOrderItemList.Count() != 0 || Model.SalesOrderItemList.Any())
            {
                foreach (var item in Model.SalesOrderItemList)
                {
                    string row = "row" + count;
                    string barcode = "BarcodeValue" + count;
                    string itemcode = "ItemCode" + count;
                    string narration = "Narration" + count;
                    string sellingprice = "SellingPrice" + count;
                    string mrp = "MRP" + count;
                    string costprice = "CostPrice" + count;
                    string disper = "DisPer" + count;
                    string disrs = "DisRs" + count;
                    string stkqty = "StkQty" + count;
                    string quantity = "Quantity" + count;
                    string unit = "Unit" + count;
                    string numbertype = "NumberType" + count;
                    string amount = "Amount" + count;
                    string itemtax = "ItemTax" + count;
                    string proptax = "proportionatetax" + count;

                    string itemname = "ItemName" + count;
                    string itemtype = "ItemType" + count;
                    string designcode = "DesignCode" + count;
                    string designname = "DesignName" + count;
                    string brand = "Brand" + count;
                    string size = "Size" + count;
                    string descriptionvalue = "DescriptionValue" + count;
                    string colorvalue = "ColorValue" + count;
                    string materialvalue = "MaterialValue" + count;
                    string unitvalue = "UnitValue" + count;
                    string amountvalue = "AmountValue" + count;
                    string itemtaxvalue = "ItemTaxValue" + count;
                    string itemtaxamount = "ItemTaxAmount" + count;
                    string proptaxvalue = "proportionatetaxvalue" + count;
                    string proportionateamount = "proportionatetaxamount" + count;
                          
                                <tr id="@row">
                                    <td style="text-align: center">
                                        <label style="font-weight: normal">@count</label>
                                    </td>
                                    <td>
                                        <select id="@itemcode" name="@itemcode" class="form-control" onchange="GetItemDetails('@count')" disabled="disabled">
                                            <option>Select Item </option>
                                        </select>
                                        <input type="hidden" id="@barcode" name="@barcode"  value="@item.Barcode"/>
                                        <input type="hidden" id="@itemname" name="@itemname"  value="@item.ItemName"/>
                                        <input type="hidden" id="@colorvalue" name="@colorvalue" value="@item.Color"/>
                                        <input type="hidden" id="@itemtype" name="@itemtype"  value="@item.ItemType"/>
                                        <input type="hidden" id="@designcode" name="@designcode" value="@item.DesignCode"/>
                                        <input type="hidden" id="@designname" name="@designname" value="@item.DesignName"/>
                                        <input type="hidden" id="@brand" name="@brand" value="@item.Brand"/>
                                        <input type="hidden" id="@size" name="@size" value="@item.Size"/>
                                        <input type="hidden" id="@materialvalue" name="@materialvalue" value="@item.Material"/>
                                        <input type="hidden" id="@descriptionvalue" name="@descriptionvalue" value="@item.Description"/>
                                        @*FILL ITEM DDL ON ONLOAD*@
                                        <script type="text/javascript">
                                            GetSelectedItems("@count", "@item.ItemCode", "@item.ItemType");
                                        </script>
                                    </td>
                                    <td>
                                        <textarea class="form-control" style="text-align: center" id="@narration" name="@narration" placeholder="Narration" rows="1">@item.Narration</textarea>
                                    </td>
                                    <td>
                                        <label id="@unit" style="font-weight: normal">@item.Unit</label>
                                        <input type="hidden" id="@unitvalue" name="@unitvalue" value="@item.Unit"/>
                                        <input type="hidden" id="@numbertype" name="@numbertype"  value="@item.NumberType"/>
                                    </td>
                                    <td style="text-align: center">
                                        <a id="@stkqty" href="#" onclick="ShowQuantity(@count)"></a>

                                        @*FILL STOCK QTY ON ONLOAD*@
                                        <script type="text/javascript">
                                            GetStockQuantity("@count", "@item.ItemCode");
                                        </script>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" style="text-align: center" id="@quantity" name="@quantity" placeholder="Qty" value="@item.Quantity" onchange="CalculateAmount(@count,'quantity')" onkeypress="return AllowDecimal(event,@count)"/>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" style="text-align: center" id="@sellingprice" name="@sellingprice" placeholder="Sell Price" value="@item.SellingPrice" onchange="CalculateAmount(@count,'sellingprice')" onkeypress="return AllowNumbers(event)"/>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" style="text-align: center" id="@mrp" name="@mrp" placeholder="MRP" value="@item.MRP" onchange="CalculateAmount(@count,'mrp')" onkeypress="return AllowNumbers(event)"/>
                                        <input type="hidden" id="@costprice" name="@costprice" />
                                        <script type="text/javascript">
                                            function GetItemsCostPrice(itemcode, itemtype) {
                                                $.getJSON("/ProcessingQuotation/GetItemsCostPrice", { itemcode: itemcode, itemtype: itemtype },
                                                    function (data) {
                                                        document.getElementById("CostPrice" + "@count").value = data;
                                                    });
                                                }
                                                GetItemsCostPrice("@item.ItemCode", "@item.ItemType");
                                        </script>
                                    </td>
                                    <td>
                                        <input type="text" id="@disper" name="@disper" autocomplete="off" class="form-control" placeholder="0%" value="@item.DisInPercent" style="text-align: center; width: 100%" onchange="CalculateAmount(@count,'percent')" onkeypress="return AllowNumbers(event)"/>
                                    </td>
                                    <td>
                                        <input type="text" id="@disrs" name="@disrs" autocomplete="off" class="form-control" placeholder="0" value="@item.DisInRs"  style="text-align: center; width: 100%" onchange="CalculateAmount(@count,'rps')" onkeypress="return AllowNumbers(event)"/>
                                    </td>
                                    <td style="text-align: center">
                                        <label style="font-weight: normal" id="@itemtax" class="CenterText">@item.ItemTax</label>
                                        <input type="hidden" id="@itemtaxvalue" name="@itemtaxvalue" value="@item.ItemTax" />
                                        <input type="hidden" id="@itemtaxamount" name="@itemtaxamount" value="@item.ItemTaxAmt" />
                                    </td>
                                    <td style="text-align: right">
                                        <label style="font-weight: normal" id="@amount">@item.Amount</label>
                                        <input type="hidden" id="@amountvalue" name="@amountvalue" value="@item.Amount"/>

                                    </td>
                                    <td style="text-align: right">
                                        <label id="@proptax" class="CenterText" style="text-align: right">@item.PropTax</label>
                                        <input type="hidden" id="@proptaxvalue" name="@proptaxvalue" value="@item.PropTax" />
                                        <input type="hidden" id="@proportionateamount" name="@proportionateamount"/>
                                    </td>
                                    <td>
                                        @{
                    if (Model.SalesOrderDetails.QuotationNo == null)
                    {
                                            <div style='height: 2px'></div>
                                            <a href='#' onclick='DeleteRow(@count)' class='fa fa-trash fa-lg' style='color: red;' />
                    }
                                        }

                                    </td>

                                </tr>
                    count++;
                }
            }
                            }
                        </tbody>
                    </table>
        }

        // sales order edit with quotation
        else
        {
                    <table class="table" id="DynamicRows" style="border-color: #d2d2d2; border: outset">
                        <thead>
                            <tr>
                                <th>
                                    <label style="text-align: center; width: 100%">S.No.</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Item<label style="color: red">*</label></label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Narration</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Unit</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Stk Qty</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Quot Qty</label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">Qty<label style="color: red">*</label></label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Bal</label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">
                                        Sell
                                        <br />
                                        Price<label style="color: red">*</label></label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">MRP<label style="color: red">*</label></label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">
                                        Disc<br />
                                        (%)</label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">
                                        Disc<br />
                                        (<i class="fa fa-rupee"></i>)</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">
                                        Tax<br />
                                        (%)</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">
                                        Amt<br />
                                        (<i class="fa fa-rupee"></i>)</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">
                                        PropTax<br />
                                        (%)</label></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>

                            @{
            int count = 1;
            if (Model.SalesOrderItemList.Count() != 0 || Model.SalesOrderItemList.Any())
            {
                foreach (var item in Model.SalesOrderItemList)
                {
                    string row = "row" + count;
                    string quotno = "QuotNo" + count;
                    string barcode = "BarcodeValue" + count;
                    string itemcode = "ItemCode" + count;
                    string narration = "Narration" + count;
                    string sellingprice = "SellingPrice" + count;
                    string mrp = "MRP" + count;
                    string costprice = "CostPrice" + count;
                    string disper = "DisPer" + count;
                    string disrs = "DisRs" + count;
                    string stkqty = "StkQty" + count;
                    string quantity = "Quantity" + count;
                    string prevqty = "PrevQuantity" + count;
                    string quotquantity = "QuotQty" + count;
                    string bal = "Balance" + count;
                    string balanceval = "BalanceVal" + count;
                    string prevbal = "PrevBalance" + count;
                    string unit = "Unit" + count;
                    string numbertype = "NumberType" + count;
                    string amount = "Amount" + count;
                    string itemtax = "ItemTax" + count;
                    string proptax = "proportionatetax" + count;

                    string itemname = "ItemName" + count;
                    string itemtype = "ItemType" + count;
                    string designcode = "DesignCode" + count;
                    string designname = "DesignName" + count;
                    string brand = "Brand" + count;
                    string size = "Size" + count;
                    string descriptionvalue = "DescriptionValue" + count;
                    string colorvalue = "ColorValue" + count;
                    string materialvalue = "MaterialValue" + count;
                    string unitvalue = "UnitValue" + count;
                    string amountvalue = "AmountValue" + count;
                    string itemtaxvalue = "ItemTaxValue" + count;
                    string itemtaxamount = "ItemTaxAmount" + count;
                    string quotquantityval = "QuotQtyValue" + count;

                    string proptaxvalue = "proportionatetaxvalue" + count;
                    string proportionateamount = "proportionatetaxamount" + count;
                          
                                <tr id="@row">
                                    <td style="text-align: center">
                                        <label style="font-weight: normal">@count</label>
                                    </td>
                                    <td>
                                        <select id="@itemcode" name="@itemcode" class="form-control" onchange="GetItemDetails('@count')" disabled="disabled">
                                            <option>Select Item </option>
                                        </select>
                                        <input type="hidden" id="@quotno" name="@quotno"  value="@item.QuotationNo"/>
                                        <input type="hidden" id="@barcode" name="@barcode"  value="@item.Barcode"/>
                                        <input type="hidden" id="@itemname" name="@itemname"  value="@item.ItemName"/>
                                        <input type="hidden" id="@itemtype" name="@itemtype"  value="@item.ItemType"/>
                                        <input type="hidden" id="@colorvalue" name="@colorvalue" value="@item.Color"/>
                                        <input type="hidden" id="@designcode" name="@designcode" value="@item.DesignCode"/>
                                        <input type="hidden" id="@designname" name="@designname" value="@item.DesignName"/>
                                        <input type="hidden" id="@brand" name="@brand" value="@item.Brand"/>
                                        <input type="hidden" id="@size" name="@size" value="@item.Size"/>
                                        <input type="hidden" id="@materialvalue" name="@materialvalue" value="@item.Material"/>
                                        <input type="hidden" id="@descriptionvalue" name="@descriptionvalue" value="@item.Description"/>
                                        @*FILL ITEM DDL ON ONLOAD*@
                                        <script type="text/javascript">
                                            GetSelectedItems("@count", "@item.ItemCode", "@item.ItemType");
                                        </script>
                                    </td>
                                    <td>
                                        <textarea class="form-control" style="text-align: center" id="@narration" name="@narration" placeholder="Narration">@item.Narration</textarea>
                                    </td>
                                    <td>
                                        <label id="@unit" style="font-weight: normal">@item.Unit</label>
                                        <input type="hidden" id="@unitvalue" name="@unitvalue" value="@item.Unit"/>
                                        <input type="hidden" id="@numbertype" name="@numbertype"  value="@item.NumberType"/>
                                    </td>
                                    <td style="text-align: center">
                                        <a id="@stkqty" href="#" onclick="ShowQuantity(@count)"></a>

                                        @*FILL STOCK QTY ON ONLOAD*@
                                        <script type="text/javascript">
                                            GetStockQuantity("@count", "@item.ItemCode");
                                        </script>
                                    </td>
                                    <td style="text-align: center">
                                        <label id="@quotquantity" style="font-weight:normal">@item.QuotQuantity</label><input type="hidden" id="@quotquantityval" name="@quotquantityval"  value="@item.QuotQuantity"/>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" style="text-align: center" id="@quantity" name="@quantity" autocomplete="off" placeholder="Qty" value="@item.Quantity" onchange="CalculateSOAmount(@count,'quantity')" onkeypress="return AllowDecimal(event,@count)"/>
                                        <input type="hidden" id="@prevqty" name="@prevqty" value="@item.Quantity" />
                                    </td>
                                    <td>
                                        <label id="@bal" style="font-weight:normal">@item.ReadOnlyQuotbalance</label><input type="hidden" id="@prevbal" name="@prevbal" value="@item.ReadOnlyQuotbalance" /><input type="hidden" id="@balanceval" name="@balanceval" value="@item.ReadOnlyQuotbalance" />
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" style="text-align: center" id="@sellingprice" name="@sellingprice" placeholder="Sell Price" value="@item.SellingPrice" onchange="CalculateSOAmount(@count,'sellingprice')" onkeypress="return AllowNumbers(event)"/>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" style="text-align: center" id="@mrp" name="@mrp" placeholder="MRP" value="@item.MRP" onchange="CalculateSOAmount(@count,'mrp')" onkeypress="return AllowNumbers(event)"/>
                                        <input type="hidden" id="@costprice" name="@costprice"/>
                                        <script type="text/javascript">
                                            function GetItemsCostPrice(itemcode, itemtype) {
                                                $.getJSON("/ProcessingQuotation/GetItemsCostPrice", { itemcode: itemcode, itemtype: itemtype },
                                                    function (data) {
                                                        document.getElementById("CostPrice" + "@count").value = data;
                                                    });
                                                }
                                                GetItemsCostPrice("@item.ItemCode", "@item.ItemType");
                                        </script>
                                    </td>
                                    <td>
                                        <input type="text" id="@disper" name="@disper" autocomplete="off" class="form-control" placeholder="0%" value="@item.DisInPercent" style="text-align: center; width: 100%" onchange="CalculateSOAmount(@count,'percent')" onkeypress="return AllowNumbers(event)"/>
                                    </td>
                                    <td>
                                        <input type="text" id="@disrs" name="@disrs" autocomplete="off" class="form-control" placeholder="0" value="@item.DisInRs"  style="text-align: center; width: 100%" onchange="CalculateSOAmount(@count,'rps')" onkeypress="return AllowNumbers(event)"/>
                                    </td>
                                    <td style="text-align: center">
                                        <label style="font-weight: normal" id="@itemtax" class="CenterText">@item.ItemTax</label>
                                        <input type="hidden" id="@itemtaxvalue" name="@itemtaxvalue" value="@item.ItemTax" />
                                        <input type="hidden" id="@itemtaxamount" name="@itemtaxamount" value="@item.ItemTaxAmt" />
                                    </td>
                                    <td style="text-align: right">
                                        <label style="font-weight: normal" id="@amount">@item.Amount</label>
                                        <input type="hidden" id="@amountvalue" name="@amountvalue" value="@item.Amount"/>
                                    </td>
                                    <td style="text-align: right">
                                        <label id="@proptax" class="CenterText" style="text-align: right">@item.PropTax</label>
                                        <input type="hidden" id="@proptaxvalue" name="@proptaxvalue" value="@item.PropTax" />
                                        <input type="hidden" id="@proportionateamount" name="@proportionateamount" value="@item.PropTaxAmt"/>
                                    </td>
                                    <td>
                                        @{
                    if (Model.SalesOrderDetails.QuotationNo == null)
                    {
                                            <div style='height: 2px'></div>
                                            <a href='#' onclick='DeleteRow(@count)' class='fa fa-trash fa-lg' style='color: red;' />
                    }
                                        }

                                    </td>

                                </tr>
                    count++;
                }
            }
                            }
                        </tbody>
                    </table>
        }
                }
            </td>
        </tr>

        <tr>
            <td>
                <button class="btn btn-link" id="NonInvButton" type="button" style="float: right; text-align: right; color: orangered; font-size: small">New Non-Inventory Item</button>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-md-5 col-lg-5">

                    <div>
                        <div class="row">
                            <div class="col-md-4 col-lg-4">
                                <label style="font-size: 14px;">Total Discount:</label>
                            </div>
                            <div class="col-md-8 col-lg-8">
                                <i class="fa fa-inr" style="font-size: 14px"></i>
                                @{
        double Disc = Convert.ToDouble(@Model.SalesOrderDetails.TotalDiscount);
        var disc = Disc.ToString("#,###.00##");
                                }
                                <label id="TotalDiscountValue" style="font-size: 14px">@disc</label>
                            </div>
                        </div>
                    </div>

                    <div style="height: 8px"></div>

                    @*TAX SUMMARY WITHOUT QUOTATION*@
                    <div id="AddTaxes" style="display: none">
                        <div class="row">
                            <div class="col-lg-12 col-md-12">
                                <label style="font-size: medium">Tax Summary:</label>
                            </div>
                        </div>
                        <div style="height: 10px"></div>
                        @{
        if (Model.InventoryTaxList.Count() == 0)
        {
                            <div class="row">
                                <div class="col-md-3 col-lg-3">
                                    <label id="AddedAmount1">0</label>
                                    <input type="hidden" id="AddedAmounthdn1" name="AddedAmounthdn1" value="0" />
                                </div>
                                <div class="col-md-2 col-lg-2">
                                    <label id="AddedTax1"></label>
                                </div>
                                <div class="col-md-7 col-lg-7">
                                    <label id="AddedTaxAmount1">0</label>
                                    <input type="hidden" id="AddedTaxAmounthdn1" name="AddedTaxAmounthdn1" value="0" />
                                </div>
                            </div>
        }
        else
        {
            int taxcount = 1;
            foreach (var tax in Model.InventoryTaxList)
            {
                string addedtax = "AddedTax" + taxcount;
                string taxnumber = "ItemTaxNumber" + taxcount;
                string addedtaxamount = "AddedTaxAmount" + taxcount;
                string addedtaxhdn = "AddedTaxAmounthdn" + taxcount;
                string addedamount = "AddedAmount" + taxcount;
                string addedamounthdn = "AddedAmounthdn" + taxcount;
                string itemtax = tax.Tax + "%";
                            <div class="row">
                                <div class="col-md-3 col-lg-3">
                                    <label id="@addedamount"><i class="fa fa-inr"></i>@Convert.ToDouble(tax.Amount).ToString("#,###.00##")</label>
                                    <input type="hidden" id="@addedamounthdn" name="@addedamounthdn" value="@tax.Amount" />
                                </div>
                                <div class="col-md-2 col-lg-2">
                                    <label id="@addedtax">@itemtax</label>
                                    <input type="hidden" id="@taxnumber" name="@taxnumber" value="@tax.Tax" />
                                </div>
                                <div class="col-md-7 col-lg-7">
                                    <label id="@addedtaxamount"><i class="fa fa-inr"></i>@Convert.ToDouble(tax.TaxAmount).ToString("#,###.00##")</label>
                                    <input type="hidden" id="@addedtaxhdn" name="@addedtaxhdn" value="@tax.TaxAmount" />
                                </div>
                            </div>
                taxcount++;
            }
                            <script type="text/javascript">
                                document.getElementById("AddTaxes").style.display = "inline";
                            </script>
        }
                        }
                    </div>
                </div>

                <div class="col-md-7 col-lg-7">
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Total Amount</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
        double Amt = Convert.ToDouble(@Model.SalesOrderDetails.TotalAmount);
        var amt = Amt.ToString("#,###.00##");
                                    }
                                    <label id="TotalAmount" style="font-size: 14px;">@amt</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div style="height: 15px"></div>
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Packing & Forwarding</label>
                        </div>
                        <div class="col-md-4 col-lg-4">
                            <div class="row">
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.SalesOrderDetails.PackAndForwd, new { @class = "form-control", @autocomplete = "off", @placeholder = "0", @style = "text-align:center", @onchange = "CalculatePackAndForwd('Extra')", @onkeypress = "return AllowNumbers(event)" })
                                    <div class="input-group-addon"><i class="fa fa-inr"></i></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-lg-3" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
        double PacKAndFord = Convert.ToDouble(@Model.SalesOrderDetails.PackAndForwd);
        var packandford = PacKAndFord.ToString("#,###.00##");
                                    }
                                    <label id="PackFordVal" style="font-size: 14px;">@packandford</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div style="height: 50px"></div>
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Tax Amount</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
        double TaxAmt = Convert.ToDouble(@Model.SalesOrderDetails.TotalTaxAmount);
        var taxamt = TaxAmt.ToString("#,###.00##");
                                    }
                                    <label id="TotalTaxAmount" style="font-size: 14px;">@taxamt</label>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div style="height: 7px"></div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-ld-12 col-md-12">
                    <div style="width: 100%; height: 1px; background-color: lightgrey;"></div>
                    <div style="height: 10px"></div>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-lg-5 col-md-5">
                </div>
                <div class="col-lg-7 col-md-7">
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Grand Total</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
        double GrndTtl = Convert.ToDouble(@Model.SalesOrderDetails.GrandTotal);
        var grndttl = GrndTtl.ToString("#,###.00##");
                                    }
                                    <label id="GrandTotal" style="font-size: 14px;">@grndttl</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-lg-12 col-md-12">
                    <label style="font-size: 14px;">In Words:</label>
                    <label id="Inwords"></label>
                    <script type="text/javascript">
                        document.getElementById("Inwords").innerHTML = NumberToWords();
                    </script>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-ld-12 col-md-12">
                    <div style="width: 100%; height: 1px; background-color: lightgrey;"></div>
                    <div style="height: 10px"></div>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-md-5 col-lg-5"></div>
                <div class="col-md-7 col-lg-7">
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Advance Payment<i style="color: red">*</i></label>
                        </div>
                        <div class="col-md-4 col-lg-4">
                            <div class="row">
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.SalesOrderDetails.AdvancePayment, new { id = "AdvancePayment", @autocomplete = "off", @class = "form-control", @style = "text-align:center", @placeholder = "Advance Payment", onchange = "CalcGrandTotal();", @onkeypress = "return AllowNumbers(event)" })
                                    <div class="input-group-addon"><i class="fa fa-inr"></i></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-lg-3" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
        double AdvPay = Convert.ToDouble(@Model.SalesOrderDetails.AdvancePayment);
        var advpay = AdvPay.ToString("#,###.00##");
                                    }
                                    <label id="AdvPayVal" style="font-size: 14px;">@advpay</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div style="height: 40px"></div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-md-12 col-lg-12" id="acceptedid">
                    <div style="height: 7px"></div>
                    <div class="row">
                        <div class="col-md-3 col-lg-3">
                            <label>Prepared By<label style="color: red">*</label></label><br />
                            <label id="salesman" style="font-weight: normal">@Model.SalesOrderDetails.PreparedBy</label>
                        </div>
                        <div class="col-md-4 col-lg-4">
                            <label>Email-Id</label><br />
                            <label id="emailid" style="font-weight: normal">@Model.SalesOrderDetails.PreparedEmail</label>
                        </div>
                        <div class="col-md-3 col-lg-3">
                            <label>Contact No.</label><br />
                            <label id="contactnoid" style="font-weight: normal">@Model.SalesOrderDetails.PreparedContact</label>
                        </div>
                        <div class="col-md-2 col-lg-2">
                            <label>Prepare Time</label><br />
                            <label style="font-weight: normal" id="preparetime">@Convert.ToDateTime(Model.SalesOrderDetails.PreparedTime).ToShortTimeString()</label>
                        </div>
                        <div style="height: 70px"></div>
                    </div>
                </div>
            </td>
        </tr>

    </table>
    
    <div style="height: 10px"></div>
    <div style="text-align: center">
        <button type="submit" id="Submit" class="btn btn-success" style="color: black">Update</button>
    </div>
}
