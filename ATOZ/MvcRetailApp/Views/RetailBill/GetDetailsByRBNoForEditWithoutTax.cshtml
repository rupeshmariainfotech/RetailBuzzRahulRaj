@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "GetDetailsByRBNoForEditWithoutTax";
}
<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }

    function confirmbox(message, row) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone2.ogg';
        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('confirmClass');
        bootbox.confirm('<i class="fa fa-2x fa-question-circle"></i><br>' + message + '<hr>',
		 function (result) {
		     if (result) {
		         $("#" + row).remove();
		         var rowid = document.getElementById("hdnRowCount").value;
		         CalculateAmount(rowid);
		         CalculateTotalAmount();
		         CalculateTaxSummary();
		         CalcGrandTotal();
		     }
		 });
    }
</script>

<script>
    $(function () {
        var dat = document.getElementById("date").innerHTML;
        var temp = new Date(dat);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var date = temp.getDate() + "/" + month[temp.getMonth()] + "/" + temp.getFullYear();
        document.getElementById("date").innerHTML = date;
    });
</script>

<script type="text/javascript">
    function addCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function removeCommas(yourNumber) {
        var components = yourNumber.toString().split(".");
        if (components.length === 1)
            components[0] = yourNumber;
        components[0] = components[0].replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, '');
        if (components.length === 2)
            components[1] = components[1].replace(/\D/g, "");
        return components.join(".");
    }

    function NumberToWords() {
        var junkVal = (+removeCommas(document.getElementById('Grand_Total').innerHTML));
        junkVal = Math.floor(junkVal);
        var obStr = new String(junkVal);
        numReversed = obStr.split("");
        actnumber = numReversed.reverse();
        if (Number(junkVal) > 0) {
        }
        else if (Number(junkVal) == 0) {
            return 'Rupees Zero Only';
        }
        else {
            alertbox('wrong Number cannot be converted');
            return false;
        }

        if (actnumber.length > 9) {
            alertbox('Oops!!!! the Number is too big to covertes');
            return false;
        }

        var iWords = ["Zero", " One", " Two", " Three", " Four", " Five", " Six", " Seven", " Eight", " Nine"];
        var ePlace = ['Ten', ' Eleven', ' Twelve', ' Thirteen', ' Fourteen', ' Fifteen', ' Sixteen', ' Seventeen', ' Eighteen', ' Nineteen'];
        var tensPlace = ['dummy', ' Ten', ' Twenty', ' Thirty', ' Forty', ' Fifty', ' Sixty', ' Seventy', ' Eighty', ' Ninety'];

        var iWordsLength = numReversed.length;
        var totalWords = "";
        var inWords = new Array();
        var finalWord = "";
        j = 0;
        for (i = 0; i < iWordsLength; i++) {
            switch (i) {
                case 0:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + ' Only';
                    break;
                case 1:
                    tens_complication();
                    break;
                case 2:
                    if (actnumber[i] == 0) {
                        inWords[j] = '';
                    }
                    else if (actnumber[i - 1] != 0 && actnumber[i - 2] != 0) {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred and';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred';
                    }
                    break;
                case 3:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Thousand";
                    }
                    break;
                case 4:
                    tens_complication();
                    break;
                case 5:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Lakh";
                    }
                    break;
                case 6:
                    tens_complication();
                    break;
                case 7:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + " Crore";
                    break;
                case 8:
                    tens_complication();
                    break;
                default:
                    break;
            }
            j++;
        }

        function tens_complication() {
            if (actnumber[i] == 0) {
                inWords[j] = '';
            }
            else if (actnumber[i] == 1) {
                inWords[j] = ePlace[actnumber[i - 1]];
            }
            else {
                inWords[j] = tensPlace[actnumber[i]];
            }
        }
        inWords.reverse();
        for (i = 0; i < inWords.length; i++) {
            finalWord += inWords[i];
        }
        // obStr + '  '+ finalWord;
        return finalWord;
    }
</script>

@*get shop and stock quantity on onload function*@
<script type="text/javascript">
    function GetStockandShopQuantity(id, item) {
        id = +id;
        var shopcode = document.getElementById("LoginShopCode").value;
        $.getJSON("/RetailBill/GetStockandShopQuantity", { ItemCode: item, shopcode: shopcode },
        function (data) {
            $("#StkQty" + id).text(data.Qty);
            $("#ShopQty" + id).text(data.shopqty);
        });
    }
</script>

@*SALES PERSON NAME AUTO COMPLETE*@
<script type="text/javascript">
    $(function () {
        $("#SalesPerson").autocomplete({
            source: "/RetailBill/GetEmployeeName",
            minLength: 1,
            select: function (event, ui) {
                if (ui.item) {
                    $("#SalesPerson").val(ui.item.value);
                    var empname = document.getElementById("SalesPerson").value;

                    $.getJSON("/RetailBill/GetEmployeeDetails", { name: empname },
                   function (data) {

                       document.getElementById("SalesPersonContact").innerHTML = data.MobileNo;
                       document.getElementById("SalesPersonEmail").innerHTML = data.Email;
                       document.getElementById("SalesPersonAddress").innerHTML = data.Address;
                       document.getElementById("SalesPersonDesignation").innerHTML = data.Designation;

                       document.getElementById("RetailBillDetails_SalesPersonContact").value = data.MobileNo;
                       document.getElementById("RetailBillDetails_SalesPersonEmail").value = data.Email;
                       document.getElementById("RetailBillDetails_SalesPersonAddress").value = data.Address;
                       document.getElementById("RetailBillDetails_SalesPersonDesignation").value = data.Designation;
                   });
                }
            }
        });
    });
</script>

@*CLIENT NAME AUTO COMPLETE*@
<script type="text/javascript">
    $(function () {
        $("#ClientName").autocomplete({
            source: "/RetailBill/GetCustomerNames",
            minLength: 1,
            select: function (event, ui) {
                if (ui.item) {
                    $("#ClientName").val(ui.item.value);

                    var clientname = document.getElementById("ClientName").value;
                    // DISPLAY CLIENT DETAILS ON CLIENT NAME CHANGE EVENT
                    $.getJSON("/RetailBill/GetCustomerDetails", { name: clientname },
                    function (data) {

                        document.getElementById("ClientAddress").innerHTML = data.Address;
                        document.getElementById("ClientContact").innerHTML = data.Contact;
                        document.getElementById("ClientEmail").innerHTML = data.EmailId;

                        document.getElementById("RetailBillDetails_ClientAddress").value = data.Address;
                        document.getElementById("RetailBillDetails_ClientContact").value = data.Contact;
                        document.getElementById("RetailBillDetails_ClientEmail").value = data.EmailId;
                    });
                }
            }
        });
    });
</script>

@*VALIDATION ON UNIT AND RATE*@
<script type="text/javascript">
    function AllowNumbers(key) {
        var keycode = (key.which) ? key.which : key.keyCode;
        //comparing pressed keycodes
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
    }

    function AllowDecimal(key, rowid) {
        var numbertype = $("#NumberType" + rowid).val();
        var quantity = $("#Quantity" + rowid).val();
        var pointFoundCount = 0;
        for (var i = 0; i <= quantity.length; i++) {
            if (quantity[i] == '.') {
                pointFoundCount++;
            }
        }

        var pointposition = quantity.indexOf(".");
        var digitupto = 0;
        if (pointposition != -1) {
            digitupto = quantity.substr(pointposition, quantity.length).length;
        }

        var keycode = (key.which) ? key.which : key.keyCode;
        //comparing pressed keycodes
        if (numbertype == 'Whole') { //if unit type is whole number then don't allow point
            if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                return false;
            }
        }
        else if (keycode == 46) { //if decimal point is inserted
            if (pointFoundCount > 0 && pointFoundCount < 2) { // more than one decimal point is inserted then don't allow to insert it
                return false;
            }
        }
        else if (digitupto != 0) { // if unit type is decimal then wait for decimal point to be insert then execute this condition 
            if (numbertype == '2Digit') { // if unit type is 2 digit the then allow 2 digits after decimal not the characters in between
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 3) {
                    return false;
                }
            }
            else { // if unit type is 2 digit the then allow 3 digits after decimal not the characters in between
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57) || digitupto >= 4) {
                    return false;
                }
            }
        }
        else { //don't allow any decimal point or character until first digit occurs
            if (quantity.length == 0) // if first digit is point in quantity field then don't allow it and characters too
            {
                if (!(keycode == 8) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
            else { //don't allow any character until the above else if condition meets
                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
                    return false;
                }
            }
        }
    }
</script>


@*DYNAMIC ROW GENERATION ON ENTER KEY*@
<script type="text/javascript">
    $(document).keypress(function (e) {
        if (e.which == 13) {

            var presentrows = +document.getElementById("ActualRBListCount").value;
            var rowid = +document.getElementById("hdnRowCount").value;
            var previousrowsvalidation = 0;

            //check the validation for already present items
            for (i = 1; i <= presentrows; i++) {
                var prevBarcode = "Barcode" + i;
                var prevQuantity = "Quantity" + i;
                var prevMRP = "MRP" + i;
                var prevDiscount = "DisPer" + i;
                var prevDiscountRs = "DisRs" + i;
                var prevItemName = "ItemName" + i;
                var previtemtype = "ItemType" + i;
                var prevNarration = "Narration" + i;

                if (document.getElementById(prevItemName) != null) {
                    if (document.getElementById(prevBarcode) != null) {
                        if ($("#" + prevBarcode).val() == "") {
                            alert("Hi");
                            alertbox("Please Select The Barcode");
                            previousrowsvalidation++;
                            break;
                        }
                        else if ($("#" + prevQuantity).val() == "") {
                            alertbox("Please Fill The Quantity");
                            previousrowsvalidation++;
                            break;
                        }
                        else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                            alertbox("Please Fill The Rate");
                            previousrowsvalidation++;
                            break;
                        }
                        else {
                            document.getElementById(prevBarcode).disabled = true;
                            document.getElementById(prevNarration).disabled = true;
                            document.getElementById(prevQuantity).disabled = true;
                            document.getElementById(prevMRP).disabled = true;
                            document.getElementById(prevDiscount).disabled = true;
                            document.getElementById(prevDiscountRs).disabled = true;
                            document.getElementById(prevItemName).disabled = true;
                        }
                    }
                    else {
                        if ($("#" + prevItemName).val() == "") {
                            alertbox("Please Select The Item");
                            previousrowsvalidation++;
                            break;
                        }
                        else if ($("#" + prevQuantity).val() == "") {
                            alertbox("Please Fill The Quantity");
                            previousrowsvalidation++;
                            break;
                        }
                        else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                            alertbox("Please Fill The Rate");
                            previousrowsvalidation++;
                            break;
                        }
                        else {
                            document.getElementById(prevQuantity).disabled = true;
                            document.getElementById(prevNarration).disabled = true;
                            document.getElementById(prevMRP).disabled = true;
                            document.getElementById(prevDiscount).disabled = true;
                            document.getElementById(prevDiscountRs).disabled = true;
                            document.getElementById(prevItemName).disabled = true;
                        }
                    }
                }
            }

            //If Previous rows validation of already present items is 0 then create the new row 
            if (previousrowsvalidation == 0) {
                var newrowgeneratedvalidation = 0;
                for (i = presentrows + 1; i <= rowid; i++) {
                    var prevBarcode = "Barcode" + i;
                    var prevQuantity = "Quantity" + i;
                    var prevMRP = "MRP" + i;
                    var prevDiscount = "DisPer" + i;
                    var prevDiscountRs = "DisRs" + i;
                    var prevItemName = "ItemName" + i;
                    var prevNarration = "Narration" + i;

                    if (document.getElementById(prevItemName) != null) {
                        if (document.getElementById(prevBarcode) != null) {
                            if ($("#" + prevBarcode).val() == "") {
                                alertbox("Please Select The Barcode");
                                newrowgeneratedvalidation++;
                                break;
                            }
                            else if ($("#" + prevQuantity).val() == "" || +$("#" + prevQuantity).val() == 0) {
                                alertbox("Please Fill The Quantity");
                                newrowgeneratedvalidation++;
                                break;
                            }
                            else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                                alertbox("Please Fill The Rate");
                                newrowgeneratedvalidation++;
                                break;
                            }
                            else {
                                document.getElementById(prevBarcode).disabled = true;
                                document.getElementById(prevNarration).disabled = true;
                                document.getElementById(prevQuantity).disabled = true;
                                document.getElementById(prevMRP).disabled = true;
                                document.getElementById(prevDiscount).disabled = true;
                                document.getElementById(prevDiscountRs).disabled = true;
                                document.getElementById(prevItemName).disabled = true;
                            }
                        }
                        else {
                            if ($("#" + prevItemName).val() == "") {
                                alertbox("Please Select The Item");
                                newrowgeneratedvalidation++;
                                break;
                            }
                            else if ($("#" + prevQuantity).val() == "" || +$("#" + prevQuantity).val() == 0) {
                                alertbox("Please Fill The Quantity");
                                newrowgeneratedvalidation++;
                                break;
                            }
                            else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                                alertbox("Please Fill The Rate");
                                newrowgeneratedvalidation++;
                                break;
                            }
                            else {
                                document.getElementById(prevQuantity).disabled = true;
                                document.getElementById(prevNarration).disabled = true;
                                document.getElementById(prevMRP).disabled = true;
                                document.getElementById(prevDiscount).disabled = true;
                                document.getElementById(prevDiscountRs).disabled = true;
                                document.getElementById(prevItemName).disabled = true;
                            }
                        }
                    }
                }
                if (newrowgeneratedvalidation == 0) {
                    if (rowid == presentrows) { //if new first row created then no need for validaltion just create the row
                        DynamicRows();
                    }
                    else { // if already new rows are created then first check the validation of the previous row created then create the new row
                        var prevBarcode = "Barcode" + rowid;
                        var prevQuantity = "Quantity" + rowid;
                        var prevMRP = "MRP" + rowid;
                        var prevDiscount = "DisPer" + rowid;
                        var prevDiscountRs = "DisRs" + rowid;
                        var prevItemName = "ItemName" + rowid;
                        var previtemtype = "ItemType" + rowid;
                        var prevNarration = "Narration" + rowid;

                        if (document.getElementById(prevItemName) != null) {
                            if (document.getElementById(prevBarcode) != null) {
                                if ($("#" + prevBarcode).val() == "") {
                                    alertbox("Please Select The Barcode");
                                }
                                else if ($("#" + prevQuantity).val() == "" || +$("#" + prevQuantity).val() == 0) {
                                    alertbox("Please Fill The Quantity");
                                }
                                else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                                    alertbox("Please Fill The Rate");
                                }
                                else {
                                    document.getElementById(prevBarcode).disabled = true;
                                    document.getElementById(prevNarration).disabled = true;
                                    document.getElementById(prevQuantity).disabled = true;
                                    document.getElementById(prevMRP).disabled = true;
                                    document.getElementById(prevDiscount).disabled = true;
                                    document.getElementById(prevDiscountRs).disabled = true;
                                    document.getElementById(prevItemName).disabled = true;
                                    DynamicRows();
                                }
                            }
                            else {
                                if ($("#" + prevItemName).val() == "") {
                                    alertbox("Please Select The Item");
                                }
                                else if ($("#" + prevQuantity).val() == "" || +$("#" + prevQuantity).val() == 0) {
                                    alertbox("Please Fill The Quantity");
                                }
                                else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                                    alertbox("Please Fill The Rate");
                                }
                                else {
                                    document.getElementById(prevQuantity).disabled = true;
                                    document.getElementById(prevNarration).disabled = true;
                                    document.getElementById(prevMRP).disabled = true;
                                    document.getElementById(prevDiscount).disabled = true;
                                    document.getElementById(prevDiscountRs).disabled = true;
                                    document.getElementById(prevItemName).disabled = true;
                                    DynamicRows();

                                }
                            }
                        }
                        else {
                            DynamicRows();
                        }
                    }
                }
            }
        }
    });

    function DynamicRows() {
        var rowid = document.getElementById("hdnRowCount").value;
        rowid = +rowid + 1;
        var row = "row" + rowid;
        var Barcode = "Barcode" + rowid;
        var ItemCodeLabel = "ItemCodeLabel" + rowid;
        var ItemCode = "ItemCode" + rowid;
        var ItemName = "ItemName" + rowid;
        var Narration = "Narration" + rowid;
        var Description = "Description" + rowid;
        var StockQuantity = "StkQty" + rowid;
        var ShopQuantity = "ShopQty" + rowid;
        var Quantity = "Quantity" + rowid;
        var Unit = "Unit" + rowid;
        var UnitVal = "UnitVal" + rowid;
        var NumberType = "NumberType" + rowid;
        var SellingPrice = "SellingPrice" + rowid;
        var MRP = "MRP" + rowid;
        var costprice = "CostPrice" + rowid;
        var Brand = "Brand" + rowid;
        var Size = "Size" + rowid;
        var DesignCode = "DesignCode" + rowid;
        var DesignName = "DesignName" + rowid;
        var DiscountPer = "DisPer" + rowid;
        var DiscountRs = "DisRs" + rowid;
        var AmountVal = "AmountVal" + rowid;
        var Amount = "Amount" + rowid;
        var Color = "Color" + rowid;
        var Material = "Material" + rowid;
        var ItemTaxVal = "ItemTaxVal" + rowid;
        var ItemTaxAmt = "ItemTaxAmt" + rowid;
        var itemtype = "ItemType" + rowid;
        var ItemList = $("#AddItemRows");

        var data = "<tr id='" + row + "'><td style='text-align:center'>" + rowid + "</td>";
        data += "<td class='col-md-2 col-lg-2 col-sm-2'><input type='text' name='" + Barcode + "' id='" + Barcode + "' autocomplete='off' class='form-control' onchange='GetItemsByBarcode(" + rowid + ")' style='text-align:center' /><input type='hidden' id='" + ItemCode + "' name='" + ItemCode + "' /><input type='hidden' id='" + Description + "' name='" + Description + "' /></td>";
        data += "<td style='text-align:center'><label style='font-weight:normal' id='" + ItemCodeLabel + "'></label></td>";
        data += "<td class='col-md-2 col-lg-2 col-sm-2'><input type='text' name='" + ItemName + "' id='" + ItemName + "' autocomplete='off' class='form-control'style='text-align:center' disabled='disabled'/></td>";
        data += "<td class='col-md-2 col-lg-2 col-sm-2'><textarea id='" + Narration + "' name='" + Narration + "' class='form-control' placeholder='Narration' style='text-align: center' rows='1' disabled='disabled'></textarea></td>";
        data += "<td style='text-align:center'><a id='" + StockQuantity + "' href='#' onclick='ShowQuantity(" + rowid + ")'></a><input type='hidden' name='" + ItemTaxVal + "' id='" + ItemTaxVal + "' /><input type='hidden' name='" + ItemTaxAmt + "' id='" + ItemTaxAmt + "' /><input type='hidden' id='" + Brand + "' name='" + Brand + "' /><input type='hidden' id='" + Size + "' name='" + Size + "' /></td>";
        data += "<td style='text-align:center'><label id='" + ShopQuantity + "'></label></td>";
        data += "<td><input type='text' name='" + Quantity + "' id='" + Quantity + "' placeholder='Qty' autocomplete='off' class='form-control' style='text-align:center' onchange='CalculateAmount(" + rowid + ',' + '\"quantity\"' + ")' onkeypress='return AllowDecimal(event," + rowid + ")' disabled/></td>";
        data += "<td><label id='" + Unit + "' style='font-weight: normal'></label><input type='hidden' id='" + UnitVal + "' name='" + UnitVal + "' /><input type='hidden' id='" + NumberType + "' name='" + NumberType + "' /></td>";
        data += "<td style='text-align:center'><input type='text' id='" + MRP + "' name='" + MRP + "' placeholder='Rate' style='text-align: center' class='form-control' disabled='disabled' onkeypress='return AllowNumbers(event)'/><input type='hidden' id='" + SellingPrice + "' name='" + SellingPrice + "' /><input type='hidden' id='" + costprice + "' name='" + costprice + "' /><input type='hidden' id='" + DesignCode + "' name='" + DesignCode + "' /><input type='hidden' id='" + DesignName + "' name='" + DesignName + "' /></td>";
        data += "<td><input type='text' name='" + DiscountPer + "' id='" + DiscountPer + "' autocomplete='off' class='form-control' style='text-align:center' onchange='CalculateAmount(" + rowid + ',' + '\"percent\"' + ")' onkeypress='return AllowNumbers(event)' disabled value='0' placeholder='0%' /></td>";
        data += "<td><input type='text' name='" + DiscountRs + "' id='" + DiscountRs + "' autocomplete='off' class='form-control' style='text-align:center' onchange='CalculateAmount(" + rowid + ',' + '\"rps\"' + ")' onkeypress='return AllowNumbers(event)' disabled value='0' placeholder='0.00' /></td>";
        data += "<td style='text-align:right'><label id='" + Amount + "' style='font-weight: normal'></label><input type='hidden' id='" + AmountVal + "' name='" + AmountVal + "' /><input type='hidden' id='" + itemtype + "' name='" + itemtype + "' value='Inventory' /></td>";
        data += "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + rowid + ")' class='fa fa-trash fa-lg' style='color:red;' /></td><input type='hidden' name='" + Color + "' id='" + Color + "' /><input type='hidden' name='" + Material + "' id='" + Material + "' /></tr>";
        ItemList.append(data);
        $("#hdnRowCount").val(rowid);
    }
</script>

@*GET ITEM DETAILS ON BARCOIDE CHANGE EVENT*@
<script type="text/javascript">
    function GetItemsByBarcode(rowid) {

        //CHECK IF SAME BARCODE IS ALREADY SELECTED THEN ENABLES PREVIOUS ROW
        Barcode = "Barcode" + rowid;
        var rowcount = document.getElementById("hdnRowCount").value;
        var barcode = document.getElementById(Barcode).value;
        var counter = 0;
        var validationcounter = 0;
        for (i = 1; i < rowcount; i++) {
            var BARCODE = "Barcode" + i;
            var ITEMNAME = "ItemName" + i;
            var QUANTITY = "Quantity" + i;
            var DISCOUNTPER = "DisPer" + i;
            var DISCOUNTRS = "DisRs" + i;
            var NARRATION = "Narration" + i;

            //IF ITEM IS ALREADY SELECTED THEN GET ALERT
            if (document.getElementById(BARCODE) != null) {
                if ($("#" + BARCODE).val().toUpperCase() == barcode.toUpperCase()) {
                    alertbox("The Item Is Already Selected Please Change The Quantity..");
                    document.getElementById(NARRATION).disabled = false;
                    document.getElementById(QUANTITY).disabled = false;
                    document.getElementById(DISCOUNTRS).disabled = false;
                    document.getElementById(DISCOUNTPER).disabled = false;

                    //ITEM IS ALREADY SELECTED THEN EMPTY CURRENT ROW
                    var BARCODE = "Barcode" + rowcount;
                    var ITEMNAME = "ItemName" + rowcount;
                    var ITEMCODE = "ItemCode" + rowcount;
                    var NARRATION = "Narration" + rowcount;
                    var STKQUAN = "StkQty" + rowcount;
                    var SHOPQUAN = "ShopQty" + rowcount;
                    var QUANTITY = "Quantity" + rowcount;
                    var DISCOUNTPER = "DisPer" + rowcount;
                    var DISCOUNTRS = "DisRs" + rowcount;
                    var UNIT = "Unit" + rowcount;
                    var MRP = "MRP" + rowcount;
                    var AMOUNT = "Amount" + rowcount;

                    document.getElementById(BARCODE).value = "";
                    document.getElementById(NARRATION).value = "";
                    document.getElementById(ITEMNAME).value = "";
                    document.getElementById(ITEMCODE).value = "";
                    document.getElementById(STKQUAN).innerHTML = "";
                    document.getElementById(SHOPQUAN).innerHTML = "";
                    document.getElementById(QUANTITY).value = "";
                    document.getElementById(DISCOUNTPER).value = "";
                    document.getElementById(DISCOUNTRS).value = "";
                    document.getElementById(UNIT).innerHTML = "";
                    document.getElementById(MRP).value = "";
                    document.getElementById(AMOUNT).innerHTML = "";

                    counter = i;
                    break;
                }
            }
        }

        //IF COUNTER IS 0 THAT MEANS CURRENT BARCODE IS NOT SELECED IN PREVIOUS ROWS
        if (counter == 0) {
            //IF PREVIOUS ROW IS ENABLED FOR CHANGE THE QUANTITY BUT WE SELECT AGAIN DDL THEN DISABLED THE ENABLES QUANTITY
            for (i = 1; i < rowcount; i++) {
                var BARCODE = "Barcode" + i;
                var ITEMNAME = "ItemName" + i;
                var QUANTITY = "Quantity" + i;
                var DISCOUNTPER = "DisPer" + i;
                var DISCOUNTRS = "DisRs" + i;
                var NARRATION = "Narration" + i;

                if (document.getElementById(ITEMNAME) != null) {
                    if (document.getElementById(BARCODE) != null) {
                        if ($("#" + QUANTITY).val() == "") {
                            alertbox("Please Fill The Quantity");
                            validationcounter++;
                            document.getElementById("Barcode" + rowcount).value = "";
                            break;
                        }
                        else {
                            document.getElementById(NARRATION).disabled = true;
                            document.getElementById(QUANTITY).disabled = true;
                            document.getElementById(DISCOUNTPER).disabled = true;
                            document.getElementById(DISCOUNTRS).disabled = true;
                        }
                    }
                }
            }

            if (validationcounter == 0) {
                //DISPLAY DETAILS ON BARCODE CHANGE EVENT
                var barcodevalue = document.getElementById("Barcode" + rowid).value;
                var shopcode = document.getElementById("LoginShopCode").value;
                if (barcodevalue != "") {
                    document.getElementById("Quantity" + rowid).disabled = false;
                    $.getJSON("/RetailBill/GetBarcodeItemDetails", {
                        barcode: barcodevalue,
                        shop: shopcode,
                    },
                          function (data) {
                              if (data != "Fail") {
                                  document.getElementById("ItemCodeLabel" + rowid).innerHTML = data.ItemCode;
                                  document.getElementById("ItemCode" + rowid).value = data.ItemCode;
                                  document.getElementById("ItemName" + rowid).value = data.ItemName;
                                  document.getElementById("StkQty" + rowid).innerHTML = data.totalstkqty;
                                  document.getElementById("ShopQty" + rowid).innerHTML = data.Quantity;
                                  document.getElementById("Unit" + rowid).innerHTML = data.Unit;
                                  document.getElementById("UnitVal" + rowid).value = data.Unit;
                                  document.getElementById("NumberType" + rowid).value = data.NumberType;
                                  document.getElementById("SellingPrice" + rowid).value = data.SellingPrice;
                                  document.getElementById("MRP" + rowid).value = data.MRP;
                                  document.getElementById("CostPrice" + rowid).value = data.costprice;
                                  document.getElementById("Color" + rowid).value = data.Color;
                                  document.getElementById("Material" + rowid).value = data.Material;
                                  document.getElementById("ItemTaxVal" + rowid).value = data.taxPercent;
                                  document.getElementById("Size" + rowid).value = data.Size;
                                  document.getElementById("Brand" + rowid).value = data.Brand;
                                  document.getElementById("DesignCode" + rowid).value = data.DesignCode;
                                  document.getElementById("DesignName" + rowid).value = data.DesignName;
                                  document.getElementById("Description" + rowid).value = data.Description;
                                  document.getElementById("DisPer" + rowid).value = data.discount;
                                  document.getElementById("DisRs" + rowid).value = data.discountrps;
                                  document.getElementById("Narration" + rowid).disabled = false;
                                  document.getElementById("DisPer" + rowid).disabled = false;
                                  document.getElementById("DisRs" + rowid).disabled = false;

                                  //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                                  //on each item which is applied
                                  var tax = data.taxPercent;
                                  if (tax != '0') {//if tax is '0' no need to add new taxnumber
                                      var taxcount = document.getElementById("ItemTaxCount").value;
                                      if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                          $("#ItemTaxNumber" + taxcount).val(tax);
                                          $("#AddedTax1").text(tax + "%");
                                      }
                                      else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                          var taxpresent = 0;
                                          for (var i = 1; i <= taxcount; i++) {
                                              var taxno = "ItemTaxNumber" + i;
                                              //if tax is already present then no need to make other taxnumbers
                                              if (tax == $("#" + taxno).val()) {
                                                  taxpresent++;
                                              }
                                          }
                                          if (taxpresent == 0) {
                                              taxcount++;
                                              var taxno = "ItemTaxNumber" + taxcount;
                                              var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                              $("#AllTaxesNumbersValue").append(data);
                                              var addedtaxno = "AddedTax" + taxcount;
                                              var addedtaxamount = "AddedTaxAmount" + taxcount;
                                              var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                              var addedamount = "AddedAmount" + taxcount;
                                              var addedamounthdn = "AddedAmounthdn" + taxcount;
                                              var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                              newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                              newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                              $("#AddTaxes").append(newlabel);
                                              $("#ItemTaxCount").val(taxcount);
                                          }
                                      }
                                  }
                                  var CostPrice = +$("#CostPrice" + rowid).val();
                                  var Tax = +$("#ItemTaxVal" + rowid).val();
                                  var MRP = +$("#MRP" + rowid).val();
                                  taxoncostprice = (CostPrice * Tax) / 100;
                                  var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                                  var Sellingprice = MRP - (MRP * +taxpercentoncostprice / 100);
                                  $("#SellingPrice" + rowid).val(Sellingprice.toFixed(2));
                              }
                              else {
                                  alertbox("Invalid Barcode..");
                              }
                          });
                }
                else {
                    document.getElementById("Barcode" + rowid).value = "";
                    document.getElementById("ItemName" + rowid).value = "";
                    document.getElementById("Narration" + rowid).value = "";
                    document.getElementById("StkQty" + rowid).innerHTML = "";
                    document.getElementById("ShopQty" + rowid).innerHTML = "";
                    document.getElementById("Quantity" + rowid).value = "";
                    document.getElementById("DisPer" + rowid).value = "0";
                    document.getElementById("DisRs" + rowid).value = "0";
                    document.getElementById("Unit" + rowid).innerHTML = "";
                    document.getElementById("MRP" + rowid).value = "";
                    document.getElementById("Amount" + rowid).innerHTML = "";
                }
            }
        }
    }
</script>

@*CREATE NON-INVENTORY ITEMS*@
<script type="text/javascript">
    $(function () {
        $("#NonInvButton").click(function () {
            var noninvrowid = document.getElementById("hdnRowCount").value;
            var presentrows = +document.getElementById("ActualRBListCount").value;
            var previousrowsvalidation = 0;

            //check the validation for already present items
            for (i = 1; i <= presentrows; i++) {
                var prevBarcode = "Barcode" + i;
                var prevQuantity = "Quantity" + i;
                var prevMRP = "MRP" + i;
                var prevDiscount = "DisPer" + i;
                var prevDiscountRs = "DisRs" + i;
                var prevItemName = "ItemName" + i;
                var previtemtype = "ItemType" + i;
                var prevNarration = "Narration" + i;

                if (document.getElementById(prevItemName) != null) {
                    if (document.getElementById(prevBarcode) != null) {
                        if ($("#" + prevBarcode).val() == "") {
                            alertbox("Please Select The Barcode");
                            previousrowsvalidation++;
                            break;
                        }
                        else if ($("#" + prevQuantity).val() == "") {
                            alertbox("Please Fill The Quantity");
                            previousrowsvalidation++;
                            break;
                        }
                        else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                            alertbox("Please Fill The Rate");
                            previousrowsvalidation++;
                            break;
                        }
                        else {
                            document.getElementById(prevBarcode).disabled = true;
                            document.getElementById(prevNarration).disabled = true;
                            document.getElementById(prevQuantity).disabled = true;
                            document.getElementById(prevMRP).disabled = true;
                            document.getElementById(prevDiscount).disabled = true;
                            document.getElementById(prevDiscountRs).disabled = true;
                            document.getElementById(prevItemName).disabled = true;
                        }
                    }
                    else {
                        if ($("#" + prevItemName).val() == "") {
                            alertbox("Please Select The Item");
                            previousrowsvalidation++;
                            break;
                        }
                        else if ($("#" + prevQuantity).val() == "") {
                            alertbox("Please Fill The Quantity");
                            previousrowsvalidation++;
                            break;
                        }
                        else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                            alertbox("Please Fill The Rate");
                            previousrowsvalidation++;
                            break;
                        }
                        else {
                            document.getElementById(prevQuantity).disabled = true;
                            document.getElementById(prevNarration).disabled = true;
                            document.getElementById(prevMRP).disabled = true;
                            document.getElementById(prevDiscount).disabled = true;
                            document.getElementById(prevDiscountRs).disabled = true;
                            document.getElementById(prevItemName).disabled = true;
                        }
                    }
                }
            }

            if (previousrowsvalidation == 0) {
                var newrowgeneratedvalidation = 0;
                for (i = presentrows + 1; i <= noninvrowid; i++) {
                    var prevBarcode = "Barcode" + i;
                    var prevQuantity = "Quantity" + i;
                    var prevMRP = "MRP" + i;
                    var prevDiscount = "DisPer" + i;
                    var prevDiscountRs = "DisRs" + i;
                    var prevItemName = "ItemName" + i;
                    var prevNarration = "Narration" + i;

                    if (document.getElementById(prevItemName) != null) {
                        if (document.getElementById(prevBarcode) != null) {
                            if ($("#" + prevBarcode).val() == "") {
                                alertbox("Please Select The Barcode");
                                newrowgeneratedvalidation++;
                            }
                            else if ($("#" + prevQuantity).val() == "" || +$("#" + prevQuantity).val() == 0) {
                                alertbox("Please Fill The Quantity");
                                newrowgeneratedvalidation++;
                            }
                            else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                                alertbox("Please Fill The Rate");
                                newrowgeneratedvalidation++;
                            }
                            else {
                                document.getElementById(prevBarcode).disabled = true;
                                document.getElementById(prevNarration).disabled = true;
                                document.getElementById(prevQuantity).disabled = true;
                                document.getElementById(prevMRP).disabled = true;
                                document.getElementById(prevDiscount).disabled = true;
                                document.getElementById(prevDiscountRs).disabled = true;
                                document.getElementById(prevItemName).disabled = true;
                            }
                        }
                        else {
                            if ($("#" + prevItemName).val() == "") {
                                alertbox("Please Select The Item");
                                newrowgeneratedvalidation++;
                            }
                            else if ($("#" + prevQuantity).val() == "" || +$("#" + prevQuantity).val() == 0) {
                                alertbox("Please Fill The Quantity");
                                newrowgeneratedvalidation++;
                            }
                            else if ($("#" + prevMRP).val() == "" || +$("#" + prevMRP).val() == 0) {
                                alertbox("Please Fill The Rate");
                                newrowgeneratedvalidation++;
                            }
                            else {
                                document.getElementById(prevQuantity).disabled = true;
                                document.getElementById(prevNarration).disabled = true;
                                document.getElementById(prevMRP).disabled = true;
                                document.getElementById(prevDiscount).disabled = true;
                                document.getElementById(prevDiscountRs).disabled = true;
                                document.getElementById(prevItemName).disabled = true;
                            }
                        }
                    }
                }

                if (newrowgeneratedvalidation == 0) {
                    noninvrowid = +noninvrowid + 1;
                    row = "row" + noninvrowid;
                    var ItemCodeLabel = "ItemCodeLabel" + noninvrowid;
                    var ItemCode = "ItemCode" + noninvrowid;
                    var ItemName = "ItemName" + noninvrowid;
                    var ItemNameVal = "ItemNameVal" + noninvrowid;
                    var Narration = "Narration" + noninvrowid;
                    var Description = "Description" + noninvrowid;
                    var StockQuantity = "StkQty" + noninvrowid;
                    var ShopQuantity = "ShopQty" + noninvrowid;
                    var Quantity = "Quantity" + noninvrowid;
                    var Unit = "Unit" + noninvrowid;
                    var UnitVal = "UnitVal" + noninvrowid;
                    var NumberType = "NumberType" + noninvrowid;
                    var SellingPrice = "SellingPrice" + noninvrowid;
                    var MRP = "MRP" + noninvrowid;
                    var costprice = "CostPrice" + noninvrowid;
                    var Size = "Size" + noninvrowid;
                    var DesignCode = "DesignCode" + noninvrowid;
                    var DesignName = "DesignName" + noninvrowid;
                    var Brand = "Brand" + noninvrowid;
                    var DiscountPer = "DisPer" + noninvrowid;
                    var DiscountRs = "DisRs" + noninvrowid;
                    var AmountVal = "AmountVal" + noninvrowid;
                    var Amount = "Amount" + noninvrowid;
                    var Color = "Color" + noninvrowid;
                    var Material = "Material" + noninvrowid;
                    var ItemTaxVal = "ItemTaxVal" + noninvrowid;
                    var ItemTaxAmt = "ItemTaxAmt" + noninvrowid;
                    var itemtype = "ItemType" + noninvrowid;
                    var ItemList = $("#AddItemRows");

                    ItemList.append(
                    "<tr id='" + row + "'><td style='text-align:center'>" + noninvrowid + "</td>" +
                    "<td class='col-md-2 col-lg-2 col-sm-2' style='text-align:center'><label>----</label></td>" +
                    "<td style='text-align:center'><label style='font-weight:normal' id='" + ItemCodeLabel + "'></label></td>" +
                    "<td class='col-md-2 col-lg-2 col-sm-2'><select id='" + ItemName + "' name='" + ItemName + "' class='form-control'><option>Select Item</option></select><input type='hidden' id='" + ItemCode + "' name='" + ItemCode + "' /><input type='hidden' id='" + ItemNameVal + "' name='" + ItemNameVal + "' /><input type='hidden' id='" + Narration + "' name='" + Narration + "' /></td>" +
                    "<td class='col-md-2 col-lg-2 col-sm-2'><textarea id='" + Narration + "' name='" + Narration + "' class='form-control' placeholder='Narration' style='text-align: center' rows='1'></textarea></td>" +
                    "<td style='text-align:center'><label>----</label></td>" +
                    "<td style='text-align:center'><label>----</label><input type='hidden' name='" + ItemTaxVal + "' id='" + ItemTaxVal + "' /><input type='hidden' name='" + ItemTaxAmt + "' id='" + ItemTaxAmt + "' /><input type='hidden' id='" + Brand + "' name='" + Brand + "' /><input type='hidden' id='" + DesignCode + "' name='" + DesignCode + "' /><input type='hidden' id='" + DesignName + "' name='" + DesignName + "' /></td>" +
                    "<td><input type='text' name='" + Quantity + "' id='" + Quantity + "' placeholder='Qty' autocomplete='off' class='form-control' style='text-align:center' onchange='CalculateAmount(" + noninvrowid + ',' + '\"quantity\"' + ")' onkeypress='return AllowDecimal(event," + noninvrowid + ")'/></td>" +
                    "<td><label id='" + Unit + "' style='font-weight: normal'></label><input type='hidden' id='" + UnitVal + "' name='" + UnitVal + "' /><input type='hidden' id='" + NumberType + "' name='" + NumberType + "' /><input type='hidden' id='" + Description + "' name='" + Description + "' /></td>" +
                    "<td class='col-md-1 col-lg-1 col-sm-1' style='text-align:center'> <input type='text' name='" + MRP + "' id='" + MRP + "' placeholder='Rate' autocomplete='off' class='form-control'style='text-align:center' onchange='CalculateAmount(" + noninvrowid + ',' + '\"quantity\"' + ")' onkeypress='return AllowNumbers(event)' /><input type='hidden' id='" + SellingPrice + "' name='" + SellingPrice + "' /><input type='hidden' id='" + costprice + "' name='" + costprice + "' /></td>" +
                    "<td class='col-md-1 col-lg-1 col-sm-1'><input type='text' name='" + DiscountPer + "' id='" + DiscountPer + "' autocomplete='off' class='form-control' style='text-align:center' onchange='CalculateAmount(" + noninvrowid + ',' + '\"percent\"' + ")' onkeypress='return AllowNumbers(event)' value='0' placeholder='0%' /></td>" +
                    "<td class='col-md-1 col-lg-1 col-sm-1'><input type='text' name='" + DiscountRs + "' id='" + DiscountRs + "' autocomplete='off' class='form-control' style='text-align:center' onchange='CalculateAmount(" + noninvrowid + ',' + '\"rps\"' + ")' onkeypress='return AllowNumbers(event)' value='0.00' placeholder='0' /></td>" +
                    "<td style='text-align:right'><label id='" + Amount + "' style='font-weight: normal'></label><input type='hidden' id='" + AmountVal + "' name='" + AmountVal + "' /><input type='hidden' id='" + itemtype + "' name='" + itemtype + "' value='NonInventory' /><input type='hidden' id='" + Size + "' name='" + Size + "' /></td>" +
                    "<td><div style='height:2px'></div><a href='#' onclick='DeleteRow(" + noninvrowid + ")' class='fa fa-trash fa-lg' style='color:red;' /></td><input type='hidden' name='" + Color + "' id='" + Color + "' /><input type='hidden' name='" + Material + "' id='" + Material + "' /></tr>"
                    );

                    //FILL NON INVENTORY ITEM DDL ON ENTER CLICK EVENT
                    $.getJSON("/RetailBill/GetNonInventoryItems",
                    function (data) {
                        var select = $("#" + ItemName);
                        select.empty();
                        select.append($('<option/>', {
                            text: "Select Item",
                            value: "",
                        }));
                        $.each(data, function (index, itemdata) {
                            select.append($('<option/>', {
                                text: itemdata.Text + " " + itemdata.Value,
                                value: itemdata.Value,
                            }));
                        });
                    });


                    //GET ITEM DETAILS FROM ITEMNAME
                    $("#" + ItemName).change(function () {
                        var rowcount = document.getElementById("hdnRowCount").value;
                        var noninvitemcode = document.getElementById(ItemName).value;
                        if (noninvitemcode != "") {

                            $.getJSON("/RetailBill/GetNonInvItemdetailsByItemCode", {
                                ItemCode: noninvitemcode,
                            },
                               function (data) {
                                   $("#" + ItemCode).val(data.itemCode);
                                   $("#" + ItemCodeLabel).text(data.itemCode);
                                   $("#" + ItemNameVal).val(data.itemName);
                                   $("#" + Brand).val(data.brandName);
                                   $("#" + Size).val(data.size);
                                   $("#" + DesignCode).val(data.designCode);
                                   $("#" + DesignName).val(data.designName);
                                   $("#" + Unit).text(data.unit);
                                   $("#" + UnitVal).val(data.unit);
                                   $("#" + Description).val(data.description);
                                   $("#" + NumberType).val(data.NumberType);
                                   $("#" + Color).val(data.colorCode);
                                   $("#" + SellingPrice).val(data.sellingprice);
                                   $("#" + MRP).val(data.mrp);
                                   $("#" + costprice).val(data.costprice);
                                   $("#" + Material).val(data.typeOfMaterial);
                                   $("#" + ItemTaxVal).val(data.taxPercent);
                                   $("#" + DiscountPer).val(data.discount);
                                   $("#" + DiscountRs).val(data.discountrps);
                                   
                                   
                                   //if new tax arrived e.g. if 5% is there but 12.5% or something else arrived it has to be added as new taxnumber for calculating
                                   //on each item which is applied
                                   var tax = data.taxPercent;
                                   if (tax != '0') {//if tax is '0' no need to add new taxnumber
                                       var taxcount = document.getElementById("ItemTaxCount").value;
                                       if ($("#ItemTaxNumber" + taxcount).val() == 0) { //if first row's tax is 0 then add the tax in taxnumber1
                                           $("#ItemTaxNumber" + taxcount).val(tax);
                                           $("#AddedTax1").text(tax + "%");
                                       }
                                       else {//if first row tax is not 0 then make the taxnumber2 or 3 or more 
                                           var taxpresent = 0;
                                           for (var i = 1; i <= taxcount; i++) {
                                               var taxno = "ItemTaxNumber" + i;
                                               //if tax is already present then no need to make other taxnumbers
                                               if (tax == $("#" + taxno).val()) {
                                                   taxpresent++;
                                               }
                                           }
                                           if (taxpresent == 0) {
                                               taxcount++;
                                               var taxno = "ItemTaxNumber" + taxcount;
                                               var data = "<input type='hidden' id='" + taxno + "' name='" + taxno + "' value='" + tax + "' />";
                                               $("#AllTaxesNumbersValue").append(data);
                                               var addedtaxno = "AddedTax" + taxcount;
                                               var addedtaxamount = "AddedTaxAmount" + taxcount;
                                               var addedtaxamounthdn = "AddedTaxAmounthdn" + taxcount;
                                               var addedamount = "AddedAmount" + taxcount;
                                               var addedamounthdn = "AddedAmounthdn" + taxcount;
                                               var newlabel = "<div class='row'><div class='col-md-3 col-lg-3'><label id='" + addedamount + "'>0</label><input type='hidden' id='" + addedamounthdn + "' name='" + addedamounthdn + "' value='0' /></div>";
                                               newlabel += "<div class='col-md-2 col-lg-2'><label id='" + addedtaxno + "'>" + tax + "%" + "</label></div>";
                                               newlabel += "<div class='col-md-7 col-lg-7'><label id='" + addedtaxamount + "'>0</label><input type='hidden' id='" + addedtaxamounthdn + "' name='" + addedtaxamounthdn + "' value='0' /></div></div>";
                                               $("#AddTaxes").append(newlabel);
                                               $("#ItemTaxCount").val(taxcount);
                                           }
                                       }
                                   }
                                   var CostPrice = +$("#CostPrice" + noninvrowid).val();
                                   var Tax = +$("#ItemTaxVal" + noninvrowid).val();
                                   var mrp = +$("#MRP" + noninvrowid).val();
                                   taxoncostprice = (CostPrice * Tax) / 100;
                                   var taxpercentoncostprice = CostPrice / (CostPrice + taxoncostprice) * Tax;
                                   var Sellingprice = mrp - (mrp * +taxpercentoncostprice / 100);
                                   $("#SellingPrice" + noninvrowid).val(Sellingprice.toFixed(2));
                               });
                        }
                        else {
                            alertbox("Please Select Item First");
                            document.getElementById("Quantity" + noninvrowid).value = "";
                            document.getElementById("Narration" + noninvrowid).value = "";
                            document.getElementById("DisPer" + noninvrowid).value = "0";
                            document.getElementById("DisRs" + noninvrowid).value = "0";
                            document.getElementById("Unit" + noninvrowid).innerHTML = "";
                            document.getElementById("MRP" + noninvrowid).value = "";
                            document.getElementById("Amount" + noninvrowid).innerHTML = "";
                        }
                    });
                    $("#hdnRowCount").val(noninvrowid);
                }
            }
        });
    });
</script>


@*CALCULATE AMOUNT + CALCULATE AMOUNT USING DISCOUNT IN RS OR PERCENT*@
<script type="text/javascript">
    function CalculateAmount(count, type) {
        if (type == "rps") {
            document.getElementById("discountType").value = "rps";
        }
        else if (type == "percent") {
            document.getElementById("discountType").value = "percent"
        }

        var quantity = "Quantity" + count;
        var stockquantity = "StkQty" + count;
        var shopquantity = "ShopQty" + count;
        var sellingprice = "SellingPrice" + count;
        var mrp = "MRP" + count;
        var amount = "Amount" + count;
        var amountvalue = "AmountVal" + count;
        var costprice = "CostPrice" + count;
        var disper = "DisPer" + count;
        var disrs = "DisRs" + count;
        var prevquantity = "PrevQuantity" + count;
        var itemtaxval = "ItemTaxVal" + count;

        if (document.getElementById(quantity) != null) {
            var percent = (+document.getElementById(disper).value) / 100;
            var rupees = (+document.getElementById(disrs).value);

            var taxoncostprice = +$("#" + costprice).val();
            if (+taxoncostprice != 0) {
                taxoncostprice = +$("#" + costprice).val() * +$("#" + itemtaxval).val() / 100;
                var taxpercentoncostprice = +$("#" + costprice).val() / (+$("#" + costprice).val() + taxoncostprice) * +$("#" + itemtaxval).val();
                var sellingpriceval = (+$("#" + mrp).val()) - (+$("#" + mrp).val() * +taxpercentoncostprice / 100);
                $("#" + sellingprice).val(sellingpriceval.toFixed(2));
            }
            else {
                $("#" + sellingprice).val($("#" + mrp).val());
            }

            if (document.getElementById(shopquantity) != null) {
                var shopqty = document.getElementById(shopquantity).innerHTML;
                var qty = +document.getElementById(quantity).value;

                // if quantity > shop stock quantity then it gives an alert
                if (shopqty != "----") {
                    shopqty = +shopqty;
                    if (document.getElementById(prevquantity) == null) {
                        if (qty > shopqty) {
                            alertbox("Can Not Exceed Above Shop Quantity..");
                            document.getElementById(quantity).value = "";
                        }
                    }
                    else {
                        var prevqty = +document.getElementById(prevquantity).value;
                        if (qty - prevqty > shopqty) {
                            alertbox("Can Not Exceed Above Shop Quantity..");
                            document.getElementById(quantity).value = "";
                        }
                    }
                }
            }

            var dynamicamount = (+document.getElementById(quantity).value) * (+document.getElementById(mrp).value);

            //CALCULATE AMOUNT USING DISCOUNT
            var discounttype = document.getElementById("discountType").value;
            var QuanVal = +(document.getElementById(quantity).value);
            var MRPVal = +(document.getElementById(mrp).value);

            if (QuanVal == 0 || MRPVal == 0) {
                document.getElementById(disper).value = "0";
                document.getElementById(disrs).value = "0.00";
            }

            else if (discounttype == "percent") {
                if (percent != 0) {
                    var valueafterdiscount = dynamicamount * percent;
                    document.getElementById(disrs).value = valueafterdiscount.toFixed(2);
                    dynamicamount = dynamicamount - valueafterdiscount;

                }
                else { document.getElementById(disrs).value = "0.00"; }
            }
            else {
                if (rupees != 0) {
                    var valueafterdiscount = rupees / dynamicamount * 100;
                    document.getElementById(disper).value = valueafterdiscount.toFixed(1);
                    dynamicamount = dynamicamount - rupees;
                }
                else { document.getElementById(disper).value = 0; }
            }
            document.getElementById(amount).innerHTML = addCommas(dynamicamount.toFixed(2));
            document.getElementById(amountvalue).value = dynamicamount.toFixed(2);
        }

        CalculateTotalAmount();
        CalculateTotalDiscount();
        CalculateTaxSummary(count);
        CalcGrandTotal();
    }
</script>

@*CALCULATE TOTAL AMOUNT*@
<script type="text/javascript">
    function CalculateTotalAmount() {
        var rowid = document.getElementById("hdnRowCount").value;
        var totalamount = 0;
        for (var i = 1; i <= rowid; i++) {
            var Amount = "Amount" + i;
            if (document.getElementById(Amount) != null) {
                totalamount = totalamount + (+removeCommas(document.getElementById(Amount).innerHTML));
            }
        }

        document.getElementById("Total_Amount").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(totalamount.toFixed(2));
        document.getElementById("Total_Amount_Value").value = totalamount.toFixed(2);
    }
</script>

<script type="text/javascript">
    //CALCULATE GRAND TOTAL
    function CalcGrandTotal() {
        var ttlamt = 0;
        var amt = +removeCommas(document.getElementById("Total_Amount").innerHTML);
        var totaltaxamt = 0;
        var TaxCount = (+document.getElementById("ItemTaxCount").value);
        if (+($("#ItemTaxNumber1").val()) != 0) {
            for (var i = 1; i <= TaxCount; i++) {
                var addedtaxamount = "AddedTaxAmount" + i;
                //amt = amt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
                totaltaxamt = totaltaxamt + (+removeCommas(document.getElementById(addedtaxamount).innerHTML));
            }
            //document.getElementById("TotalTaxAmount").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(totaltaxamt.toFixed(2));
            document.getElementById("hdnTotalTaxAmount").value = totaltaxamt.toFixed(2);
        }

        amt = Math.round(amt.toFixed(2));
        document.getElementById("Grand_Total").innerHTML = "<i class='fa fa-rupee'></i>" + addCommas(amt.toFixed(2));
        document.getElementById("Grand_Total_Value").value = amt.toFixed(2);
        document.getElementById("In_Words").innerHTML = NumberToWords();

        var adjustedamt = +removeCommas(document.getElementById("AdjustedAmount").innerHTML)
        var payment = +removeCommas(document.getElementById("Payment").innerHTML)
        var remainingamt = amt - adjustedamt - payment;
        if (remainingamt > 0) {

            document.getElementById("BalanceValue").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(remainingamt.toFixed(2));
        }
        else if (remainingamt < 0) {

            document.getElementById("RefundValue").innerHTML = "<i class='fa fa-inr'></i>" + addCommas((0 - remainingamt).toFixed(2));
        }
        else {

            document.getElementById("BalanceValue").innerHTML = "<i class='fa fa-inr'></i>" + addCommas(remainingamt.toFixed(2));
        }
    }
</script>

@*CALCULATE TRADE DISCOUNT*@
<script type="text/javascript">
    function CalculateTotalDiscount() {
        var rowid = document.getElementById("hdnRowCount").value;
        var totalamount = 0;
        for (var i = 1; i <= rowid; i++) {
            var disinrs = "DisRs" + i;
            if (document.getElementById(disinrs) != null) {
                totalamount = (+totalamount) + (+removeCommas(document.getElementById(disinrs).value));
            }
        }
        document.getElementById("TotalDiscountValue").innerHTML = addCommas(totalamount.toFixed(2));
        document.getElementById("RetailBillDetails_TotalDiscount").value = totalamount.toFixed(2);
    };
</script>

@*CALCULATE TAX SUMMARY *@
<script type="text/javascript">
    function CalculateTaxSummary() {
        var TaxCount = document.getElementById("ItemTaxCount").value;

        var rowid = +document.getElementById("hdnRowCount").value;
        for (var i = 1; i <= TaxCount; i++) {
            var TotalTaxAmount = 0;
            var itemtaxno = "ItemTaxNumber" + i;
            var addedtaxamount = "AddedTaxAmount" + i;
            var addedtaxamounthdn = "AddedTaxAmounthdn" + i;
            var addedamount = "AddedAmount" + i;
            var addedamounthdn = "AddedAmounthdn" + i;
            for (var j = 1; j <= rowid; j++) {
                var itemtaxvalue = "ItemTaxVal" + j;
                var itemtaxamt = "ItemTaxAmt" + j;
                var amount = "Amount" + j;
                var discount = "DisPer" + j;
                if (document.getElementById(amount) != null) {
                    if ($("#" + itemtaxno).val() == $("#" + itemtaxvalue).val()) {
                        var discountpercent = (+document.getElementById(discount).value / 100);
                        var sellingpriceamount = +$("#Quantity" + j).val() * +$("#SellingPrice" + j).val();
                        if (discountpercent != 0) {
                            var valueafterdiscount = sellingpriceamount * discountpercent;
                            sellingpriceamount = sellingpriceamount - valueafterdiscount;
                        }
                        document.getElementById(itemtaxamt).value = (sellingpriceamount * (+document.getElementById(itemtaxno).value / 100)).toFixed(2);
                        TotalTaxAmount = TotalTaxAmount + sellingpriceamount;
                    }
                }
            }
            document.getElementById(addedamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedamounthdn).value = TotalTaxAmount.toFixed(2);
            TotalTaxAmount = TotalTaxAmount * (+document.getElementById(itemtaxno).value / 100);
            document.getElementById(addedtaxamount).innerHTML = "<i class='fa fa-inr'></i>" + addCommas(TotalTaxAmount.toFixed(2));
            document.getElementById(addedtaxamounthdn).value = TotalTaxAmount.toFixed(2);
        }
    }
</script>

@*SHOW STOCK QUANTITY POP-UP*@
<script type="text/javascript">
    function ShowQuantity(row) {
        var itemcode = document.getElementById("ItemCode" + row).value;
        window.open("/Stock/ShowAllQuantity?code=" + itemcode, "_blank", "width=500,height=300,top=150px,left=400px");
    }
</script>

@*DELETE ROW*@
<script type="text/javascript">
    function DeleteRow(rowid) {
        var row = "row" + rowid;
        confirmbox("Are you sure you want to delete this row?", row);
    }
</script>

@*GET LOGIN EMPLOYEE DETAILS (PREPAID BY)*@
<script type="text/javascript">
    jQuery(document).ready(function () {
        var shopcode = document.getElementById("LoginShopCode").value;
        document.getElementById("PreparedByEmail").innerHTML = document.getElementById("preparedby").value;
        var preparedbyemail = document.getElementById("PreparedByEmail").innerHTML;

        $.getJSON("/RetailBill/GetPreparedByEmpDetails", { email: preparedbyemail },
                  function (data) {
                      document.getElementById("PreparedByName").innerHTML = data.Name;
                      document.getElementById("PreparedByContact").innerHTML = data.MobileNo;
                      document.getElementById("RetailBillDetails_PreparedBy").value = data.Name;
                  });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#Update").click(function () {
            var rowid = +document.getElementById("hdnRowCount").value;
            var presentrows = +document.getElementById("ActualRBListCount").value;

            var validationcounter = 0;

            for (i = 1; i <= presentrows; i++) {
                var quantity = "Quantity" + i;
                var mrp = "MRP" + i;

                if ($("#" + quantity).val() == "") {
                    alertbox("Please Fill The Quantity");
                    validationcounter = 1;
                    break;
                }
                else if ($("#" + mrp).val() == "" || (+$("#" + mrp).val()) == 0) {
                    alertbox("Please Fill The Rate");
                    validationcounter = 1;
                    break;
                }
            }

            for (i = presentrows + 1; i <= rowid; i++) {
                var itemname = "ItemName" + i;
                var quantity = "Quantity" + i;
                var mrp = "MRP" + i;
                var barcode = "Barcode" + i;

                if (document.getElementById(itemname) != null) {
                    if (document.getElementById(barcode) != null) {
                        if ($("#" + barcode).val() == "") {
                            alertbox("Please Select The Barcode");
                            validationcounter = 1;
                            break;
                        }
                        else if ($("#" + quantity).val() == "" || +$("#" + quantity).val() == 0) {
                            alertbox("Please Fill The Quantity");
                            validationcounter = 1;
                            break;
                        }
                        else if ($("#" + mrp).val() == "" || (+$("#" + mrp).val()) == 0) {
                            alertbox("Please Fill The Rate");
                            validationcounter = 1;
                            break;
                        }
                    }
                    else {
                        if ($("#" + itemname).val() == "") {
                            alertbox("Please Select The Item");
                            validationcounter = 1;
                            break;
                        }
                        else if ($("#" + quantity).val() == "" || +$("#" + quantity).val() == 0) {
                            alertbox("Please Fill The Quantity");
                            validationcounter = 1;
                            break;
                        }
                        else if ($("#" + mrp).val() == "" || (+$("#" + mrp).val()) == 0) {
                            alertbox("Please Fill The Rate");
                            validationcounter = 1;
                            break;
                        }
                    }
                }
            }

            if (validationcounter == 0) {
                var emptyqty = 0;
                var emptyrow = 0;
                for (var i = 1; i <= presentrows; i++) {
                    var prevquantity = "Quantity" + i;
                    if (+$("#" + prevquantity).val() == 0) {
                        emptyqty++;
                    }
                }
                for (var i = presentrows + 1; i <= rowid; i++) {
                    if (document.getElementById("ItemName" + i) == null) {
                        emptyrow++;
                    }
                }

                if (emptyqty == presentrows && presentrows == rowid) {
                    alertbox("Quantity Of All Items Cannot Be Zero");
                    return false;
                }
                else if (emptyqty == presentrows && emptyrow == rowid - presentrows) {
                    alertbox("Quantity Of All Items Cannot Be Zero");
                    return false;
                }
                else {
                    document.getElementById("ClientName").disabled = false;
                    document.getElementById("SalesPerson").disabled = false;
                    for (var i = 1; i <= rowid; i++) {
                        var prevbarcode = "Barcode" + i;
                        var previtemname = "ItemName" + i;
                        var previtemtype = "ItemType" + i;
                        var prevquantity = "Quantity" + i;
                        var prevmrp = "MRP" + i;
                        var prevdiscountpercent = "DisPer" + i;
                        var prevdiscountrps = "DisRs" + i;
                        var prevNarration = "Narration" + i;

                        if (document.getElementById(previtemname) != null) {
                            if (document.getElementById(previtemtype).value == "Inventory") {
                                document.getElementById(prevbarcode).disabled = false;
                            }
                            document.getElementById(previtemname).disabled = false;
                            document.getElementById(prevquantity).disabled = false;
                            document.getElementById(prevmrp).disabled = false;
                            document.getElementById(prevdiscountpercent).disabled = false;
                            document.getElementById(prevdiscountrps).disabled = false;
                            document.getElementById(prevNarration).disabled = false;
                        }
                    }
                }
            }
            else { return false; }
        });
    });
</script>

@using (Html.BeginForm("GetDetailsByRBNoForEdit", "RetailBill", FormMethod.Post))
{ 
    <audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
        <source src="" type="audio/ogg" />
    </audio>
    
    @Html.HiddenFor(model => model.RetailBillDetails.RetailMasterId)
    @Html.HiddenFor(model => model.RetailBillDetails.RetailBillNo)
    @Html.HiddenFor(model => model.RetailBillDetails.Date)
    @Html.HiddenFor(model => model.RetailBillDetails.QuotationNo)
    @Html.HiddenFor(model => model.RetailBillDetails.SalesOrderNo)
    @Html.HiddenFor(model => model.RetailBillDetails.DeliveryChallanNo)
    @Html.HiddenFor(model => model.RetailBillDetails.ClientAddress)
    @Html.HiddenFor(model => model.RetailBillDetails.ClientContact)
    @Html.HiddenFor(model => model.RetailBillDetails.ClientEmail)
    @Html.HiddenFor(model => model.RetailBillDetails.SalesPersonAddress)
    @Html.HiddenFor(model => model.RetailBillDetails.SalesPersonContact)
    @Html.HiddenFor(model => model.RetailBillDetails.SalesPersonEmail)
    @Html.HiddenFor(model => model.RetailBillDetails.SalesPersonDesignation)
    @Html.HiddenFor(model => model.RetailBillDetails.ShopAddress)
    @Html.HiddenFor(model => model.RetailBillDetails.ShopContactPerson)
    @Html.HiddenFor(model => model.RetailBillDetails.ShopEmail)
    @Html.HiddenFor(model => model.RetailBillDetails.ShopName)
    @Html.HiddenFor(model => model.RetailBillDetails.PreparedBy)
    @Html.HiddenFor(model => model.RetailBillDetails.Balance)
    @Html.HiddenFor(model => model.RetailBillDetails.Refund)
    @Html.HiddenFor(model => model.RetailBillDetails.RefundToClient)
    @Html.HiddenFor(model => model.RetailBillDetails.AdjustedAmount)
    @Html.HiddenFor(model => model.RetailBillDetails.TotalDiscount)
    @Html.HiddenFor(model => model.RetailBillDetails.AdjustedBill)
    @Html.HiddenFor(model => model.RetailBillDetails.AdjustedStatus)
    @Html.HiddenFor(model => model.RetailBillDetails.CashierStatus)
    @Html.HiddenFor(model => model.RetailBillDetails.SalesReturn)
    @Html.HiddenFor(model => model.RetailBillDetails.SalesReturnNo)
    @Html.HiddenFor(model => model.RetailBillDetails.TaxStatus)
    @Html.HiddenFor(model => model.RetailBillDetails.Payment)
    
    <input type="hidden" id="hdnTotalTaxAmount" name="hdnTotalTaxAmount" value="@Model.RetailBillDetails.TotalTaxAmount" />
    <input type="hidden" id="discountType" />
    <input type="hidden" id="hdnRowCount" name="hdnRowCount" value="@Model.RetailBillItemList.Count()" /> 
    <input type="hidden" id="ActualRBListCount" value="@Model.RetailBillItemList.Count()" />
    
    <div id="AllTaxesNumbersValue">
        @if (Model.InventoryTaxList.Count() == 0)
        {
            <input type="hidden" id="ItemTaxCount" name="ItemTaxCount" value="1" />
            <input type="hidden" id="ItemTaxNumber1" name="ItemTaxNumber1" value="0" />
        }
        else
        {
            <input type="hidden" id="ItemTaxCount" name="ItemTaxCount" value="@Model.InventoryTaxList.Count()" />
        }
    </div>
    <input type="hidden" id="preparedby" value="@HttpContext.Current.Session["UserEmail"]"/>
    <table style="border: 1px double; width: 100%">
        <tr>
            <td>
                <div class="col-lg-12 col-md-12">

                    <div class="col-lg-4 col-md-4" style="border-right: 1px solid #999; height: 230px;">
                        <div style="height: 10px"></div>
                        <div class="row">
                            <label style="font-size: 14px">Client Details:</label>
                            <div class="col-lg-12 col-md-12">
                                <label>Client Name: &nbsp</label>
                                @Html.TextBoxFor(model => model.RetailBillDetails.ClientName, new { @id = "ClientName", @class = "form-control", @autocomplete = "off", @placeholder = "Name" })
                                @if (Model.RetailBillDetails.QuotationNo != null || Model.RetailBillDetails.SalesOrderNo != null && Model.RetailBillDetails.DeliveryChallanNo != null)
                                { 
                                    <script type="text/javascript">
                                        document.getElementById("ClientName").disabled = true;
                                    </script>
                                }
                                <label>Address: &nbsp</label><label style="font-weight: normal" id="ClientAddress">@Model.RetailBillDetails.ClientAddress</label><br />
                                <label>Contact Number: &nbsp</label><label style="font-weight: normal" id="ClientContact">@Model.RetailBillDetails.ClientContact</label><br />
                                <label>Email: &nbsp</label><label style="font-weight: normal" id="ClientEmail">@Model.RetailBillDetails.ClientEmail</label>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4 col-md-4" style="border-right: 1px solid #999; height: 230px;">
                        <div>
                            <div class="row">
                                <div class="col-lg-12 col-md-12">
                                    <div style="height: 10px"></div>
                                    <div class="row">
                                        <div class="col-md-12 col-lg-12">
                                            <label style="font-size: 14px">Sales Person Details:</label>
                                            <div class="col-lg-12 col-md-12">
                                                <label>Name:<i style="color: red">*</i> &nbsp</label>
                                                @Html.TextBoxFor(model => model.RetailBillDetails.SalesPersonName, new { id = "SalesPerson", @class = "form-control", @autocomplete = "off", @placeholder = "Sales Person Name" })
                                                @Html.ValidationMessageFor(model => model.RetailBillDetails.SalesPersonName, null, new { @style = "color:#f00" })
                                                <label>Designation: &nbsp</label><label style="font-weight: normal" id="SalesPersonDesignation">@Model.RetailBillDetails.SalesPersonDesignation</label><br />
                                                <label>Address: &nbsp</label><label style="font-weight: normal" id="SalesPersonAddress">@Model.RetailBillDetails.SalesPersonAddress</label><br />
                                                <label>Contact: &nbsp</label><label style="font-weight: normal" id="SalesPersonContact">@Model.RetailBillDetails.SalesPersonContact</label><br />
                                                <label>Email: &nbsp</label><label style="font-weight: normal" id="SalesPersonEmail">@Model.RetailBillDetails.SalesPersonEmail</label><br />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4 col-md-4">
                        <div class="col-md-12 col-lg-12" style="height: 55%">
                            <div style="height: 10px"></div>
                            <div class="row">
                                <div class="col-lg-7 col-md-7">
                                    <div class="row">
                                        <label style="font-size: 14px;">Date:</label>
                                    </div>
                                </div>
                                <div class="col-lg-5 col-md-5">
                                    <div class="row">
                                        <label style="font-size: 14px;" id="date">@Convert.ToDateTime(Model.RetailBillDetails.Date).ToShortDateString()</label>
                                    </div>
                                </div>
                            </div>

                            <div style="height: 10px"></div>
                            <div class="row">
                                <div class="col-lg-7 col-md-7">
                                    <div class="row">
                                        <label style="font-size: 14px;">Retail Bill No:</label>
                                    </div>
                                </div>
                                <div class="col-lg-5 col-md-5">
                                    <div class="row">
                                        <label style="font-size: 14px;">@Html.DisplayFor(model => model.RetailBillDetails.RetailBillNo)</label>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                @{
                                if (Model.RetailBillDetails.QuotationNo != null)
                                {
                                    <div>
                                        <div style="height: 7px"></div>
                                        <div class="row">
                                            <div style="height: 7px"></div>
                                            <div class="col-lg-7 col-md-7">
                                                <label style="font-size: 14px;">Quotation No: &nbsp</label>
                                            </div>
                                            <div class="col-lg-5 col-md-5">
                                                <div class="row">
                                                    <label style="font-size: 14px;">@Html.DisplayFor(model => model.RetailBillDetails.QuotationNo)</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                }
                            </div>

                            <div class="row">
                                @{
                                if (Model.RetailBillDetails.SalesOrderNo != null)
                                {
                                    <div>
                                        <div style="height: 7px"></div>
                                        <div class="row">
                                            <div style="height: 7px"></div>
                                            <div class="col-lg-7 col-md-7">
                                                <label style="font-size: 14px;">Sales Order No: &nbsp</label>
                                            </div>
                                            <div class="col-lg-5 col-md-5">
                                                <div class="row">
                                                    <label style="font-size: 14px;">@Html.DisplayFor(model => model.RetailBillDetails.SalesOrderNo)</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                }
                            </div>

                            <div class="row">
                                @{
                                if (Model.RetailBillDetails.DeliveryChallanNo != null)
                                {
                                    <div>
                                        <div style="height: 7px"></div>
                                        <div class="row">
                                            <div style="height: 7px"></div>
                                            <div class="col-lg-7 col-md-7">
                                                <label style="font-size: 14px;">Delivery Challan No: &nbsp</label>
                                            </div>
                                            <div class="col-lg-5 col-md-5">
                                                <div class="row">
                                                    <label style="font-size: 14px;">@Html.DisplayFor(model => model.RetailBillDetails.DeliveryChallanNo)</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>

        <tr id="DynamicRowsDiv">
            <td>
                @{
                    <table class="table" id="AddItemRows" style="border-color: #d2d2d2; border: outset">
                        <thead>
                            <tr>
                                <th>
                                    <label style="text-align: center; width: 100%">S.No.</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Barcode<i style="color: red">*</i></label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Item Code</label>
                                </th>
                                <th>
                                    <label style="text-align: center; width: 100%">Item Name<i style="color: red">*</i></label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Narration</label>
                                </th>
                                <th>
                                    <label style="text-align: center; width: 100%">
                                        Stk<br />
                                        Qty</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">
                                        Shop<br />
                                        Qty</label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">Qty<i style="color: red">*</i></label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">Unit</label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">Rate<i style="color: red">*</i></label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">
                                        Disc<br />
                                        (%)</label></th>
                                <th class="col-lg-1 col-md-1">
                                    <label style="text-align: center; width: 100%">
                                        Disc<br />
                                        (<i class="fa fa-rupee"></i>)</label></th>
                                <th>
                                    <label style="text-align: center; width: 100%">
                                        Amt<br />
                                        (<i class="fa fa-rupee"></i>)</label></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>

                            @{
                                int count = 1;
                                if (Model.RetailBillItemList.Count() != 0 || Model.RetailBillItemList.Any())
                                {
                                    foreach (var item in Model.RetailBillItemList)
                                    {
                                        string row = "row" + count;
                                        string billno = "BillNo" + count;
                                        string barcode = "Barcode" + count;
                                        string itemcodelabel = "ItemCodeLabel" + count;
                                        string itemcode = "ItemCode" + count;
                                        string narration = "Narration" + count;
                                        string sellingprice = "SellingPrice" + count;
                                        string mrp = "MRP" + count;
                                        string costprice = "CostPrice" + count;
                                        string disper = "DisPer" + count;
                                        string disrs = "DisRs" + count;
                                        string stkqty = "StkQty" + count;
                                        string quantity = "Quantity" + count;
                                        string prevqty = "PrevQuantity" + count;
                                        string shopquantity = "ShopQty" + count;
                                        string unit = "Unit" + count;
                                        string numbertype = "NumberType" + count;
                                        string amount = "Amount" + count;

                                        string itemname = "ItemName" + count;
                                        string itemtype = "ItemType" + count;
                                        string designcode = "DesignCode" + count;
                                        string designname = "DesignName" + count;
                                        string brand = "Brand" + count;
                                        string size = "Size" + count;
                                        string descriptionvalue = "Description" + count;
                                        string colorvalue = "Color" + count;
                                        string materialvalue = "Material" + count;
                                        string unitvalue = "UnitVal" + count;
                                        string amountvalue = "AmountVal" + count;
                                        string itemtaxvalue = "ItemTaxVal" + count;
                                        string itemtaxamount = "ItemTaxAmt" + count;
                          
                                <tr id="@row">
                                    <td style="text-align: center">
                                        <label style="font-weight: normal">@count</label>
                                    </td>
                                    <td>
                                        @{
                                        if (item.ItemType == "Inventory")
                                        {
                                            string barcodeval = item.Barcode.Substring(0, 9);
                                            <input type="text" id="@barcode" style="text-align:center" name="@barcode" class="form-control" disabled="disabled" value="@barcodeval" />
                                        }
                                        else
                                        {
                                            <label style="text-align: center; width: 100%">----</label>
                                        }
                                        }

                                    </td>
                                    <td style="text-align: center">
                                        <label style="font-weight: normal" id="@itemcodelabel">@item.ItemCode</label>
                                    </td>
                                    <td>
                                        <input type="text" id="@itemname" name="@itemname" style="text-align:center" class="form-control" value="@item.ItemName" disabled="disabled" />
                                    </td>
                                    <td>
                                        <textarea class="form-control" style="text-align: center" id="@narration" name="@narration" placeholder="Narration" rows="1">@item.Narration</textarea></td>
                                    <td style="text-align: center">
                                        @{
                                        if (item.ItemType == "Inventory")
                                        {
                                            <a id="@stkqty" href="#" onclick="ShowQuantity(@count)"></a>
@*FILL STOCK QTY AND SHOP QUANTITY ON ONLOAD*@
                                            <script type="text/javascript">
                                                GetStockandShopQuantity("@count", "@item.ItemCode");
                                            </script>
                                        }
                                        else
                                        {
                                            <label>----</label>
                                        }
                                        }
                                    </td>
                                    <td style="text-align: center">
                                        @{
                                        if (item.ItemType == "Inventory")
                                        {
                                            <label id="@shopquantity"></label>
                                        }
                                        else
                                        {
                                            <label>----</label>   
                                        }
                                        }
                                        <script type="text/javascript">
                                            function GetItemsCostPrice(itemcode, itemtype) {
                                                $.getJSON("/RetailBill/GetItemsCostPrice", { itemcode: itemcode, itemtype: itemtype },
                                                    function (data) {
                                                        document.getElementById("CostPrice" + @count).value=data;
                                                    });
                                                }
                                                GetItemsCostPrice("@item.ItemCode", "@item.ItemType");
                                            CalculateTaxSummary();
                                        </script>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" style="text-align: center" id="@quantity" name="@quantity" autocomplete="off" placeholder="Qty" value="@item.Quantity" onchange="CalculateAmount(@count,'quantity')" onkeypress="return AllowDecimal(event,@count)"/>
                                        <input type="hidden" id="@prevqty" name="@prevqty" value="@item.Quantity" />
                                    </td>
                                    <td>
                                        <label id="@unit" style="font-weight: normal">@item.Unit</label>
                                        <input type="hidden" id="@unitvalue" name="@unitvalue" value="@item.Unit"/>
                                        <input type="hidden" id="@numbertype" name="@numbertype" value="@item.NumberType"/>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" style="text-align: center" id="@mrp" name="@mrp" disabled="disabled" placeholder="Rate" value="@item.MRP" onchange="CalculateAmount(@count,'')" onkeypress="return AllowNumbers(event)"/>
                                    </td>
                                    <td>
                                        <input type="text" id="@disper" name="@disper" autocomplete="off" class="form-control" placeholder="0%" value="@item.DiscountPercent" style="text-align: center; width: 100%" onchange="CalculateAmount(@count,'percent')" onkeypress="return AllowNumbers(event)"/>
                                    </td>
                                    <td>
                                        <input type="text" id="@disrs" name="@disrs" autocomplete="off" class="form-control" placeholder="0.00" value="@item.DiscountRPS"  style="text-align: center; width: 100%" onchange="CalculateAmount(@count,'rps')" onkeypress="return AllowNumbers(event)"/>
                                    </td>
                                    <td style="text-align: right">
                                        <label style="font-weight: normal" id="@amount">@Convert.ToDouble(item.Amount).ToString("#,###.00##")</label>
                                        <input type="hidden" id="@amountvalue" name="@amountvalue" value="@item.Amount"/>
                                    </td>
                                    <td>
                                        <input type="hidden" id="@billno" name="@billno"  value="@item.BillNo"/>
                                        <input type="hidden" id="@sellingprice" name="@sellingprice"  value="@item.SellingPrice"/>
                                        <input type="hidden" id="@costprice" name="@costprice"/>
                                        <input type="hidden" id="@itemtaxvalue" name="@itemtaxvalue" value="@item.ItemTax" />
                                        <input type="hidden" id="@itemtaxamount" name="@itemtaxamount" value="@item.ItemTaxAmt" />
                                        <input type="hidden" id="@itemcode" name="@itemcode"  value="@item.ItemCode"/>
                                        <input type="hidden" id="@itemtype" name="@itemtype"  value="@item.ItemType"/>
                                        <input type="hidden" id="@colorvalue" name="@colorvalue" value="@item.Color"/>
                                        <input type="hidden" id="@designcode" name="@designcode" value="@item.DesignCode"/>
                                        <input type="hidden" id="@designname" name="@designname" value="@item.DesignName"/>
                                        <input type="hidden" id="@brand" name="@brand" value="@item.Brand"/>
                                        <input type="hidden" id="@size" name="@size" value="@item.Size"/>
                                        <input type="hidden" id="@materialvalue" name="@materialvalue" value="@item.Material"/>
                                        <input type="hidden" id="@descriptionvalue" name="@descriptionvalue" value="@item.Description"/>
                                    </td>
                                </tr>
                                        count++;
                                    }
                                }
                            }
                        </tbody>
                    </table>
                }

            </td>
        </tr>

        <tr>
            <td>
                <button class="btn btn-link" id="NonInvButton" type="button" style="float: right; text-align: right; color: orangered; font-size: small">Non-Inventory Item</button>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-md-5 col-lg-5">

                    <div>
                        <div class="row">
                            <div class="col-md-4 col-lg-4">
                                <label style="font-size: 14px;">Total Discount:</label>
                            </div>
                            <div class="col-md-8 col-lg-8">
                                <i class="fa fa-inr" style="font-size: 14px"></i>
                                @{
                                double Disc = Convert.ToDouble(Model.RetailBillDetails.TotalDiscount);
                                var disc = Disc.ToString("#,###.00##");
                                }
                                <label id="TotalDiscountValue" style="font-size: 14px">@disc</label>
                            </div>
                        </div>
                    </div>

                    <div style="height: 8px"></div>

                    @*TAX SUMMARY WITHOUT QUOTATION*@
                    <div id="AddTaxes">
                        <div class="row">
                            <div class="col-lg-12 col-md-12">
                                <label style="font-size: medium">Tax Summary:</label>
                            </div>
                        </div>
                        @{
                                if (Model.InventoryTaxList.Count() == 0)
                                {
                            <div class="row">
                                <div class="col-md-3 col-lg-3">
                                    <label id="AddedAmount1">0</label>
                                    <input type="hidden" id="AddedAmounthdn1" name="AddedAmounthdn1" value="0" />
                                </div>
                                <div class="col-md-2 col-lg-2">
                                    <label id="AddedTax1"></label>
                                </div>
                                <div class="col-md-7 col-lg-7">
                                    <label id="AddedTaxAmount1">0</label>
                                    <input type="hidden" id="AddedTaxAmounthdn1" name="AddedTaxAmounthdn1" value="0" />
                                </div>
                            </div>
                                }
                                else
                                {
                                    int taxcount = 1;
                                    foreach (var tax in Model.InventoryTaxList)
                                    {
                                        string addedtax = "AddedTax" + taxcount;
                                        string taxnumber = "ItemTaxNumber" + taxcount;
                                        string addedtaxamount = "AddedTaxAmount" + taxcount;
                                        string addedtaxhdn = "AddedTaxAmounthdn" + taxcount;
                                        string addedamount = "AddedAmount" + taxcount;
                                        string addedamounthdn = "AddedAmounthdn" + taxcount;
                                        string itemtax = tax.Tax + "%";
                            <div class="row">
                                <div class="col-md-3 col-lg-3">
                                    <label id="@addedamount"><i class="fa fa-inr"></i>@Convert.ToDouble(tax.Amount).ToString("#,###.00##")</label>
                                    <input type="hidden" id="@addedamounthdn" name="@addedamounthdn" value="@tax.Amount" />
                                </div>
                                <div class="col-md-2 col-lg-2">
                                    <label id="@addedtax">@itemtax</label>
                                    <input type="hidden" id="@taxnumber" name="@taxnumber" value="@tax.Tax" />
                                </div>
                                <div class="col-md-7 col-lg-7">
                                    <label id="@addedtaxamount"><i class="fa fa-inr"></i>@Convert.ToDouble(tax.TaxAmount).ToString("#,###.00##")</label>
                                    <input type="hidden" id="@addedtaxhdn" name="@addedtaxhdn" value="@tax.TaxAmount" />
                                </div>
                            </div>
                                        taxcount++;
                                    }
                                }
                        }
                    </div>
                </div>

                <div class="col-md-7 col-lg-7">
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Total Amount</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
                                double Amt = Convert.ToDouble(Model.RetailBillDetails.TotalAmount);
                                var amt = Amt.ToString("#,###.00##");
                                    }
                                    <label id="Total_Amount" style="font-size: 14px;"><i class="fa fa-inr"></i>@amt</label>
                                    <input type="hidden" id="Total_Amount_Value" name="Total_Amount_Value" value="@Model.RetailBillDetails.TotalAmount" />
                                </div>
                            </div>
                        </div>
                    </div>

                    @* <div style="height: 10px"></div>
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Tax Amount</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
        double TaxAmt = Convert.ToDouble(Model.RetailBillDetails.TotalTaxAmount);
        var taxamt = TaxAmt.ToString("#,###.00##");
                                    }
                                    <label id="TotalTaxAmount" style="font-size: 14px;"><i class="fa fa-inr"></i>@taxamt</label>
                                    <input type="hidden" id="hdnTotalTaxAmount" name="hdnTotalTaxAmount" value="@Model.RetailBillDetails.TotalTaxAmount" />
                                </div>
                            </div>
                        </div>
                    </div>*@
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div style="height: 7px"></div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-lg-5 col-md-5">
                </div>
                <div class="col-lg-7 col-md-7">
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Grand Total</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
                                double GrndTtl = Convert.ToDouble(@Model.RetailBillDetails.GrandTotal);
                                var grndttl = GrndTtl.ToString("#,###.00##");
                                    }
                                    <label id="Grand_Total" style="font-size: 14px;"><i class="fa fa-inr"></i>@grndttl</label>
                                    <input type="hidden" id="Grand_Total_Value" name="Grand_Total_Value" value="@Model.RetailBillDetails.GrandTotal" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-lg-12 col-md-12">
                    <label style="font-size: 14px;">In Words:</label>
                    <label id="In_Words"></label>
                    <script type="text/javascript">
                        document.getElementById("In_Words").innerHTML = NumberToWords();
                    </script>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-lg-5 col-md-5">
                </div>
                <div class="col-lg-7 col-md-7">
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Payment</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
                                string payment = "0";
                                payment = Convert.ToDouble(Model.RetailBillDetails.Payment).ToString("#,###.00##");
                                    }
                                    <label id="Payment" style="font-size: 14px;"><i class="fa fa-inr"></i>@payment</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-lg-5 col-md-5">
                </div>
                <div class="col-lg-7 col-md-7">
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Adjusted Amount</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
                                string adjustedamt = "0";
                                if (Model.RetailBillDetails.AdjustedAmount != 0)
                                {
                                    adjustedamt = Convert.ToDouble(Model.RetailBillDetails.AdjustedAmount).ToString("#,###.00##");
                                }
                                    }
                                    <label id="AdjustedAmount" style="font-size: 14px;"><i class="fa fa-inr"></i>@adjustedamt</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-lg-5 col-md-5">
                </div>
                <div class="col-lg-7 col-md-7">
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Balance</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
                                string balance = "0";
                                balance = Convert.ToDouble(Model.RetailBillDetails.Balance).ToString("#,###.00##");
                                    }
                                    <label id="BalanceValue" style="font-size: 14px;"><i class="fa fa-inr"></i>@balance</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-lg-5 col-md-5">
                </div>
                <div class="col-lg-7 col-md-7">
                    <div class="col-lg-12 col-md-12">
                        <div class="col-md-5 col-lg-5" style="text-align: right">
                            <label style="font-size: 14px;">Refund</label>
                        </div>
                        <div class="col-md-7 col-lg-7" style="text-align: right">
                            <div class="row">
                                <div class="row">
                                    @{
                                string refund = "0";
                                refund = Convert.ToDouble(Model.RetailBillDetails.Refund).ToString("#,###.00##");
                                    }
                                    <label id="RefundValue" style="font-size: 14px;"><i class="fa fa-inr"></i>@refund</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="col-ld-12 col-md-12">
                    <div style="width: 100%; height: 1px; background-color: lightgrey;"></div>
                    <div style="height: 10px"></div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="col-md-12 col-lg-12" id="acceptedid">
                    <div style="height: 7px"></div>
                    <div class="row">
                        <div class="col-md-3 col-lg-3">
                            <label>Prepared By</label><br />
                            <label id="PreparedByName" style="font-weight: normal"></label>
                        </div>
                        <div class="col-md-4 col-lg-4">
                            <label>Email-Id</label><br />
                            <label id="PreparedByEmail" style="font-weight: normal"></label>
                        </div>
                        <div class="col-md-3 col-lg-3">
                            <label>Contact No.</label><br />
                            <label id="PreparedByContact" style="font-weight: normal"></label>
                        </div>
                        @{
                                string preparetimeid = DateTime.Now.ToShortTimeString();
                        }
                        <div class="col-md-2 col-lg-2">
                            <label>Prepare Time</label><br />
                            <label style="font-weight: normal">@preparetimeid</label>
                        </div>
                        <div style="height: 70px"></div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
    <div style="height: 10px"></div>
    <div class="col-md-9 col-lg-9">
        <button type="submit" id="Update" class="col-lg-offset-7 col-md-offset-7 btn btn-success">Update</button>
    </div>

}
