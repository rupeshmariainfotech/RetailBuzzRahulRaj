@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "Create";
}

<!-- Meta, title, CSS, favicons, etc. -->
<meta charset="utf-8" />
<title>Retail Managment Software</title>
<meta name="keywords" content="Retail Software"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<!-- Font CSS  -->
<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700" />
<link href="~/Content/style.default.css" rel="stylesheet" />
<link href="~/Content/style.default.blue.css" rel="stylesheet" />
<!-- Core CSS  -->
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.min.css" />
<link rel="stylesheet" type="text/css" href="~/Content/sb-admin-2.css" />
<link rel="stylesheet" type="text/css" href="~/Content/metisMenu.min.css"/>
<link rel="stylesheet" type="text/css" href="~/Content/font-awesome.css" />
<link rel="stylesheet" type="text/css" href="~/fonts/glyphicons.min.css" />

<!-- Plugin CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/fullcalendar.css" />
<link rel="stylesheet" type="text/css" href="~/Content/datatables.min.css" />
<link rel="stylesheet" type="text/css" href="~/Content/animate.css" />

<!-- Theme CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/theme.css"/>
<link rel="stylesheet" type="text/css" href="~/Content/pages.css"/>
<link rel="stylesheet" type="text/css" href="~/Content/plugins.css" />
<link rel="stylesheet" type="text/css" href="~/Content/responsive.css" />

<!-- Demonstration CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/demo.css" />

<!-- Your Custom CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/custom.css" />

<!-- Favicon -->
<link rel="shortcut icon" href="~/Images/favicon.ico" />

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

<!-- Plugins - Via CDN -->
<script type="text/javascript" src="~/Scripts/jquery.flot.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.sparkline.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="~/Scripts/fullcalendar.min.js"></script>
<script type="text/javascript" src="~/Scripts/bootstrap.js"></script>


<script type="text/javascript" src="~/Scripts/jquery.scrollTo-1.4.3.1-min.js"></script>

<!-- Theme Javascript -->
<script type="text/javascript" src="~/Scripts/uniform.min.js"></script>
<script type="text/javascript" src="~/Scripts/main.js"></script>
<script type="text/javascript" src="~/Scripts/custom.js"></script>
<script type="text/javascript" src="~/Scripts/sb-admin-2.js"></script>
<script type="text/javascript" src="~/vendor/plugins/metisMenu/metisMenu.min.js"></script>

<script type="text/javascript">
    jQuery(document).ready(function () {

        // Init Theme Core 	  
        Core.init();

        // Create an example page animation. Really
        // not suitable for production enviroments
        var headerAnimate = setTimeout(function () {
            // Animate Header from Top
            $('header').css("display", "block").addClass('animated bounceInDown');
        }, 300);

        // Add an aditional delay to hide the loading spinner
        // and animate body content from bottom of page
        var bodyAnimate = setTimeout(function () {
            // hide spinner
            $('#page-loader').css("display", "none");

            // show body and animate from bottom. At end of animation 
            // add several css properties because the animation will bug 
            // existing psuedo backgrounds(:after)
            $('#main').css("display", "block").one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {
                $('body').css({ background: "#E6E6E6", overflow: "visible" });
                $('#content, #sidebar').addClass('refresh');
                // Init sparkline animations
                sparkload();
            });
        }, 1150);

        // Init Datatables
        $('#datatable, #datatable_2').dataTable({
            "bSort": true,
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": false,
            "bInfo": false,
            "bAutoWidth": false,
            "aoColumnDefs": [{ 'bSortable': false, 'aTargets': [-1] }]
        });


        $.ajax({
            url: '/Supplier/CreateBankDetail',
            type: "GET",
            success: function (data)
            {
                $("#BankPartialView").html(data);
            }
        });

    });  
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("select").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("textarea").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
    });
</script>
<script type ="text/javascript">
    $(document).ready(function () {
        $("#ddlcountry").val("India").attr('selected','selected');
        $("#ddlcountry").change(function () {
            var idmodel = $(this).val();
            $.getJSON("/Supplier/LoadStateByCountry", { countryname: idmodel },
            function (Data) {
                var select = $("#ddlstate");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Select State"
                }));
                
                $.each(Data, function (index, itemData) {
                    
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });
        });
    });
</script>
<script type ="text/javascript">
    $(document).ready(function () {
        $("#ddlstate").change(function () {
            var idmodel = $(this).val();
            $.getJSON("/Supplier/LoadDistrictByState", { statename: idmodel },
            function (Data) {
                var select = $("#ddldistrict");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Select District"
                }));

                $.each(Data, function (index, itemData) {

                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#SupplierDetails_Email").change(function () {
            var idmodel = $(this).val();
            $.getJSON("/Supplier/ValidateEmail", { mail: idmodel },
            function (Data) {
                if (Data == "success") {
                    document.getElementById("errormsg").style.display = "inline"
                    document.getElementById("errormsg").innerHTML = "Email Id Is Already Registered!!!";
                    $("#SupplierDetails_Email").val('');
                }
                else {
                    document.getElementById("errormsg").style.display = "none"
                    document.getElementById('errormsg').innerHTML = "";
                }
            });
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#Submit").click(function () {
            var idmodel = document.getElementById('SupplierDetails_Email').value;
            $.getJSON("/Supplier/ValidateEmail", { mail: idmodel },
            function (Data) {
                if (Data == "success") {
                    document.getElementById("errormsg").style.display = "inline"
                    document.getElementById("errormsg").innerHTML = "Email Id Is Already Registered!!!";
                    $("#SupplierDetails_Email").val('');
                }
                else {
                    document.getElementById("errormsg").style.display = "none"
                    document.getElementById('errormsg').innerHTML = "";
                }
            });
        });
    });
</script>
<script type="text/javascript">
    function buttonclick() {
        $.ajax({
            url: '/Supplier/CreateBankDetail',
            type: "POST",
            data: {
                bankname: document.getElementById("ddlBankNames").value,
                branch:document.getElementById("ddlBankbranches").value,
                suppliercode: document.getElementById("suppliercode").value,
                bankifscno: document.getElementById("SupplierBankDetails_BankIFSCNo").value,
                bankaddress: document.getElementById("SupplierBankDetails_BankAddress").value,
                accountno: document.getElementById("SupplierBankDetails_AccountNo").value,
                accounttype: document.getElementById("SupplierBankDetails_AccountType").value,
            },
            success: function (data) {
                $("#BankPartialView").html(data);
            }
        });
    }
</script>

<script type="text/javascript">
    $(function () {
        $("#SupplierDetails_SupplierName").autocomplete({
            source: "/Supplier/GetSupplierNames",
            minLength: 1,
            select: function (event, ui) {
                if (ui.item) {
                    $("#SupplierDetails_SupplierName").val(ui.item.value);
                }
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#Submit").click(function () {
            var idmodel = document.getElementById('SupplierDetails_SupplierName').value;
            $.getJSON("/Supplier/ValidateSupplierName", { suppliername: idmodel },
            function (Data) {
                if (Data == "success") {
                    document.getElementById("errorname").style.display = "inline"
                    document.getElementById("errorname").innerHTML = "Name Already Present!!!";
                    $("#SupplierDetails_SupplierName").val('');
                }
                else {
                    document.getElementById("errorname").style.display = "none"
                    document.getElementById('errorname').innerHTML = "";
                }
            });
        });
    });
</script>

@*FOR SAVE MULTIPLE DROP DOWN LIST VALUES*@
<script type="text/javascript">
    function check() {

        var selectedValues = $('#ddltypesupplier').val();
        $('input[id=DDLTypeSupplier]').val(selectedValues);
    }
</script>

<!-- Start: Header -->
 @Html.Partial("../Shared/Header")
<!-- End: Header --> 
<section>
    <div class="mainwrapper">
        @Html.Partial("../Shared/LeftMenu")
        @using (Html.BeginForm("Create", "Supplier", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.SupplierDetails.SupplierCode)
            <div class="mainpanel">
               
                    <div class="col-md-12 col-lg-12">
                         <div id="topbar">
                    <ol class="breadcrumb">
                        <li><a href="#"><i class="fa fa-home"></i></a></li>
                        <li><a href="index.html">Home</a></li>
                        <li class="active">Dashboard</li>
                    </ol>
                </div>
                <br />
                <h2>Supplier Details</h2>
                     <div style="height: 15px"></div>
                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group row">
                                    <label for="exampleInputname">Supplier Name<label style="color:red">*</label></label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.SupplierName, new { @placeholder = "Supplier Name", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.SupplierName, null, new { style = "color:red" })
                                    <label id="errorname" class="error" style="display: none"></label>
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputTypeofname">Type Of Supplier<label style="color:red">*</label></label>
                                    @Html.DropDownListFor(model => model.SupplierDetails.SupplierType, new SelectList(Model.ItemSubCategoryList, "subCategoryName", "subCategoryName"), new { id="ddltypesupplier", @class = "form-control", multiple = "multiple", style = "height:108px"})
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.SupplierType, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputCountry">Country</label>
                                    @Html.DropDownListFor(model => model.SupplierDetails.country, new SelectList(Model.SupplierDetails.CountriesList, "countryName", "countryName"), "Select Country", new { id = "ddlcountry", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.country, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputState">State<label style="color:red">*</label></label>
                                    @Html.DropDownListFor(model => model.SupplierDetails.states, new SelectList(Model.SupplierDetails.StatesList, "StateName", "StateName"), "Select State", new { id = "ddlstate", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.states, null, new { style = "color:red" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                 <div class="form-group row">
                                    <label for="exampleInputDistrict">District<label style="color:red">*</label></label>
                                    @Html.DropDownListFor(model => model.SupplierDetails.district, Enumerable.Empty<SelectListItem>(), "Select District", new { id = "ddldistrict", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.district, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputCity">City<label style="color:red">*</label></label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.city, new { @placeholder = "City", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.city, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputAddress">Address<label style="color:red">*</label></label>
                                    @Html.TextAreaFor(model => model.SupplierDetails.Address, new { @placeholder = "Address", @class = "form-control", @rows = 1 })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.Address, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputPincode">Pincode</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.Pincode, new { @placeholder = "PinCode", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.Pincode, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputContact">Mobile No. 1<label style="color:red">*</label></label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.ContactNo1, new { @placeholder = "Mobile No. 1", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.ContactNo1, null, new { style = "color:red" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                 <div class="form-group row">
                                    <label for="exampleInputContact">Mobile No. 2</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.ContactNo2, new { @placeholder = "Mobile No. 2", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.ContactNo2, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputContact">LandLine No</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.ContactNo3, new { @placeholder = "LandLine No", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.ContactNo3, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputEmail">Email<label style="color:red">*</label></label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.Email, new { @placeholder = "Email", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.Email, null, new { style = "color:red" })
                                    <label id="errormsg" class="error" style="display: none"></label>
                                </div>
                                <div class=" form-group row">
                                    <label for="exampleInputWebsite">Website</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.Website, new { @placeholder = "Website", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.Website, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputSalesTax">Sales Tax No</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.STNo, new { @placeholder = "STNo", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.STNo, null, new { style = "color:red" })
                                </div>
                            </div>
                        </div>

                        <div class=" col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group row">
                                    <label for="exampleInputGST">GST</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.OtherTax, new { @placeholder = "GST", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.OtherTax, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputVAT">VAT No</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.VTNo, new { @placeholder = "VTNo", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.VTNo, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputTDS">TDS</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.TDSNo, new { @placeholder = "TDSNo", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.TDSNo, null, new { style = "color:red" })
                                </div>
                                <div class=" form-group row">
                                    <label for="exampleInputPANNo">Pancard</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.pancard, new { @placeholder = "Pancard", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.pancard)
                                </div>
                                <div class=" form-group row">
                                    <a href="~/Attchment/e_CST_Application.xls" style="color:dodgerblue;font-weight: bolder;">Attchment(CST,El&Ell)</a>
                                </div>
                            </div>
                        </div>
           </div>
                <div class="col-md-12 col-lg-12">
                    <hr />
                    <div class="col-md-12 col-lg-12">
                        <div id="BankPartialView"></div>

                    </div>
                                    </div>
                 <div class="col-md-12 col-lg-12">
                    <br />
                    <div class="col-md-offset-4 col-lg-offset-4">
                        <input type="button" id="Add Another Bank" value="Add Another Bank" class="btn btn-link" style="color: dodgerblue; font-weight: bolder;" onclick="buttonclick()" />
                    </div>

                    <div class="col-md-offset-5 col-lg-offset-5">
                        <button type="submit" class="btn btn-success" id="Submit" onclick="check();">Create</button>
                    </div>


                    <br />
                    <input type="hidden" id="DDLTypeSupplier" name="DDLTypeSupplier" value="" />
                     </div>
                       </div>          
        }
    </div>
</section>
 @* <section>
        <div class="mainwrapper">
<!-- Start: Main -->
<div id="main">
    <!-- Start: Sidebar -->
    @Html.Partial("../Shared/LeftMenuNew")
    <!-- End: Sidebar -->
    <!-- Start: Content -->
    @using (Html.BeginForm("Create", "Supplier", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.SupplierDetails.SupplierCode)
        <section id="content">
            <div class="container">
                <div id="topbar">
                    <ol class="breadcrumb">
                        <li><a href="#"><i class="fa fa-home"></i></a></li>
                        <li><a href="index.html">Home</a></li>
                        <li class="active">Dashboard</li>
                    </ol>
                </div>
                <br />
                <h2>Supplier Details</h2>
                <div class="col-md-12 col-lg-12">
                    <div class="row">
                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group row">
                                    <label for="exampleInputname">Supplier Name<label style="color:red">*</label></label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.SupplierName, new { @placeholder = "Supplier Name", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.SupplierName, null, new { style = "color:red" })
                                    <label id="errorname" class="error" style="display: none"></label>
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputTypeofname">Type Of Supplier<label style="color:red">*</label></label>
                                    @Html.DropDownListFor(model => model.SupplierDetails.SupplierType, new SelectList(Model.ItemSubCategoryList, "subCategoryName", "subCategoryName"), new { id="ddltypesupplier", @class = "form-control", multiple = "multiple", style = "height:108px"})
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.SupplierType, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputCountry">Country</label>
                                    @Html.DropDownListFor(model => model.SupplierDetails.country, new SelectList(Model.SupplierDetails.CountriesList, "countryName", "countryName"), "Select Country", new { id = "ddlcountry", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.country, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputState">State<label style="color:red">*</label></label>
                                    @Html.DropDownListFor(model => model.SupplierDetails.states, new SelectList(Model.SupplierDetails.StatesList, "StateName", "StateName"), "Select State", new { id = "ddlstate", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.states, null, new { style = "color:red" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                 <div class="form-group row">
                                    <label for="exampleInputDistrict">District<label style="color:red">*</label></label>
                                    @Html.DropDownListFor(model => model.SupplierDetails.district, Enumerable.Empty<SelectListItem>(), "Select District", new { id = "ddldistrict", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.district, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputCity">City<label style="color:red">*</label></label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.city, new { @placeholder = "City", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.city, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputAddress">Address<label style="color:red">*</label></label>
                                    @Html.TextAreaFor(model => model.SupplierDetails.Address, new { @placeholder = "Address", @class = "form-control", @rows = 1 })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.Address, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputPincode">Pincode</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.Pincode, new { @placeholder = "PinCode", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.Pincode, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputContact">Mobile No. 1<label style="color:red">*</label></label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.ContactNo1, new { @placeholder = "Mobile No. 1", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.ContactNo1, null, new { style = "color:red" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                 <div class="form-group row">
                                    <label for="exampleInputContact">Mobile No. 2</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.ContactNo2, new { @placeholder = "Mobile No. 2", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.ContactNo2, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputContact">LandLine No</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.ContactNo3, new { @placeholder = "LandLine No", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.ContactNo3, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputEmail">Email<label style="color:red">*</label></label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.Email, new { @placeholder = "Email", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.Email, null, new { style = "color:red" })
                                    <label id="errormsg" class="error" style="display: none"></label>
                                </div>
                                <div class=" form-group row">
                                    <label for="exampleInputWebsite">Website</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.Website, new { @placeholder = "Website", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.Website, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputSalesTax">Sales Tax No</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.STNo, new { @placeholder = "STNo", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.STNo, null, new { style = "color:red" })
                                </div>
                            </div>
                        </div>

                        <div class=" col-md-3 col-lg-3">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group row">
                                    <label for="exampleInputGST">GST</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.OtherTax, new { @placeholder = "GST", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.OtherTax, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputVAT">VAT No</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.VTNo, new { @placeholder = "VTNo", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.VTNo, null, new { style = "color:red" })
                                </div>
                                <div class="form-group row">
                                    <label for="exampleInputTDS">TDS</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.TDSNo, new { @placeholder = "TDSNo", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.TDSNo, null, new { style = "color:red" })
                                </div>
                                <div class=" form-group row">
                                    <label for="exampleInputPANNo">Pancard</label>
                                    @Html.TextBoxFor(model => model.SupplierDetails.pancard, new { @placeholder = "Pancard", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierDetails.pancard)
                                </div>
                                <div class=" form-group row">
                                    <a href="~/Attchment/e_CST_Application.xls" style="color:dodgerblue;font-weight: bolder;">Attchment(CST,El&Ell)</a>
                                </div>
                            </div>
                        </div>

                    </div>
                    <hr />
                    <div id="BankPartialView"></div>

                </div>

                <br />
                <div class="row">
                    <div class="col-md-offset-4 col-lg-offset-4">
                        <input type="button" id="Add Another Bank" value="Add Another Bank" class="btn btn-link" style="color: dodgerblue; font-weight: bolder;" onclick="buttonclick()" />
                    </div>

                    <div class="col-md-offset-5 col-lg-offset-5">
                        <button type="submit" class="btn btn-success" id="Submit" onclick="check();">Create</button>
                    </div>
                </div>

                <br />
                <input type="hidden" id="DDLTypeSupplier" name="DDLTypeSupplier" value="" />

            </div>
        </section>
    }
</div>
                 
</div>
      </section>*@

<!-- End: Main --> 

