@model CodeFirstEntities.SupplierBankDetail
@{
    ViewBag.Title = "PopUpPage";
}

<link href="~/Content/bootstrap.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.min.css" />

<!-- Theme CSS -->
<link rel="stylesheet" type="text/css" href="~/Content/theme.css" />
<!-- Plugins - Via CDN -->
<script type ="text/javascript" src="@Url.Content("~/Scripts/jquery-1.9.1.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>

<script type="text/javascript" src="~/Scripts/bootstrap.js"></script>
<link href="~/Content/customAlerts.css" rel="stylesheet" />
<script src="~/Scripts/bootbox.js"></script>

<script type="text/javascript">
    function alertbox(message) {
        var sample = document.getElementById("audio");
        sample.src = '../../Audio/tone1.ogg';

        sample.load();
        sample.muted = false;
        sample.play();

        bootbox.classes('alertClass');
        bootbox.alert('<i class="fa fa-2x fa-warning"></i><br>' + message + '<hr>');
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("select").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("textarea").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlBankNames").change(function () {
            var modeldata = $(this).val();
            if (modeldata != "") {
                $.getJSON("/Supplier/GetBranch", { BankName: modeldata },
                function (Data) {
                    var select = $("#ddlBankbranches");
                    select.empty();
                    select.append($('<option/>', {
                        value: "",
                        text: "Select Branch"
                    }));
                    $.each(Data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                    document.getElementById("DisplayBranch").style.display = "inline";
                });
            }
            else {
                document.getElementById("DisplayBranch").style.display = "none";
                document.getElementById("DisplayAllValues").style.display = "none";
                document.getElementById("Display").style.display = "none";
                document.getElementById("DisplayMICR").style.display = "none";
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlBankbranches").change(function () {
            var idmodel = $(this).val();
            if (idmodel != "") {
                $.ajax({
                    url: '/Supplier/GetIFSCNoAndAddress',
                    type: "GET",
                    data: { branch: idmodel },
                    success: function (data) {
                        document.getElementById("DisplayAllValues").style.display = "inline";
                        document.getElementById("Display").style.display = "inline";
                        document.getElementById("DisplayMICR").style.display = "inline";
                        $("#BankAddress").val(data.BankAddress);
                        $("#BankIFSCNo").val(data.IFSCNo)
                        $("#MICRCode").val(data.Micr);
                        document.getElementById("SupplierBankDetails.BankAddress").innerHTML = data.BankAddress;
                        document.getElementById("SupplierBankDetails.BankIfscno").innerHTML = data.IFSCNo;
                        document.getElementById("Add New Bank").style.display = "inline";
                        document.getElementById("Add Final Bank").style.display = "inline";
                    }
                });
            }
            else {
                document.getElementById("DisplayAllValues").style.display = "none";
                document.getElementById("Display").style.display = "none";
                document.getElementById("DisplayMICR").style.display = "none";
            }
        });
    });
</script>

<script type="text/javascript">
    function check(value) {

        var micrcode = $("#MICRCode").val();
        if (micrcode != "") {
            if (micrcode.length != 9) {
                alertbox("MICR Code Length Must Be 9");
                return false;
            }
        }

        var accno = $("#AccountNo").val();
        if (accno.length < 10 || accno.length > 25) {
            alertbox("Account No Must Be Between 10 And 25");
            return false;
        }

        if ($("#AccountType").val() == "")
        {
            alertbox("Please Select The Account Type");
            return false;
        }

        $.ajax({
            url: '/Supplier/PopUpPage',
            type: "POST",
            data: {
                branch: document.getElementById("ddlBankbranches").value,
                bankname: document.getElementById("ddlBankNames").value,
                suppliercode: document.getElementById("SupplierCode").value,
                bankifscno: document.getElementById("BankIFSCNo").value,
                bankaddress: document.getElementById("BankAddress").value,
                accountno: document.getElementById("AccountNo").value,
                accounttype: document.getElementById("AccountType").value,
                micr: document.getElementById("MICRCode").value,
            },
            success: function (data) {
                if (value == "New Bank") {
                    window.location.reload();
                }
                else {
                    $.getJSON("/Supplier/UpdatedBankDetails", { suppliercode: document.getElementById("SupplierCode").value },
                            function (data) {
                                var select = window.parent.opener.document.getElementById("ddlsupplierbanknames");
                                select.options.length = 0;
                                var option = document.createElement("option");
                                option.value = "";
                                option.text = "Select Bank";
                                select.appendChild(option);
                                $.each(data, function (index, itemData) {
                                    var option1 = document.createElement("option");
                                    option1.value = itemData.Value;
                                    option1.text = itemData.Text;
                                    select.appendChild(option1);

                                });
                                window.close();
                            });
                }
            }
        });
    }
</script>

@Html.HiddenFor(model => model.SupplierCode)
@Html.HiddenFor(model => model.BankAddress)
@Html.HiddenFor(model => model.BankIFSCNo)
@Html.ValidationSummary(true)

<audio id="audio" muted="true" preload="auto" style="display: none" controls="controls" autoplay="false">
    <source src="" type="audio/ogg" />
</audio>

<div class="container">
    <div class="form-group"></div>
    <div class="col-sm-12">
        <div class="row">
            <div class="form-group"></div>
            <div class="col-xs-4">
                <div class="col-xs-12">
                    <div class="form-group row">
                        <label for="exampleInputBankName">Bank Name</label>
                        @Html.DropDownListFor(model => model.BankName, new SelectList(Model.BankNameList, "bankName", "bankName"), "Select Bank", new { id = "ddlBankNames", @placeholder = "BankName", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BankName, null, new { style = "color:red" })
                    </div>
                    <div class="form-group row">
                        <div style="display: none" id="DisplayBranch">
                            <label for="exampleInputBranch">Branch<i style="color: red">*</i></label>
                            @Html.DropDownListFor(model => model.Branch, Enumerable.Empty<SelectListItem>(), "Select Branch", new { id = "ddlBankbranches", @placeholder = "Branch", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Branch, null, new { style = "color:red" })
                        </div>
                    </div>

                </div>
            </div>

            <div class="col-xs-4">
                <div class="col-xs-12">
                    <div id="DisplayAllValues" style="display: none">
                        <div class="col-xs-12">
                            <div class="form-group row">
                                <div class="form-group">
                                    <label>Bank IFSCNo</label><br />
                                    <label id="SupplierBankDetails.BankIfscno" style="font-weight: normal"></label>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputBankLocation">Bank Location</label><br />
                                <label id="SupplierBankDetails.BankAddress" style="font-weight: normal"></label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xs-4">
                <div class="col-xs-12">
                    <div id="Display" style="display: none">
                        <div class="form-group row">
                            <label for="exampleInputAccountType">Account Type<i style="color: red">*</i></label>
                            @Html.DropDownListFor(model => model.AccountType, new List<SelectListItem> { new SelectListItem { Text = "Current" }, new SelectListItem { Text = "Savings" } }, "Account Type", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountType, null, new { style = "color:red" })
                        </div>
                        <div class="form-group row">
                            <label for="exampleInputAccountNo">Account No<i style="color: red">*</i></label>
                            @Html.TextBoxFor(model => model.AccountNo, new { @placeholder = "Account No", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountNo, null, new { style = "color:red" })
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-xs-4">
                <div class="col-xs-12">
                    <div id="DisplayMICR" style="display: none">
                        <div class="form-group row">
                            <label for="exampleInputAccountNo">MICR Code</label>
                            @Html.TextBoxFor(model => model.MICRCode, new { @placeholder = "MICR Code", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MICRCode, null, new { style = "color:red" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-8"></div>
        </div>

        <div class="row">
            <div class="col-xs-3"></div>
            <div class="col-xs-1">
                <button type="submit" id="Add New Bank" name="Submit" style="display: none" onclick="check('New Bank')" class=" btn btn-info">Add New Bank</button>
            </div>
            <div class="col-xs-2"></div>
            <div class="col-xs-1">
                <button type="submit" id="Add Final Bank" name="Submit" style="display: none" onclick="check('Final Bank')" class=" btn btn-info">Add Final Bank</button>
            </div>
        </div>
    </div>

</div>

