@model CodeFirstEntities.MainApplication
@{
    ViewBag.Title = "UpdateBankDetail";
}
<script type="text/javascript">
    $(document).ready(function () {
        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("select").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("textarea").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {

        $("#TransportBankDetails_MICRCode").change(function () {
            var micr = $(this).val();
            micr = micr.replace(/ /g, '');
            $("#TransportBankDetails_MICRCode").val(micr);
        });

        $("#ddlBankNames").change(function () {
            var modeldata = $(this).val();
            if (modeldata != "") {
                document.getElementById("DisplayBranch").style.display = "inline";
                document.getElementById("DisplayValues").style.display = "none";
                document.getElementById("bankAddr").innerHTML = "";
                document.getElementById("bankifscno").innerHTML = "";
                document.getElementById("TransportBankDetails_MICRCode").value = "";
                $("#TransportBankDetails_AccountType").val("").attr("selected", true);
                document.getElementById("TransportBankDetails_AccountNo").value = "";

                $.getJSON("/Transport/GetBranch", { BankName: modeldata },
                function (Data) {
                    var select = $("#ddlBankbranches");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "Select Branch"
                    }));
                    $.each(Data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                });
            }
            else {
                document.getElementById("DisplayBranch").style.display = "none";
                document.getElementById("DisplayValues").style.display = "none";
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlBankbranches").change(function () {
            var idmodel = $(this).val();
            if (idmodel != "") {
                document.getElementById("DisplayValues").style.display = "inline";
                $.ajax({
                    url: '/Transport/GetIFSCNoAndAddress',
                    type: "GET",
                    data: { branch: idmodel },
                    success: function (data) {
                        $("#TransportBankDetails_BankAddress").val(data.BankAddress);
                        $("#TransportBankDetails_BankIFSCNo").val(data.IFSCNo);
                        document.getElementById("bankAddr").style.display = "none";
                        document.getElementById("bankifscno").style.display = "none";
                        document.getElementById("TransportDetailsBankAddress").innerHTML = data.BankAddress;
                        document.getElementById("TransportDetailsBankIFSCNo").innerHTML = data.IFSCNo;
                        $("#TransportBankDetails_MICRCode").val(data.Micr);
                    }
                });
        }
        else {
        document.getElementById("DisplayValues").style.display = "none";
            }
        });
    });
</script>
@Html.HiddenFor(model => model.TransportBankDetails.BankId)
@Html.HiddenFor(model => model.TransportBankDetails.TransportCode)
@Html.HiddenFor(model => model.TransportBankDetails.BankAddress)
@Html.HiddenFor(model => model.TransportBankDetails.BankIFSCNo)
<div class="row">
    <div id="title1" style="position: absolute; font-family: Arial; font-size: 16px; text-decoration: underline; text-align: left;">
        <h2>
            <label for="exampleInputname">Bank Details</label></h2>
    </div>
    <br />
    <br />

    <div class="col-md-3 col-lg-3">
        <div class="col-md-12 col-lg-12">
            <div class="form-group row">
                <label for="exampleInputBankName">Bank Name</label>
                @Html.DropDownListFor(model => model.TransportBankDetails.BankName, new SelectList(Model.TransportBankDetails.BankNameList, "bankName", "bankName", Model.TransportBankDetails.BankName), "Select Bank", new { id = "ddlBankNames", @placeholder = "BankName", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TransportBankDetails.BankName, null, new { style = "color:red" })
            </div>
            <div class="row">
                <div id="DisplayBranch">
                    <label for="exampleInputBranch">Branch<i style="color:red">*</i></label>
                    @Html.DropDownListFor(model => model.TransportBankDetails.Branch, new SelectList(Model.TransportBankDetails.BankBranchList, "Branch", "Branch", Model.TransportBankDetails.Branch), "Select", new { id = "ddlBankbranches", @placeholder = "Branches", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TransportBankDetails.Branch, null, new { style = "color:red" })
                </div>
            </div>
        </div>
    </div>

    <div id="DisplayValues">
        <div class="col-md-3 col-lg-3">
            <div class="col-md-12 col-lg-12">
                <div class="form-group row">
                    <div class="form-group">
                        <label>Bank IFSCNo</label><br />
                        <label id="TransportDetailsBankIFSCNo" style="font-weight: normal"></label>
                        @{
                            string ifscno = Model.TransportBankDetails.BankIFSCNo;
                            <label id="bankifscno" style="font-weight: normal">@ifscno</label>
                        }
                    </div>
                </div>
                <div class="form-group row">
                    <label for="exampleInputBankLocation">Bank Location</label><br />
                    <label id="TransportDetailsBankAddress" style="font-weight: normal"></label>
                    @{
                        string address = Model.TransportBankDetails.BankAddress;
                        <label id="bankAddr" style="font-weight: normal">@address</label>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-3 col-lg-3">
            <div class="col-md-12 col-lg-12">
                <div class="form-group row">
                    <label for="exampleInputAccountType">Account Type<i style="color:red">*</i></label>
                    @Html.DropDownListFor(model => model.TransportBankDetails.AccountType, new List<SelectListItem> { new SelectListItem { Text = "Current" }, new SelectListItem { Text = "Savings" } }, "Account Type", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TransportBankDetails.AccountType, null, new { style = "color:red" })
                </div>
                <div class="row">
                    <label for="exampleAccountNo">Account Number<i style="color:red">*</i></label>
                    @Html.TextBoxFor(model => model.TransportBankDetails.AccountNo, new { @placeholder = "Account Number", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TransportBankDetails.AccountNo, "", new { style = "color:red" })
                </div>
            </div>
        </div>

        <div class="col-md-3 col-lg-3">
            <div class="col-md-12 col-lg-12">
                <div class="row">
                    <label for="exampleAccountNo">MICR Code</label>
                    @Html.TextBoxFor(model => model.TransportBankDetails.MICRCode, new { @placeholder = "MICR Code", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TransportBankDetails.MICRCode, "", new { style = "color:red" })
                </div>
            </div>
        </div>

    </div>
</div>
<div class="col-lg-offset-4">
    @*if updatebank button gets clicked then update bankdetails only by sending no *@
    <input type="button" id="Update Bank" value="Update Bank" class="btn btn-link" style="color: dodgerblue; font-weight: bolder;" onclick="buttonclick('No')" />
</div>
